import{_ as n,c as a,a as l,w as p,b as o,r as e,o as c,d as t}from"./app.ee9f1e16.js";const r="/vue2/assets/event-loop.3b3d2817.png",k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"nextTick","slug":"nexttick","link":"#nexttick","children":[]},{"level":2,"title":"JS \u8FD0\u884C\u673A\u5236","slug":"js-\u8FD0\u884C\u673A\u5236","link":"#js-\u8FD0\u884C\u673A\u5236","children":[]},{"level":2,"title":"Vue \u7684\u5B9E\u73B0","slug":"vue-\u7684\u5B9E\u73B0","link":"#vue-\u7684\u5B9E\u73B0","children":[]},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3","link":"#\u603B\u7ED3","children":[]}],"relativePath":"proxy/5.md"}'),F={name:"proxy/5.md"},y=o('<h2 id="nexttick" tabindex="-1">nextTick <a class="header-anchor" href="#nexttick" aria-hidden="true">#</a></h2><p>nextTick \u662F Vue \u7684\u4E00\u4E2A\u6838\u5FC3\u5B9E\u73B0\uFF0C\u5728\u4ECB\u7ECD Vue \u7684 nextTick \u4E4B\u524D\uFF0C\u4E3A\u4E86\u65B9\u4FBF\u5927\u5BB6\u7406\u89E3\uFF0C\u6211\u5148\u7B80\u5355\u4ECB\u7ECD\u4E00\u4E0B JS \u7684\u8FD0\u884C\u673A\u5236\u3002</p><h2 id="js-\u8FD0\u884C\u673A\u5236" tabindex="-1">JS \u8FD0\u884C\u673A\u5236 <a class="header-anchor" href="#js-\u8FD0\u884C\u673A\u5236" aria-hidden="true">#</a></h2><p>JS \u6267\u884C\u662F\u5355\u7EBF\u7A0B\u7684\uFF0C\u5B83\u662F\u57FA\u4E8E\u4E8B\u4EF6\u5FAA\u73AF\u7684\u3002\u4E8B\u4EF6\u5FAA\u73AF\u5927\u81F4\u5206\u4E3A\u4EE5\u4E0B\u51E0\u4E2A\u6B65\u9AA4\uFF1A</p><ul><li><p>\uFF081\uFF09\u6240\u6709\u540C\u6B65\u4EFB\u52A1\u90FD\u5728\u4E3B\u7EBF\u7A0B\u4E0A\u6267\u884C\uFF0C\u5F62\u6210\u4E00\u4E2A\u6267\u884C\u6808\uFF08execution context stack\uFF09\u3002</p></li><li><p>\uFF082\uFF09\u4E3B\u7EBF\u7A0B\u4E4B\u5916\uFF0C\u8FD8\u5B58\u5728\u4E00\u4E2A&quot;\u4EFB\u52A1\u961F\u5217&quot;\uFF08task queue\uFF09\u3002\u53EA\u8981\u5F02\u6B65\u4EFB\u52A1\u6709\u4E86\u8FD0\u884C\u7ED3\u679C\uFF0C\u5C31\u5728&quot;\u4EFB\u52A1\u961F\u5217&quot;\u4E4B\u4E2D\u653E\u7F6E\u4E00\u4E2A\u4E8B\u4EF6\u3002</p></li><li><p>\uFF083\uFF09\u4E00\u65E6&quot;\u6267\u884C\u6808&quot;\u4E2D\u7684\u6240\u6709\u540C\u6B65\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u7CFB\u7EDF\u5C31\u4F1A\u8BFB\u53D6&quot;\u4EFB\u52A1\u961F\u5217&quot;\uFF0C\u770B\u770B\u91CC\u9762\u6709\u54EA\u4E9B\u4E8B\u4EF6\u3002\u90A3\u4E9B\u5BF9\u5E94\u7684\u5F02\u6B65\u4EFB\u52A1\uFF0C\u4E8E\u662F\u7ED3\u675F\u7B49\u5F85\u72B6\u6001\uFF0C\u8FDB\u5165\u6267\u884C\u6808\uFF0C\u5F00\u59CB\u6267\u884C\u3002</p></li><li><p>\uFF084\uFF09\u4E3B\u7EBF\u7A0B\u4E0D\u65AD\u91CD\u590D\u4E0A\u9762\u7684\u7B2C\u4E09\u6B65\u3002</p></li></ul><img src="'+r+`"><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4E3B\u7EBF\u7A0B\u7684\u6267\u884C\u8FC7\u7A0B\u5C31\u662F\u4E00\u4E2A tick\uFF0C\u800C\u6240\u6709\u7684\u5F02\u6B65\u7ED3\u679C\u90FD\u662F\u901A\u8FC7 \u201C\u4EFB\u52A1\u961F\u5217\u201D \u6765\u8C03\u5EA6\u3002 \u6D88\u606F\u961F\u5217\u4E2D\u5B58\u653E\u7684\u662F\u4E00\u4E2A\u4E2A\u7684\u4EFB\u52A1\uFF08task\uFF09\u3002 \u89C4\u8303\u4E2D\u89C4\u5B9A task \u5206\u4E3A\u4E24\u5927\u7C7B\uFF0C\u5206\u522B\u662F macro task \u548C micro task\uFF0C\u5E76\u4E14\u6BCF\u4E2A macro task \u7ED3\u675F\u540E\uFF0C\u90FD\u8981\u6E05\u7A7A\u6240\u6709\u7684 micro task\u3002</p></div><p>\u5173\u4E8E macro task \u548C micro task \u7684\u6982\u5FF5\uFF0C\u8FD9\u91CC\u4E0D\u4F1A\u7EC6\u8BB2\uFF0C\u7B80\u5355\u901A\u8FC7\u4E00\u6BB5\u4EE3\u7801\u6F14\u793A\u4ED6\u4EEC\u7684\u6267\u884C\u987A\u5E8F\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> (macroTask </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> macroTaskQueue) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// 1. Handle current MACRO-TASK</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">handleMacroTask</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// 2. Handle all MICRO-TASK</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">for</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">microTask</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">of</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">microTaskQueue</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">handleMicroTask</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">microTask</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u5728\u6D4F\u89C8\u5668\u73AF\u5883\u4E2D</p><ul><li>\u5E38\u89C1\u7684 macro task \u6709 setTimeout\u3001MessageChannel\u3001postMessage\u3001setImmediate\uFF1B</li><li>\u5E38\u89C1\u7684 micro task \u6709 MutationObsever \u548C Promise.then\u3002</li></ul><h2 id="vue-\u7684\u5B9E\u73B0" tabindex="-1">Vue \u7684\u5B9E\u73B0 <a class="header-anchor" href="#vue-\u7684\u5B9E\u73B0" aria-hidden="true">#</a></h2><p>\u5728 Vue \u6E90\u7801 2.5+ \u540E\uFF0CnextTick \u7684\u5B9E\u73B0\u5355\u72EC\u6709\u4E00\u4E2A JS \u6587\u4EF6\u6765\u7EF4\u62A4\u5B83\uFF0C\u5B83\u7684\u6E90\u7801\u5E76\u4E0D\u591A\uFF0C\u603B\u5171\u4E5F\u5C31 100 \u591A\u884C\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u6765\u770B\u4E00\u4E0B\u5B83\u7684\u5B9E\u73B0\uFF0C\u5728 src/core/util/next-tick.js \u4E2D\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">noop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">shared/util</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">handleError</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./error</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">isIOS</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">isNative</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./env</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> callbacks </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> []</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pending </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">flushCallbacks</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">pending</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">copies</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">callbacks</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">callbacks</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">copies</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">copies</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Here we have async deferring wrappers using both microtasks and (macro) tasks.</span></span>
<span class="line"><span style="color:#676E95;">// In &lt; 2.4 we used microtasks everywhere, but there are some scenarios where</span></span>
<span class="line"><span style="color:#676E95;">// microtasks have too high a priority and fire in between supposedly</span></span>
<span class="line"><span style="color:#676E95;">// sequential events (e.g. #4521, #6690) or even between bubbling of the same</span></span>
<span class="line"><span style="color:#676E95;">// event (#6566). However, using (macro) tasks everywhere also has subtle problems</span></span>
<span class="line"><span style="color:#676E95;">// when state is changed right before repaint (e.g. #6813, out-in transitions).</span></span>
<span class="line"><span style="color:#676E95;">// Here we use microtask by default, but expose a way to force (macro) task when</span></span>
<span class="line"><span style="color:#676E95;">// needed (e.g. in event handlers attached by v-on).</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> microTimerFunc</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> macroTimerFunc</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> useMacroTask </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Determine (macro) task defer implementation.</span></span>
<span class="line"><span style="color:#676E95;">// Technically setImmediate should be the ideal choice, but it&#39;s only available</span></span>
<span class="line"><span style="color:#676E95;">// in IE. The only polyfill that consistently queues the callback after all DOM</span></span>
<span class="line"><span style="color:#676E95;">// events triggered in the same loop is by using MessageChannel.</span></span>
<span class="line"><span style="color:#676E95;">/* istanbul ignore if */</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> setImmediate </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isNative</span><span style="color:#A6ACCD;">(setImmediate)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">macroTimerFunc</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setImmediate</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">flushCallbacks</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> MessageChannel </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">isNative</span><span style="color:#A6ACCD;">(MessageChannel) </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// PhantomJS</span></span>
<span class="line"><span style="color:#A6ACCD;">  MessageChannel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[object MessageChannelConstructor]</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">channel</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">MessageChannel</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">port</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">channel</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">port2</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">channel</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">port1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">onmessage</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">flushCallbacks</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">macroTimerFunc</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">port</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">postMessage</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#676E95;">/* istanbul ignore next */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">macroTimerFunc</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">flushCallbacks</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Determine microtask defer implementation.</span></span>
<span class="line"><span style="color:#676E95;">/* istanbul ignore next, $flow-disable-line */</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isNative</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">p</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">microTimerFunc</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">flushCallbacks</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// in problematic UIWebViews, Promise.then doesn&#39;t completely break, but</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// it can get stuck in a weird state where callbacks are pushed into the</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// microtask queue but the queue isn&#39;t being flushed, until the browser</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// needs to do some other work, e.g. handle a timer. Therefore we can</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// &quot;force&quot; the microtask queue to be flushed by adding an empty timer.</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">isIOS</span><span style="color:#F07178;">) </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">noop</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// fallback to macro</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">microTimerFunc</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">macroTimerFunc</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Wrap a function so that if any code inside triggers state change,</span></span>
<span class="line"><span style="color:#676E95;"> * the changes are queued using a (macro) task instead of a microtask.</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">withMacroTask</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">_withTask</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">fn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_withTask</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">useMacroTask</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">null,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arguments</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">useMacroTask</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">nextTick</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">cb</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_resolve</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">callbacks</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">cb</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">try</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">cb</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">catch</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">handleError</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">nextTick</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">_resolve</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">_resolve</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">pending</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pending</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">useMacroTask</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">macroTimerFunc</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">microTimerFunc</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// $flow-disable-line</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">cb</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">resolve</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">_resolve</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">resolve</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>next-tick.js \u7533\u660E\u4E86 microTimerFunc \u548C macroTimerFunc 2 \u4E2A\u53D8\u91CF\uFF0C\u5B83\u4EEC\u5206\u522B\u5BF9\u5E94\u7684\u662F micro task \u7684\u51FD\u6570\u548C macro task \u7684\u51FD\u6570\u3002\u5BF9\u4E8E macro task \u7684\u5B9E\u73B0\uFF0C\u4F18\u5148\u68C0\u6D4B\u662F\u5426\u652F\u6301\u539F\u751F setImmediate\uFF0C\u8FD9\u662F\u4E00\u4E2A\u9AD8\u7248\u672C IE \u548C Edge \u624D\u652F\u6301\u7684\u7279\u6027\uFF0C\u4E0D\u652F\u6301\u7684\u8BDD\u518D\u53BB\u68C0\u6D4B\u662F\u5426\u652F\u6301\u539F\u751F\u7684 MessageChannel\uFF0C\u5982\u679C\u4E5F\u4E0D\u652F\u6301\u7684\u8BDD\u5C31\u4F1A\u964D\u7EA7\u4E3A setTimeout 0\uFF1B\u800C\u5BF9\u4E8E micro task \u7684\u5B9E\u73B0\uFF0C\u5219\u68C0\u6D4B\u6D4F\u89C8\u5668\u662F\u5426\u539F\u751F\u652F\u6301 Promise\uFF0C\u4E0D\u652F\u6301\u7684\u8BDD\u76F4\u63A5\u6307\u5411 macro task \u7684\u5B9E\u73B0\u3002</p><p>next-tick.js \u5BF9\u5916\u66B4\u9732\u4E86 2 \u4E2A\u51FD\u6570\uFF0C\u5148\u6765\u770B nextTick\uFF0C\u8FD9\u5C31\u662F\u6211\u4EEC\u5728\u4E0A\u4E00\u8282\u6267\u884C nextTick(flushSchedulerQueue) \u6240\u7528\u5230\u7684\u51FD\u6570\u3002\u5B83\u7684\u903B\u8F91\u4E5F\u5F88\u7B80\u5355\uFF0C\u628A\u4F20\u5165\u7684\u56DE\u8C03\u51FD\u6570 cb \u538B\u5165 callbacks \u6570\u7EC4\uFF0C\u6700\u540E\u4E00\u6B21\u6027\u5730\u6839\u636E useMacroTask \u6761\u4EF6\u6267\u884C macroTimerFunc \u6216\u8005\u662F microTimerFunc\uFF0C\u800C\u5B83\u4EEC\u90FD\u4F1A\u5728\u4E0B\u4E00\u4E2A tick \u6267\u884C flushCallbacks\uFF0CflushCallbacks \u7684\u903B\u8F91\u975E\u5E38\u7B80\u5355\uFF0C\u5BF9 callbacks \u904D\u5386\uFF0C\u7136\u540E\u6267\u884C\u76F8\u5E94\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u8FD9\u91CC\u4F7F\u7528 callbacks \u800C\u4E0D\u662F\u76F4\u63A5\u5728 nextTick \u4E2D\u6267\u884C\u56DE\u8C03\u51FD\u6570\u7684\u539F\u56E0\u662F\u4FDD\u8BC1\u5728\u540C\u4E00\u4E2A tick \u5185\u591A\u6B21\u6267\u884C nextTick\uFF0C\u4E0D\u4F1A\u5F00\u542F\u591A\u4E2A\u5F02\u6B65\u4EFB\u52A1\uFF0C\u800C\u628A\u8FD9\u4E9B\u5F02\u6B65\u4EFB\u52A1\u90FD\u538B\u6210\u4E00\u4E2A\u540C\u6B65\u4EFB\u52A1\uFF0C\u5728\u4E0B\u4E00\u4E2A tick \u6267\u884C\u5B8C\u6BD5\u3002</p><p>nextTick \u51FD\u6570\u6700\u540E\u8FD8\u6709\u4E00\u6BB5\u903B\u8F91\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">cb </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">resolve</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">_resolve</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">resolve</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u8FD9\u662F\u5F53 nextTick \u4E0D\u4F20 cb \u53C2\u6570\u7684\u65F6\u5019\uFF0C\u63D0\u4F9B\u4E00\u4E2A Promise \u5316\u7684\u8C03\u7528\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#82AAFF;">nextTick</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>\u5F53 _resolve \u51FD\u6570\u6267\u884C\uFF0C\u5C31\u4F1A\u8DF3\u5230 then \u7684\u903B\u8F91\u4E2D\u3002</p><p>next-tick.js \u8FD8\u5BF9\u5916\u66B4\u9732\u4E86 withMacroTask \u51FD\u6570\uFF0C\u5B83\u662F\u5BF9\u51FD\u6570\u505A\u4E00\u5C42\u5305\u88C5\uFF0C\u786E\u4FDD\u51FD\u6570\u6267\u884C\u8FC7\u7A0B\u4E2D\u5BF9\u6570\u636E\u4EFB\u610F\u7684\u4FEE\u6539\uFF0C\u89E6\u53D1\u53D8\u5316\u6267\u884C nextTick \u7684\u65F6\u5019\u5F3A\u5236\u8D70 macroTimerFunc\u3002\u6BD4\u5982\u5BF9\u4E8E\u4E00\u4E9B DOM \u4EA4\u4E92\u4E8B\u4EF6\uFF0C\u5982 v-on \u7ED1\u5B9A\u7684\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u7684\u5904\u7406\uFF0C\u4F1A\u5F3A\u5236\u8D70 macro task\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p>\u901A\u8FC7\u8FD9\u4E00\u8282\u5BF9 nextTick \u7684\u5206\u6790\uFF0C\u5E76\u7ED3\u5408\u4E0A\u4E00\u8282\u7684 setter \u5206\u6790\uFF0C\u6211\u4EEC\u4E86\u89E3\u5230\u6570\u636E\u7684\u53D8\u5316\u5230 DOM \u7684\u91CD\u65B0\u6E32\u67D3\u662F\u4E00\u4E2A\u5F02\u6B65\u8FC7\u7A0B\uFF0C\u53D1\u751F\u5728\u4E0B\u4E00\u4E2A tick\u3002\u8FD9\u5C31\u662F\u6211\u4EEC\u5E73\u65F6\u5728\u5F00\u53D1\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u6BD4\u5982\u4ECE\u670D\u52A1\u7AEF\u63A5\u53E3\u53BB\u83B7\u53D6\u6570\u636E\u7684\u65F6\u5019\uFF0C\u6570\u636E\u505A\u4E86\u4FEE\u6539\uFF0C\u5982\u679C\u6211\u4EEC\u7684\u67D0\u4E9B\u65B9\u6CD5\u53BB\u4F9D\u8D56\u4E86\u6570\u636E\u4FEE\u6539\u540E\u7684 DOM \u53D8\u5316\uFF0C\u6211\u4EEC\u5C31\u5FC5\u987B\u5728 nextTick \u540E\u6267\u884C\u3002\u6BD4\u5982\u4E0B\u9762\u7684\u4F2A\u4EE3\u7801\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#82AAFF;">getData</span><span style="color:#A6ACCD;">(res)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">xxx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$nextTick</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u8FD9\u91CC\u6211\u4EEC\u53EF\u4EE5\u83B7\u53D6\u53D8\u5316\u540E\u7684 DOM</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>Vue.js \u63D0\u4F9B\u4E86 2 \u79CD\u8C03\u7528 nextTick \u7684\u65B9\u5F0F\uFF0C\u4E00\u79CD\u662F\u5168\u5C40 API Vue.nextTick\uFF0C\u4E00\u79CD\u662F\u5B9E\u4F8B\u4E0A\u7684\u65B9\u6CD5 vm.$nextTick\uFF0C\u65E0\u8BBA\u6211\u4EEC\u4F7F\u7528\u54EA\u4E00\u79CD\uFF0C\u6700\u540E\u90FD\u662F\u8C03\u7528 next-tick.js \u4E2D\u5B9E\u73B0\u7684 nextTick \u65B9\u6CD5\u3002</p>`,27);function D(i,A,C,u,m,d){const s=e("font");return c(),a("div",null,[l(s,{style:{"font-size":"36px"}},{default:p(()=>[t("nextTick")]),_:1}),y])}const f=n(F,[["render",D]]);export{k as __pageData,f as default};
