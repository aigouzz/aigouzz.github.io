import{_ as n,c as a,a as l,w as p,b as o,r as e,o as t,d as c}from"./app.81578d5b.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"createElement","slug":"createelement","link":"#createelement","children":[]},{"level":2,"title":"children \u7684\u89C4\u8303\u5316","slug":"children-\u7684\u89C4\u8303\u5316","link":"#children-\u7684\u89C4\u8303\u5316","children":[]},{"level":2,"title":"VNode \u7684\u521B\u5EFA","slug":"vnode-\u7684\u521B\u5EFA","link":"#vnode-\u7684\u521B\u5EFA","children":[]},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3","link":"#\u603B\u7ED3","children":[]}],"relativePath":"data/6.md"}'),r={name:"data/6.md"},F=o(`<h2 id="createelement" tabindex="-1">createElement <a class="header-anchor" href="#createelement" aria-hidden="true">#</a></h2><p>Vue.js \u5229\u7528 createElement \u65B9\u6CD5\u521B\u5EFA VNode\uFF0C\u5B83\u5B9A\u4E49\u5728 src/core/vdom/create-element.js \u4E2D\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#676E95;">// wrapper function for providing a more flexible interface</span></span>
<span class="line"><span style="color:#676E95;">// without getting yelled at by flow</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">normalizationType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">alwaysNormalize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">VNode</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">VNode</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isPrimitive</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">normalizationType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isTrue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">alwaysNormalize</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">normalizationType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ALWAYS_NORMALIZE</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">_createElement</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">normalizationType</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>createElement \u65B9\u6CD5\u5B9E\u9645\u4E0A\u662F\u5BF9 _createElement \u65B9\u6CD5\u7684\u5C01\u88C5\uFF0C\u5B83\u5141\u8BB8\u4F20\u5165\u7684\u53C2\u6570\u66F4\u52A0\u7075\u6D3B\uFF0C\u5728\u5904\u7406\u8FD9\u4E9B\u53C2\u6570\u540E\uFF0C\u8C03\u7528\u771F\u6B63\u521B\u5EFA VNode \u7684\u51FD\u6570 _createElement\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_createElement</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Component</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">VNodeData</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">normalizationType</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>
<span class="line"><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">VNode</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">VNode</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isDef</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">.__ob__)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    p<wbr>rocess.env.NODE_ENV !== </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">production</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> &amp;&amp; warn(</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">Avoid using observed data object as vnode data: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(data)</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;"> +</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Always create fresh vnode data objects in each render!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">context</span></span>
<span class="line"><span style="color:#F07178;">    )</span></span>
<span class="line"><span style="color:#F07178;">    return createEmptyVNode</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// object syntax in v-bind</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">is</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">is</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// in case of component :is set to falsy value</span></span>
<span class="line"><span style="color:#F07178;">    return createEmptyVNode</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// warn against non-primitive key</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NODE_ENV</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!</span><span style="color:#82AAFF;">isPrimitive</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  ) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    if </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">!</span><span style="color:#A6ACCD;">__WEEX__</span><span style="color:#F07178;"> || !(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@binding</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">in</span><span style="color:#F07178;"> data.key</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">warn</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Avoid using non-primitive value as key, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use string/number value instead.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">context</span></span>
<span class="line"><span style="color:#F07178;">      )</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// support single function children as default scoped slot</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  ) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">    data.</span><span style="color:#A6ACCD;">scopedSlots</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> default</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    children.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">normalizationType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ALWAYS_NORMALIZE</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalizeChildren</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">else</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">normalizationType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SIMPLE_NORMALIZE</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">simpleNormalizeChildren</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">vnode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ns</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    let </span><span style="color:#A6ACCD;">Ctor</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$vnode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$vnode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ns</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getTagNamespace</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    if </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">config.isReservedTag(</span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;">// platform built-in elements</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">vnode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">VNode</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parsePlatformTagName</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">undefined,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span></span>
<span class="line"><span style="color:#F07178;">      )</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> else if </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Ctor</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">resolveAsset</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$options</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">components</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;">// component</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">vnode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createComponent</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Ctor</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> else {</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;">// unknown or unlisted namespaced elements</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;">// check at runtime because it may get assigned a namespace when its</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;">// parent normalizes children</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">vnode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">VNode</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">undefined,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span></span>
<span class="line"><span style="color:#F07178;">      )</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  } </span><span style="color:#A6ACCD;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// direct component options / constructor</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">vnode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createComponent</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">vnode</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    return </span><span style="color:#A6ACCD;">vnode</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">else</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">vnode</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    if </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ns</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">) applyNS</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">vnode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ns</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    if </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">) registerDeepBindings</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    return vnode</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    return createEmptyVNode</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"></span></code></pre></div><p>_createElement \u65B9\u6CD5\u6709 5 \u4E2A\u53C2\u6570\uFF0Ccontext \u8868\u793A VNode \u7684\u4E0A\u4E0B\u6587\u73AF\u5883\uFF0C\u5B83\u662F Component \u7C7B\u578B\uFF1Btag \u8868\u793A\u6807\u7B7E\uFF0C\u5B83\u53EF\u4EE5\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A Component\uFF1Bdata \u8868\u793A VNode \u7684\u6570\u636E\uFF0C\u5B83\u662F\u4E00\u4E2A VNodeData \u7C7B\u578B\uFF0C\u53EF\u4EE5\u5728 flow/vnode.js \u4E2D\u627E\u5230\u5B83\u7684\u5B9A\u4E49\uFF0C\u8FD9\u91CC\u5148\u4E0D\u5C55\u5F00\u8BF4\uFF1Bchildren \u8868\u793A\u5F53\u524D VNode \u7684\u5B50\u8282\u70B9\uFF0C\u5B83\u662F\u4EFB\u610F\u7C7B\u578B\u7684\uFF0C\u5B83\u63A5\u4E0B\u6765\u9700\u8981\u88AB\u89C4\u8303\u4E3A\u6807\u51C6\u7684 VNode \u6570\u7EC4\uFF1BnormalizationType \u8868\u793A\u5B50\u8282\u70B9\u89C4\u8303\u7684\u7C7B\u578B\uFF0C\u7C7B\u578B\u4E0D\u540C\u89C4\u8303\u7684\u65B9\u6CD5\u4E5F\u5C31\u4E0D\u4E00\u6837\uFF0C\u5B83\u4E3B\u8981\u662F\u53C2\u8003 render \u51FD\u6570\u662F\u7F16\u8BD1\u751F\u6210\u7684\u8FD8\u662F\u7528\u6237\u624B\u5199\u7684\u3002</p><p>createElement \u51FD\u6570\u7684\u6D41\u7A0B\u7565\u5FAE\u6709\u70B9\u591A\uFF0C\u6211\u4EEC\u63A5\u4E0B\u6765\u4E3B\u8981\u5206\u6790 2 \u4E2A\u91CD\u70B9\u7684\u6D41\u7A0B \u2014\u2014 children \u7684\u89C4\u8303\u5316\u4EE5\u53CA VNode \u7684\u521B\u5EFA\u3002</p><h2 id="children-\u7684\u89C4\u8303\u5316" tabindex="-1">children \u7684\u89C4\u8303\u5316 <a class="header-anchor" href="#children-\u7684\u89C4\u8303\u5316" aria-hidden="true">#</a></h2><p>\u7531\u4E8E Virtual DOM \u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u6811\u72B6\u7ED3\u6784\uFF0C\u6BCF\u4E00\u4E2A VNode \u53EF\u80FD\u4F1A\u6709\u82E5\u5E72\u4E2A\u5B50\u8282\u70B9\uFF0C\u8FD9\u4E9B\u5B50\u8282\u70B9\u5E94\u8BE5\u4E5F\u662F VNode \u7684\u7C7B\u578B\u3002_createElement \u63A5\u6536\u7684\u7B2C 4 \u4E2A\u53C2\u6570 children \u662F\u4EFB\u610F\u7C7B\u578B\u7684\uFF0C\u56E0\u6B64\u6211\u4EEC\u9700\u8981\u628A\u5B83\u4EEC\u89C4\u8303\u6210 VNode \u7C7B\u578B\u3002</p><p>\u8FD9\u91CC\u6839\u636E normalizationType \u7684\u4E0D\u540C\uFF0C\u8C03\u7528\u4E86 normalizeChildren(children) \u548C simpleNormalizeChildren(children) \u65B9\u6CD5\uFF0C\u5B83\u4EEC\u7684\u5B9A\u4E49\u90FD\u5728 src/core/vdom/helpers/normalzie-children.js \u4E2D\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#676E95;">// The template compiler attempts to minimize the need for normalization by</span></span>
<span class="line"><span style="color:#676E95;">// statically analyzing the template at compile time.</span></span>
<span class="line"><span style="color:#676E95;">//</span></span>
<span class="line"><span style="color:#676E95;">// For plain HTML markup, normalization can be completely skipped because the</span></span>
<span class="line"><span style="color:#676E95;">// generated render function is guaranteed to return Array&lt;VNode&gt;. There are</span></span>
<span class="line"><span style="color:#676E95;">// two cases where extra normalization is needed:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// 1. When the children contains components - because a functional component</span></span>
<span class="line"><span style="color:#676E95;">// may return an Array instead of a single root. In this case, just a simple</span></span>
<span class="line"><span style="color:#676E95;">// normalization is needed - if any child is an Array, we flatten the whole</span></span>
<span class="line"><span style="color:#676E95;">// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep</span></span>
<span class="line"><span style="color:#676E95;">// because functional components already normalize their own children.</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">simpleNormalizeChildren</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">])) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">concat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#F07178;">([]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// 2. When the children contains constructs that always generated nested Arrays,</span></span>
<span class="line"><span style="color:#676E95;">// e.g. &lt;template&gt;, &lt;slot&gt;, v-for, or when the children is provided by user</span></span>
<span class="line"><span style="color:#676E95;">// with hand-written render functions / JSX. In such cases a full normalization</span></span>
<span class="line"><span style="color:#676E95;">// is needed to cater to all possible types of children values.</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">normalizeChildren</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">VNode</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isPrimitive</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> [</span><span style="color:#82AAFF;">createTextVNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">)]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalizeArrayChildren</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>simpleNormalizeChildren \u65B9\u6CD5\u8C03\u7528\u573A\u666F\u662F render \u51FD\u6570\u662F\u7F16\u8BD1\u751F\u6210\u7684\u3002\u7406\u8BBA\u4E0A\u7F16\u8BD1\u751F\u6210\u7684 children \u90FD\u5DF2\u7ECF\u662F VNode \u7C7B\u578B\u7684\uFF0C\u4F46\u8FD9\u91CC\u6709\u4E00\u4E2A\u4F8B\u5916\uFF0C\u5C31\u662F functional component \u51FD\u6570\u5F0F\u7EC4\u4EF6\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u6570\u7EC4\u800C\u4E0D\u662F\u4E00\u4E2A\u6839\u8282\u70B9\uFF0C\u6240\u4EE5\u4F1A\u901A\u8FC7 Array.prototype.concat \u65B9\u6CD5\u628A\u6574\u4E2A children \u6570\u7EC4\u6253\u5E73\uFF0C\u8BA9\u5B83\u7684\u6DF1\u5EA6\u53EA\u6709\u4E00\u5C42\u3002</p><p>normalizeChildren \u65B9\u6CD5\u7684\u8C03\u7528\u573A\u666F\u6709 2 \u79CD\uFF0C\u4E00\u4E2A\u573A\u666F\u662F render \u51FD\u6570\u662F\u7528\u6237\u624B\u5199\u7684\uFF0C\u5F53 children \u53EA\u6709\u4E00\u4E2A\u8282\u70B9\u7684\u65F6\u5019\uFF0CVue.js \u4ECE\u63A5\u53E3\u5C42\u9762\u5141\u8BB8\u7528\u6237\u628A children \u5199\u6210\u57FA\u7840\u7C7B\u578B\u7528\u6765\u521B\u5EFA\u5355\u4E2A\u7B80\u5355\u7684\u6587\u672C\u8282\u70B9\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4F1A\u8C03\u7528 createTextVNode \u521B\u5EFA\u4E00\u4E2A\u6587\u672C\u8282\u70B9\u7684 VNode\uFF1B\u53E6\u4E00\u4E2A\u573A\u666F\u662F\u5F53\u7F16\u8BD1 slot\u3001v-for \u7684\u65F6\u5019\u4F1A\u4EA7\u751F\u5D4C\u5957\u6570\u7EC4\u7684\u60C5\u51B5\uFF0C\u4F1A\u8C03\u7528 normalizeArrayChildren \u65B9\u6CD5\uFF0C\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B\u5B83\u7684\u5B9E\u73B0\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">normalizeArrayChildren</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">nestedIndex</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">VNode</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">last</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">for</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isUndef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">boolean</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">continue</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">last</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">//  nested</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalizeArrayChildren</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">nestedIndex </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;}</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// merge adjacent text nodes</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isTextNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">]) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isTextNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">last</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createTextVNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">last</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">text</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">]: </span><span style="color:#A6ACCD;">any</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">text</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shift</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">push</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isPrimitive</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isTextNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">last</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// merge adjacent text nodes</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// this is necessary for SSR hydration because text nodes are</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// essentially merged when rendered to HTML strings</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createTextVNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">last</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">text</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// convert primitive to vnode</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">createTextVNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isTextNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isTextNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">last</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// merge adjacent text nodes</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createTextVNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">last</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">text</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">text</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// default key for nested array children (likely generated by v-for)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isTrue</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">_isVList</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">isUndef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">nestedIndex</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">__vlist</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">nestedIndex</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">__</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>normalizeArrayChildren \u63A5\u6536 2 \u4E2A\u53C2\u6570\uFF0Cchildren \u8868\u793A\u8981\u89C4\u8303\u7684\u5B50\u8282\u70B9\uFF0CnestedIndex \u8868\u793A\u5D4C\u5957\u7684\u7D22\u5F15\uFF0C\u56E0\u4E3A\u5355\u4E2A child \u53EF\u80FD\u662F\u4E00\u4E2A\u6570\u7EC4\u7C7B\u578B\u3002 normalizeArrayChildren \u4E3B\u8981\u7684\u903B\u8F91\u5C31\u662F\u904D\u5386 children\uFF0C\u83B7\u5F97\u5355\u4E2A\u8282\u70B9 c\uFF0C\u7136\u540E\u5BF9 c \u7684\u7C7B\u578B\u5224\u65AD\uFF0C\u5982\u679C\u662F\u4E00\u4E2A\u6570\u7EC4\u7C7B\u578B\uFF0C\u5219\u9012\u5F52\u8C03\u7528 normalizeArrayChildren; \u5982\u679C\u662F\u57FA\u7840\u7C7B\u578B\uFF0C\u5219\u901A\u8FC7 createTextVNode \u65B9\u6CD5\u8F6C\u6362\u6210 VNode \u7C7B\u578B\uFF1B\u5426\u5219\u5C31\u5DF2\u7ECF\u662F VNode \u7C7B\u578B\u4E86\uFF0C\u5982\u679C children \u662F\u4E00\u4E2A\u5217\u8868\u5E76\u4E14\u5217\u8868\u8FD8\u5B58\u5728\u5D4C\u5957\u7684\u60C5\u51B5\uFF0C\u5219\u6839\u636E nestedIndex \u53BB\u66F4\u65B0\u5B83\u7684 key\u3002\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u4E00\u70B9\uFF0C\u5728\u904D\u5386\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5BF9\u8FD9 3 \u79CD\u60C5\u51B5\u90FD\u505A\u4E86\u5982\u4E0B\u5904\u7406\uFF1A\u5982\u679C\u5B58\u5728\u4E24\u4E2A\u8FDE\u7EED\u7684 text \u8282\u70B9\uFF0C\u4F1A\u628A\u5B83\u4EEC\u5408\u5E76\u6210\u4E00\u4E2A text \u8282\u70B9\u3002</p><p>\u7ECF\u8FC7\u5BF9 children \u7684\u89C4\u8303\u5316\uFF0Cchildren \u53D8\u6210\u4E86\u4E00\u4E2A\u7C7B\u578B\u4E3A VNode \u7684 Array\u3002</p><h2 id="vnode-\u7684\u521B\u5EFA" tabindex="-1">VNode \u7684\u521B\u5EFA <a class="header-anchor" href="#vnode-\u7684\u521B\u5EFA" aria-hidden="true">#</a></h2><p>\u56DE\u5230 createElement \u51FD\u6570\uFF0C\u89C4\u8303\u5316 children \u540E\uFF0C\u63A5\u4E0B\u6765\u4F1A\u53BB\u521B\u5EFA\u4E00\u4E2A VNode \u7684\u5B9E\u4F8B\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> vnode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ns</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> tag </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Ctor</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$vnode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$vnode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ns</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getTagNamespace</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isReservedTag</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// platform built-in elements</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">vnode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">VNode</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parsePlatformTagName</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">undefined,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span></span>
<span class="line"><span style="color:#F07178;">    )</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isDef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Ctor</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">resolveAsset</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$options</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">components</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">))) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// component</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">vnode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createComponent</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Ctor</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// unknown or unlisted namespaced elements</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// check at runtime because it may get assigned a namespace when its</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// parent normalizes children</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">vnode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">VNode</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">undefined,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span></span>
<span class="line"><span style="color:#F07178;">    )</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// direct component options / constructor</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">vnode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createComponent</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u8FD9\u91CC\u5148\u5BF9 tag \u505A\u5224\u65AD\uFF0C\u5982\u679C\u662F string \u7C7B\u578B\uFF0C\u5219\u63A5\u7740\u5224\u65AD\u5982\u679C\u662F\u5185\u7F6E\u7684\u4E00\u4E9B\u8282\u70B9\uFF0C\u5219\u76F4\u63A5\u521B\u5EFA\u4E00\u4E2A\u666E\u901A VNode\uFF0C\u5982\u679C\u662F\u4E3A\u5DF2\u6CE8\u518C\u7684\u7EC4\u4EF6\u540D\uFF0C\u5219\u901A\u8FC7 createComponent \u521B\u5EFA\u4E00\u4E2A\u7EC4\u4EF6\u7C7B\u578B\u7684 VNode\uFF0C\u5426\u5219\u521B\u5EFA\u4E00\u4E2A\u672A\u77E5\u7684\u6807\u7B7E\u7684 VNode\u3002 \u5982\u679C\u662F tag \u4E00\u4E2A Component \u7C7B\u578B\uFF0C\u5219\u76F4\u63A5\u8C03\u7528 createComponent \u521B\u5EFA\u4E00\u4E2A\u7EC4\u4EF6\u7C7B\u578B\u7684 VNode \u8282\u70B9\u3002\u5BF9\u4E8E createComponent \u521B\u5EFA\u7EC4\u4EF6\u7C7B\u578B\u7684 VNode \u7684\u8FC7\u7A0B\uFF0C\u6211\u4EEC\u4E4B\u540E\u4F1A\u53BB\u4ECB\u7ECD\uFF0C\u672C\u8D28\u4E0A\u5B83\u8FD8\u662F\u8FD4\u56DE\u4E86\u4E00\u4E2A VNode\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p>\u90A3\u4E48\u81F3\u6B64\uFF0C\u6211\u4EEC\u5927\u81F4\u4E86\u89E3\u4E86 createElement \u521B\u5EFA VNode \u7684\u8FC7\u7A0B\uFF0C\u6BCF\u4E2A VNode \u6709 children\uFF0Cchildren \u6BCF\u4E2A\u5143\u7D20\u4E5F\u662F\u4E00\u4E2A VNode\uFF0C\u8FD9\u6837\u5C31\u5F62\u6210\u4E86\u4E00\u4E2A VNode Tree\uFF0C\u5B83\u5F88\u597D\u7684\u63CF\u8FF0\u4E86\u6211\u4EEC\u7684 DOM Tree\u3002</p><p>\u56DE\u5230 mountComponent \u51FD\u6570\u7684\u8FC7\u7A0B\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u77E5\u9053 vm._render \u662F\u5982\u4F55\u521B\u5EFA\u4E86\u4E00\u4E2A VNode\uFF0C\u63A5\u4E0B\u6765\u5C31\u662F\u8981\u628A\u8FD9\u4E2A VNode \u6E32\u67D3\u6210\u4E00\u4E2A\u771F\u5B9E\u7684 DOM \u5E76\u6E32\u67D3\u51FA\u6765\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u662F\u901A\u8FC7 vm._update \u5B8C\u6210\u7684\uFF0C\u63A5\u4E0B\u6765\u5206\u6790\u4E00\u4E0B\u8FD9\u4E2A\u8FC7\u7A0B\u3002</p>`,23);function y(D,A,C,i,d,m){const s=e("font");return t(),a("div",null,[l(s,{style:{"font-size":"36px"}},{default:p(()=>[c("createElement")]),_:1}),F])}const u=n(r,[["render",y]]);export{f as __pageData,u as default};
