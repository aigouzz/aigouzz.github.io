import{_ as n,c as a,a as p,w as l,b as o,r as e,o as t,d as c}from"./app.16ac61ea.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u68C0\u6D4B\u53D8\u5316\u7684\u6CE8\u610F\u4E8B\u9879","slug":"\u68C0\u6D4B\u53D8\u5316\u7684\u6CE8\u610F\u4E8B\u9879","link":"#\u68C0\u6D4B\u53D8\u5316\u7684\u6CE8\u610F\u4E8B\u9879","children":[]},{"level":2,"title":"\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027","slug":"\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027","link":"#\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027","children":[]},{"level":2,"title":"\u6570\u7EC4","slug":"\u6570\u7EC4","link":"#\u6570\u7EC4","children":[]},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3","link":"#\u603B\u7ED3","children":[]}],"relativePath":"proxy/6.md"}'),r={name:"proxy/6.md"},y=o(`<h2 id="\u68C0\u6D4B\u53D8\u5316\u7684\u6CE8\u610F\u4E8B\u9879" tabindex="-1">\u68C0\u6D4B\u53D8\u5316\u7684\u6CE8\u610F\u4E8B\u9879 <a class="header-anchor" href="#\u68C0\u6D4B\u53D8\u5316\u7684\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a></h2><p>\u901A\u8FC7\u524D\u9762\u51E0\u8282\u7684\u5206\u6790\uFF0C\u6211\u4EEC\u5BF9\u54CD\u5E94\u5F0F\u6570\u636E\u5BF9\u8C61\u4EE5\u53CA\u5B83\u7684 getter \u548C setter \u90E8\u5206\u505A\u4E86\u4E86\u89E3\uFF0C\u4F46\u662F\u5BF9\u4E8E\u4E00\u4E9B\u7279\u6B8A\u60C5\u51B5\u662F\u9700\u8981\u6CE8\u610F\u7684\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u5C31\u4ECE\u6E90\u7801\u7684\u89D2\u5EA6\u6765\u770B Vue \u662F\u5982\u4F55\u5904\u7406\u8FD9\u4E9B\u7279\u6B8A\u60C5\u51B5\u7684\u3002</p><h2 id="\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027" tabindex="-1">\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027 <a class="header-anchor" href="#\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027" aria-hidden="true">#</a></h2><p>\u5BF9\u4E8E\u4F7F\u7528 Object.defineProperty \u5B9E\u73B0\u54CD\u5E94\u5F0F\u7684\u5BF9\u8C61\uFF0C\u5F53\u6211\u4EEC\u53BB\u7ED9\u8FD9\u4E2A\u5BF9\u8C61\u6DFB\u52A0\u4E00\u4E2A\u65B0\u7684\u5C5E\u6027\u7684\u65F6\u5019\uFF0C\u662F\u4E0D\u80FD\u591F\u89E6\u53D1\u5B83\u7684 setter \u7684\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> vm </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// vm.b \u662F\u975E\u54CD\u5E94\u7684</span></span>
<span class="line"><span style="color:#A6ACCD;">vm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span></code></pre></div><p>\u4F46\u662F\u6DFB\u52A0\u65B0\u5C5E\u6027\u7684\u573A\u666F\u6211\u4EEC\u5728\u5E73\u65F6\u5F00\u53D1\u4E2D\u4F1A\u7ECF\u5E38\u9047\u5230\uFF0C\u90A3\u4E48 Vue \u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5B9A\u4E49\u4E86\u4E00\u4E2A\u5168\u5C40 API Vue.set \u65B9\u6CD5\uFF0C\u5B83\u5728 src/core/global-api/index.js \u4E2D\u521D\u59CB\u5316\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">set </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> set</span></span>
<span class="line"></span></code></pre></div><p>\u8FD9\u4E2A set \u65B9\u6CD5\u7684\u5B9A\u4E49\u5728 src/core/observer/index.js \u4E2D\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Set a property on an object. Adds the new property and</span></span>
<span class="line"><span style="color:#676E95;"> * triggers change notification if the property doesn&#39;t</span></span>
<span class="line"><span style="color:#676E95;"> * already exist.</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NODE_ENV</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">    (</span><span style="color:#82AAFF;">isUndef</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isPrimitive</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">  ) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">warn</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Cannot set reactive property on undefined, null, or primitive value: </span><span style="color:#89DDFF;">\${</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">}\`)</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">  if </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Array.isArray(</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> &amp;&amp; isValidArrayIndex</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    target.length </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">max</span><span style="color:#A6ACCD;">(target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> key)</span></span>
<span class="line"><span style="color:#A6ACCD;">    target.splice(key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val)</span></span>
<span class="line"><span style="color:#A6ACCD;">    return val</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">if</span><span style="color:#A6ACCD;"> (key </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> target </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(key </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    target</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">] = val</span></span>
<span class="line"><span style="color:#F07178;">    return val</span></span>
<span class="line"><span style="color:#F07178;">  }</span></span>
<span class="line"><span style="color:#F07178;">  const ob = (target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> any)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">__ob__</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">if</span><span style="color:#A6ACCD;"> (target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">_isVue </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> (ob </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> ob</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vmCount)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    p<wbr>rocess.env.NODE_ENV !== </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">production</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> &amp;&amp; warn(</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">Avoid adding reactive properties to a Vue instance or its root $data </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> +</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">at runtime - declare it upfront in the data option.</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    )</span></span>
<span class="line"><span style="color:#F07178;">    return val</span></span>
<span class="line"><span style="color:#F07178;">  }</span></span>
<span class="line"><span style="color:#F07178;">  if (!ob) {</span></span>
<span class="line"><span style="color:#F07178;">    target[key] = val</span></span>
<span class="line"><span style="color:#F07178;">    return val</span></span>
<span class="line"><span style="color:#F07178;">  }</span></span>
<span class="line"><span style="color:#F07178;">  defineReactive(ob.value, key, val)</span></span>
<span class="line"><span style="color:#F07178;">  ob.dep.notify()</span></span>
<span class="line"><span style="color:#F07178;">  return val</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"></span></code></pre></div><p>set \u65B9\u6CD5\u63A5\u6536 3\u4E2A\u53C2\u6570\uFF0Ctarget \u53EF\u80FD\u662F\u6570\u7EC4\u6216\u8005\u662F\u666E\u901A\u5BF9\u8C61\uFF0Ckey \u4EE3\u8868\u7684\u662F\u6570\u7EC4\u7684\u4E0B\u6807\u6216\u8005\u662F\u5BF9\u8C61\u7684\u952E\u503C\uFF0Cval \u4EE3\u8868\u6DFB\u52A0\u7684\u503C\u3002</p><p>\u9996\u5148\u5224\u65AD\u5982\u679C target \u662F\u6570\u7EC4\u4E14 key \u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u4E0B\u6807\uFF0C\u5219\u4E4B\u524D\u901A\u8FC7 splice \u53BB\u6DFB\u52A0\u8FDB\u6570\u7EC4\u7136\u540E\u8FD4\u56DE\uFF0C\u8FD9\u91CC\u7684 splice \u5176\u5B9E\u5DF2\u7ECF\u4E0D\u4EC5\u4EC5\u662F\u539F\u751F\u6570\u7EC4\u7684 splice \u4E86\uFF0C\u7A0D\u540E\u6211\u4F1A\u8BE6\u7EC6\u4ECB\u7ECD\u6570\u7EC4\u7684\u903B\u8F91\u3002</p><p>\u63A5\u7740\u53C8\u5224\u65AD key \u5DF2\u7ECF\u5B58\u5728\u4E8E target \u4E2D\uFF0C\u5219\u76F4\u63A5\u8D4B\u503C\u8FD4\u56DE\uFF0C\u56E0\u4E3A\u8FD9\u6837\u7684\u53D8\u5316\u662F\u53EF\u4EE5\u89C2\u6D4B\u5230\u4E86\u3002</p><p>\u63A5\u7740\u518D\u83B7\u53D6\u5230 target.<strong>ob</strong> \u5E76\u8D4B\u503C\u7ED9 ob\uFF0C\u4E4B\u524D\u5206\u6790\u8FC7\u5B83\u662F\u5728 Observer \u7684\u6784\u9020\u51FD\u6570\u6267\u884C\u7684\u65F6\u5019\u521D\u59CB\u5316\u7684\uFF0C\u8868\u793A Observer \u7684\u4E00\u4E2A\u5B9E\u4F8B\uFF0C\u5982\u679C\u5B83\u4E0D\u5B58\u5728\uFF0C\u5219\u8BF4\u660E target \u4E0D\u662F\u4E00\u4E2A\u54CD\u5E94\u5F0F\u7684\u5BF9\u8C61\uFF0C\u5219\u76F4\u63A5\u8D4B\u503C\u5E76\u8FD4\u56DE\u3002</p><p>\u6700\u540E\u901A\u8FC7 defineReactive(ob.value, key, val) \u628A\u65B0\u6DFB\u52A0\u7684\u5C5E\u6027\u53D8\u6210\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u7136\u540E\u518D\u901A\u8FC7 ob.dep.notify() \u624B\u52A8\u7684\u89E6\u53D1\u4F9D\u8D56\u901A\u77E5\uFF0C\u8FD8\u8BB0\u5F97\u6211\u4EEC\u5728\u7ED9\u5BF9\u8C61\u6DFB\u52A0 getter \u7684\u65F6\u5019\u6709\u8FD9\u4E48\u4E00\u6BB5\u903B\u8F91\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineReactive</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">customSetter</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">shallow</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">childOb</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">shallow</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">observe</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    enumerable</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    configurable</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reactiveGetter</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">getter</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">getter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">val</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Dep</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">dep</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">depend</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">childOb</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">childOb</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dep</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">depend</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">dependArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u5728 getter \u8FC7\u7A0B\u4E2D\u5224\u65AD\u4E86 childOb\uFF0C\u5E76\u8C03\u7528\u4E86 childOb.dep.depend() \u6536\u96C6\u4E86\u4F9D\u8D56\uFF0C\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48\u6267\u884C Vue.set \u7684\u65F6\u5019\u901A\u8FC7 ob.dep.notify() \u80FD\u591F\u901A\u77E5\u5230 watcher\uFF0C\u4ECE\u800C\u8BA9\u6DFB\u52A0\u65B0\u7684\u5C5E\u6027\u5230\u5BF9\u8C61\u4E5F\u53EF\u4EE5\u68C0\u6D4B\u5230\u53D8\u5316\u3002\u8FD9\u91CC\u5982\u679C value \u662F\u4E2A\u6570\u7EC4\uFF0C\u90A3\u4E48\u5C31\u901A\u8FC7 dependArray \u628A\u6570\u7EC4\u6BCF\u4E2A\u5143\u7D20\u4E5F\u53BB\u505A\u4F9D\u8D56\u6536\u96C6\u3002</p><h2 id="\u6570\u7EC4" tabindex="-1">\u6570\u7EC4 <a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a></h2><p>\u63A5\u7740\u8BF4\u4E00\u4E0B\u6570\u7EC4\u7684\u60C5\u51B5\uFF0CVue \u4E5F\u662F\u4E0D\u80FD\u68C0\u6D4B\u5230\u4EE5\u4E0B\u53D8\u52A8\u7684\u6570\u7EC4\uFF1A</p><ul><li><p>\u5F53\u4F60\u5229\u7528\u7D22\u5F15\u76F4\u63A5\u8BBE\u7F6E\u4E00\u4E2A\u9879\u65F6\uFF0C\u4F8B\u5982\uFF1Avm.items[indexOfItem] = newValue</p></li><li><p>\u5F53\u4F60\u4FEE\u6539\u6570\u7EC4\u7684\u957F\u5EA6\u65F6\uFF0C\u4F8B\u5982\uFF1Avm.items.length = newLength</p></li></ul><p>\u5BF9\u4E8E\u7B2C\u4E00\u79CD\u60C5\u51B5\uFF0C\u53EF\u4EE5\u4F7F\u7528\uFF1AVue.set(example1.items, indexOfItem, newValue)\uFF1B</p><p>\u800C\u5BF9\u4E8E\u7B2C\u4E8C\u79CD\u60C5\u51B5\uFF0C\u53EF\u4EE5\u4F7F\u7528 vm.items.splice(newLength)\u3002</p><p>\u6211\u4EEC\u521A\u624D\u4E5F\u5206\u6790\u5230\uFF0C\u5BF9\u4E8E Vue.set \u7684\u5B9E\u73B0\uFF0C\u5F53 target \u662F\u6570\u7EC4\u7684\u65F6\u5019\uFF0C\u4E5F\u662F\u901A\u8FC7 target.splice(key, 1, val) \u6765\u6DFB\u52A0\u7684\uFF0C\u90A3\u4E48\u8FD9\u91CC\u7684 splice \u5230\u5E95\u6709\u4EC0\u4E48\u9ED1\u9B54\u6CD5\uFF0C\u80FD\u8BA9\u6DFB\u52A0\u7684\u5BF9\u8C61\u53D8\u6210\u54CD\u5E94\u5F0F\u7684\u5462\u3002</p><p>\u5176\u5B9E\u4E4B\u524D\u6211\u4EEC\u4E5F\u5206\u6790\u8FC7\uFF0C\u5728\u901A\u8FC7 observe \u65B9\u6CD5\u53BB\u89C2\u5BDF\u5BF9\u8C61\u7684\u65F6\u5019\u4F1A\u5B9E\u4F8B\u5316 Observer\uFF0C\u5728\u5B83\u7684\u6784\u9020\u51FD\u6570\u4E2D\u662F\u4E13\u95E8\u5BF9\u6570\u7EC4\u505A\u4E86\u5904\u7406\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 src/core/observer/index.js \u4E2D\u3002</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Observer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">dep</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Dep</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">vmCount</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">def</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">__ob__</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">augment</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hasProto</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">protoAugment</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">copyAugment</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">augment</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arrayMethods</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arrayKeys</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">observeArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u8FD9\u91CC\u6211\u4EEC\u53EA\u9700\u8981\u5173\u6CE8 value \u662F Array \u7684\u60C5\u51B5\uFF0C\u9996\u5148\u83B7\u53D6 augment\uFF0C\u8FD9\u91CC\u7684 hasProto \u5B9E\u9645\u4E0A\u5C31\u662F\u5224\u65AD\u5BF9\u8C61\u4E2D\u662F\u5426\u5B58\u5728 <strong>proto</strong>\uFF0C\u5982\u679C\u5B58\u5728\u5219 augment \u6307\u5411 protoAugment\uFF0C \u5426\u5219\u6307\u5411 copyAugment\uFF0C\u6765\u770B\u4E00\u4E0B\u8FD9\u4E24\u4E2A\u51FD\u6570\u7684\u5B9A\u4E49\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Augment an target Object or Array by intercepting</span></span>
<span class="line"><span style="color:#676E95;"> * the prototype chain using __proto__</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">protoAugment</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">keys</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#676E95;">/* eslint-disable no-proto */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">__proto__</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">src</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#676E95;">/* eslint-enable no-proto */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Augment an target Object or Array by defining</span></span>
<span class="line"><span style="color:#676E95;"> * hidden properties.</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#676E95;">/* istanbul ignore next */</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">copyAugment</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">keys</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">l</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">keys</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">keys</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">def</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">src</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">])</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>protoAugment \u65B9\u6CD5\u662F\u76F4\u63A5\u628A target.<strong>proto</strong> \u539F\u578B\u76F4\u63A5\u4FEE\u6539\u4E3A src\uFF0C\u800C copyAugment \u65B9\u6CD5\u662F\u904D\u5386 keys\uFF0C\u901A\u8FC7 def\uFF0C\u4E5F\u5C31\u662F Object.defineProperty \u53BB\u5B9A\u4E49\u5B83\u81EA\u8EAB\u7684\u5C5E\u6027\u503C\u3002</p><p>\u5BF9\u4E8E\u5927\u90E8\u5206\u73B0\u4EE3\u6D4F\u89C8\u5668\u90FD\u4F1A\u8D70\u5230 protoAugment\uFF0C\u90A3\u4E48\u5B83\u5B9E\u9645\u4E0A\u5C31\u628A value \u7684\u539F\u578B\u6307\u5411\u4E86 arrayMethods\uFF0CarrayMethods \u7684\u5B9A\u4E49\u5728 src/core/observer/array.js \u4E2D\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">def</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../util/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arrayProto </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arrayMethods </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(arrayProto)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> methodsToPatch </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">push</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pop</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">shift</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">unshift</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">splice</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sort</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">reverse</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Intercept mutating methods and emit events</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#A6ACCD;">methodsToPatch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">method</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// cache original method</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">original</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arrayProto</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">method</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">def</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">arrayMethods</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">method</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">mutator</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(...</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">original</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ob</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">__ob__</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">inserted</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">switch</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">method</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">push</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">unshift</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">inserted</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">args</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">splice</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">inserted</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">inserted</span><span style="color:#F07178;">) </span><span style="color:#A6ACCD;">ob</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">observeArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">inserted</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// notify change</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ob</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dep</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">notify</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>\u53EF\u4EE5\u770B\u5230\uFF0CarrayMethods \u9996\u5148\u7EE7\u627F\u4E86 Array\uFF0C\u7136\u540E\u5BF9\u6570\u7EC4\u4E2D\u6240\u6709\u80FD\u6539\u53D8\u6570\u7EC4\u81EA\u8EAB\u7684\u65B9\u6CD5\uFF0C\u5982 push\u3001pop \u7B49\u8FD9\u4E9B\u65B9\u6CD5\u8FDB\u884C\u91CD\u5199\u3002</p><p>\u91CD\u5199\u540E\u7684\u65B9\u6CD5\u4F1A\u5148\u6267\u884C\u5B83\u4EEC\u672C\u8EAB\u539F\u6709\u7684\u903B\u8F91\uFF0C\u5E76\u5BF9\u80FD\u589E\u52A0\u6570\u7EC4\u957F\u5EA6\u7684 3 \u4E2A\u65B9\u6CD5 push\u3001unshift\u3001splice \u65B9\u6CD5\u505A\u4E86\u5224\u65AD\uFF0C\u83B7\u53D6\u5230\u63D2\u5165\u7684\u503C;</p><p>\u7136\u540E\u628A\u65B0\u6DFB\u52A0\u7684\u503C\u53D8\u6210\u4E00\u4E2A\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u5E76\u4E14\u518D\u8C03\u7528 ob.dep.notify() \u624B\u52A8\u89E6\u53D1\u4F9D\u8D56\u901A\u77E5\uFF0C\u8FD9\u5C31\u5F88\u597D\u5730\u89E3\u91CA\u4E86\u4E4B\u524D\u7684\u793A\u4F8B\u4E2D\u8C03\u7528 vm.items.splice(newLength) \u65B9\u6CD5\u53EF\u4EE5\u68C0\u6D4B\u5230\u53D8\u5316\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p>\u901A\u8FC7\u8FD9\u4E00\u8282\u7684\u5206\u6790\uFF0C\u6211\u4EEC\u5BF9\u54CD\u5E94\u5F0F\u5BF9\u8C61\u53C8\u6709\u4E86\u66F4\u5168\u9762\u7684\u8BA4\u8BC6\uFF0C\u5982\u679C\u5728\u5B9E\u9645\u5DE5\u4F5C\u4E2D\u9047\u5230\u4E86\u8FD9\u4E9B\u7279\u6B8A\u60C5\u51B5\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u77E5\u9053\u5982\u4F55\u628A\u5B83\u4EEC\u4E5F\u53D8\u6210\u54CD\u5E94\u5F0F\u7684\u5BF9\u8C61\u3002\u5176\u5B9E\u5BF9\u4E8E\u5BF9\u8C61\u5C5E\u6027\u7684\u5220\u9664\u4E5F\u4F1A\u7528\u540C\u6837\u7684\u95EE\u9898\uFF0CVue \u540C\u6837\u63D0\u4F9B\u4E86 Vue.del \u7684\u5168\u5C40 API\uFF0C\u5B83\u7684\u5B9E\u73B0\u548C Vue.set \u5927\u540C\u5C0F\u5F02\uFF0C\u751A\u81F3\u8FD8\u8981\u66F4\u7B80\u5355\u4E00\u4E9B\uFF0C\u8FD9\u91CC\u6211\u5C31\u4E0D\u53BB\u5206\u6790\u4E86\uFF0C\u611F\u5174\u8DA3\u7684\u540C\u5B66\u53EF\u4EE5\u81EA\u884C\u53BB\u4E86\u89E3\u3002</p>`,34);function F(D,A,C,i,d,u){const s=e("font");return t(),a("div",null,[p(s,{style:{"font-size":"36px"}},{default:l(()=>[c("\u68C0\u6D4B\u53D8\u5316")]),_:1}),y])}const v=n(r,[["render",F]]);export{h as __pageData,v as default};
