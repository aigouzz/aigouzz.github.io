{"version":3,"file":"static/js/976.4d7d5252.chunk.js","mappings":"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","sources":["components/Authentication/index.js","components/song-cover/style.js","components/song-cover/index.js","components/theme-header-rcm/style.js","components/theme-header-rcm/index.js","pages/profile/style.js","pages/profile/index.js","service/user.js"],"sourcesContent":["import React, { memo, useEffect } from 'react'\nimport propTypes from 'prop-types'\nimport { message, Skeleton } from 'antd'\n\nfunction Auth (props) {\n  // props/state\n  const { flag } = props\n\n  // other hook\n  useEffect(() => {\n    // 没登录\n    if (!flag) {\n      //   message.warning('请先登录, 再看每日推荐歌单', {\n      //     onClose() {\n      //       console.log('message关闭')\n      //     }\n      //   })\n      message.loading('请先登录, 再看每日推荐歌单', 2).then(() => {\n        // props.history.push('/')\n        props.to()\n        props.showModal()\n      })\n    }\n  }, [flag, props])\n\n  return (\n    <div style={{ display: !flag ? 'block' : 'none' }}>\n      <Skeleton active />\n    </div>\n  )\n}\n\nAuth.propTypes = {\n  flag: propTypes.bool.isRequired,\n}\n\nexport default memo(Auth)\n","import styled from 'styled-components'\n\nexport const SongCoverWrapper = styled.a`\n  width: ${props => props.width + 'px'};\n  margin: 20px 0 20px 0;\n  .cover-wrapper {\n    width: 140px;\n    height: 140px;\n    position: relative;\n\n    img {\n      width: 100%;\n    }\n\n    .cover-mask {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      background-position: 0 0;\n\n      .bottom-bar {\n        position: absolute;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 10px;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        height: 27px;\n        background-position: 0 -537px;\n        color: #ccc;\n\n        .erji {\n          margin-right: 5px;\n          display: inline-block;\n          width: 14px;\n          height: 11px;\n          background-position: 0 -24px;\n        }\n\n        .play {\n          display: inline-block;\n          width: 16px;\n          height: 17px;\n          background-position: 0 0;\n        }\n      }\n    }\n  }\n\n  .cover-title {\n    font-size: 14px;\n    color: #000;\n    margin-top: 5px;\n  }\n\n  .cover-source {\n    color: #666;\n  }\n`\n","import React, { memo } from 'react'\nimport { getCount, getSizeImage } from '@/utils/format-utils'\nimport { SongCoverWrapper } from './style'\n\n// 歌曲封面组件\nfunction SongCover(props) {\n  const { info, songList, width = 140 } = props\n  // pic\n  const picUrl = (info && (info.picUrl || info.coverImgUrl)) || (songList && songList.coverImgUrl) \n  // playCount 播放次数 \n  const playCount = (info && info.playCount) || (songList && songList.playCount) || 0\n  // name\n  const name = (info && info.name) || (songList && songList.name) \n  // nickname\n  const nickname = (info && info.copywriter) || (songList && songList.creator.nickname) \n  // id\n  const songInfoId = (info && info.id) || (songList && songList.id)\n  \n  return (\n    <SongCoverWrapper width={width} href={`#/songlist?songlistId=${songInfoId}`}>\n      <div className=\"cover-wrapper\">\n        <img src={getSizeImage(picUrl, 140)} alt=\"\" />\n        <div className=\"cover-mask sprite_cover\">\n          <div className=\"bottom-bar sprite_cover\">\n            <span>\n              <i className=\"sprite_icon erji\"></i>\n              {getCount(playCount)}\n            </span>\n            <i className=\"sprite_icon play\"></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"cover-title text-nowrap\">by-{name}</div>\n      <div className=\"cover-source text-nowrap\">\n        by {(info && info.copywriter) || nickname}\n      </div>\n    </SongCoverWrapper>\n  )\n}\n\nexport default memo(SongCover)\n","import styled from 'styled-components'\n\nexport const RcmHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 33px;\n  padding: 0 10px 0 0;\n  padding-left: ${props => props.showIcon ? '34px' : '2px'};\n  border-bottom: 2px solid #c10d0c;\n  background: ${props => {\n    const url = 'url(' + require('@/assets/img/sprite_02.png') + ') no-repeat center'\n    return props.showIcon ? url : ''\n  }};\n  background-position: -225px -156px;\n  line-height: 33px;\n`\n\nexport const RcmHeaderLeft = styled.div`\n  display: flex;\n  .hot-title {\n    display: flex;\n    margin-bottom: 5px;\n    a {\n      color: #333333;\n      &:hover {\n        text-decoration: none;\n      }\n    }\n  }\n\n  .keywords {\n    display: flex;\n    margin-left: 20px;\n    color: #ccc;\n    line-height: 35px;\n    .item {\n      .line {\n        margin: 0 10px;\n      }\n    }\n  }\n`\n\nexport const RcmHeaderRight = styled.div`\n  .icon {\n    display: inline-block;\n    width: 12px;\n    height: 12px;\n    margin-left: 4px;\n    vertical-align: middle;\n    background: transparent url('${require('@/assets/img/sprite_02.png')}') no-repeat center;\n    background-position: 0 -240px;\n  }\n`\n","import React, { memo } from 'react'\nimport propTypes from 'prop-types'\nimport { RcmHeaderLeft, RcmHeaderRight, RcmHeaderWrapper } from './style'\n\nconst ThemeHeaderRmc = function ThemeHeaderRmc(props) {\n  const { title, keywords, showIcon, right, keywordsClick } = props\n  return (\n    <RcmHeaderWrapper showIcon={showIcon}>\n      <RcmHeaderLeft>\n        <h2 className=\"hot-title\">\n          <a href=\"/discover/recommend\" className=\"no-link hot-text\">\n            {title}\n          </a>\n        </h2>\n        <ul className=\"keywords\">\n          {keywords.map(item => {\n            return (\n              <li className=\"item\" key={item}>\n                <a href=\"/\" onClick={(e) => { e.preventDefault(); keywordsClick(item) }}>{item}</a>\n                <span className=\"line\">|</span>\n              </li>\n            )\n          })}\n        </ul>\n      </RcmHeaderLeft>\n      <RcmHeaderRight>\n        <span>{right}</span>\n        {showIcon && <i className=\"icon\"></i>}\n      </RcmHeaderRight>\n    </RcmHeaderWrapper>\n  )\n}\n\nThemeHeaderRmc.propTypes = {\n  // title属性必填\n  title: propTypes.string.isRequired,\n  keywords: propTypes.array,\n  showIcon: propTypes.bool,\n  right: propTypes.any,\n  keywordsClick: propTypes.func,\n}\n\nThemeHeaderRmc.defaultProps = {\n  keywords: [],\n  showIcon: true,\n  right: '更多'\n}\n\nexport default memo(ThemeHeaderRmc)\n","import styled from 'styled-components'\n\nexport const ProfileWrapper = styled.main`\n  padding: 40px;\n  .gap {\n    margin-right: 5px;\n  }\n  .user-info {\n    .user-pic {\n      margin-right: 40px;\n      img {\n        padding: 3px;\n        background: #fff;\n        border: 1px solid #d5d5d5;\n      }\n    }\n    .user-detail {\n      padding-top: 10px;\n      width: 100%;\n      height: 52px;\n      padding-bottom: 12px;\n      margin-bottom: 10px;\n      border-bottom: 1px solid #ddd;\n      .nickname-wrap {\n        display: flex;\n        .nickname {\n          font-size: 22px;\n          font-weight: normal;\n          line-height: 30px;\n        }\n        .lev {\n          display: flex;\n          margin: 3px 5px 0 10px;\n          display: inline-block;\n          height: 19px;\n          overflow: hidden;\n          padding-left: 29px;\n          line-height: 21px;\n          color: #e03a24;\n          font-size: 14px;\n          font-weight: bold;\n          font-style: italic;\n          background-position: -135px -190px;\n          vertical-align: middle;\n          i {\n            width: 9px;\n            height: 19px;\n            background-position: -191px -190px;\n            display: inline-block;\n            overflow: hidden;\n            vertical-align: middle;\n          }\n        }\n        .gender-icon {\n          font-size: 16px;\n          color: #e60026;\n          &.man {\n            color: #26a6e4;\n          }\n        }\n      }\n      .dynamic-wrap {\n        margin-top: 18px;\n        .dynamic-item {\n          padding: 0 40px 0 20px;\n          .count {\n            display: block;\n            margin-top: -4px;\n            font-size: 24px;\n            font-weight: normal;\n            cursor: pointer;\n          }\n          span {\n            display: block;\n            text-indent: 2px;\n            cursor: pointer;\n          }\n        }\n      }\n      .recommend {\n        margin: 15px 0;\n      }\n    }\n  }\n  .song-list {\n    margin-top: 25px;\n    height: auto;\n    .playlist {\n      flex-wrap: wrap;\n      justify-content: flex-start;\n      a {\n        margin-right: 38px;\n      }\n    }\n    .creator {\n      &:hover {\n        text-decoration: underline;\n        cursor: pointer;\n      }\n    }\n  }\n`\n","import {\n  ManOutlined,\n  PlayCircleOutlined,\n  WomanOutlined,\n} from '@ant-design/icons'\nimport React, { memo, useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport ThemeRecommendRcm from '@/components/theme-header-rcm'\nimport Authentication from '../../components/Authentication'\nimport SongCover from '@/components/song-cover'\nimport {\n  getUserSongList,\n  setCreateUserSongList,\n} from '@/service/user'\nimport { changeIsVisible } from '../../components/theme-login/store/actionCreator'\nimport { getCity, getSizeImage } from '../../utils/format-utils'\nimport { ProfileWrapper } from './style'\nimport Modal from 'antd/lib/modal/Modal'\nimport { Input, message } from 'antd'\n\nexport default memo(function Profile(props) {\n  // props/state\n  const [playlist, setPlaylist] = useState([])\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [playlistName, setPlaylistName] = useState('')\n\n  // redux\n  const dispatch = useDispatch()\n  const { isLogin, userinfo, cookie } = useSelector((state) => ({\n    isLogin: state.getIn(['loginState', 'isLogin']),\n    userinfo: state.getIn(['loginState', 'profile']),\n    cookie: state.getIn(['loginState', 'cookie']),\n  }))\n\n  // handle constant\n  const userPic =\n    userinfo && userinfo.avatarUrl && getSizeImage(userinfo.avatarUrl, 180)\n  const vip = userinfo && userinfo.vipType\n  const nickname = userinfo && userinfo.nickname\n  const gender = userinfo && userinfo.gender === 1 ? 'man' : 'woman'\n  const dynamic = [\n    {\n      name: '动态',\n      value: userinfo && userinfo.authStatus,\n    },\n    {\n      name: '关注',\n      value: userinfo && userinfo.follows,\n    },\n    {\n      name: '粉丝',\n      value: userinfo && userinfo.followeds,\n    },\n  ]\n  const signature = userinfo && userinfo.signature\n  const city = userinfo && userinfo.city && getCity(userinfo.city)\n  const songlistCount = userinfo && userinfo.playlistCount\n  const userId = userinfo && userinfo.userId\n\n  // other hook\n  useEffect(() => {\n    getUserSongList(userId).then((res) => {\n      setPlaylist(res.playlist)\n    })\n  }, [userId])\n  // handle\n  const toRedirect = useCallback(() => {\n    props.history.push('/')\n  }, [props.history])\n\n  const showModal = useCallback(() => {\n    dispatch(changeIsVisible(true))\n  }, [dispatch])\n\n  // modal function\n  const showModalDom = () => {\n    setIsModalVisible(true)\n  }\n\n  const handleOk = () => {\n    setIsModalVisible(false)\n    setCreateUserSongList(playlistName, cookie).then((res) => {\n      if (res.code === 200) {\n        message.success('创建成功😉').then(() => {\n          window.location.reload()\n        })\n      }\n    })\n  }\n\n  const handleCancel = () => {\n    setIsModalVisible(false)\n  }\n\n  // template\n  const renderDynamicList = () => {\n    return dynamic.map((item) => {\n      return (\n        <div className=\"dynamic-item\" key={item.name}>\n          <strong className=\"count\">{item.value}</strong>\n          <span>{item.name}</span>\n        </div>\n      )\n    })\n  }\n\n  const renderCreatePlaylist = () => {\n    return (\n      <span className=\"creator\" onClick={showModalDom}>\n        创建歌单\n      </span>\n    )\n  }\n\n  return (\n    <ProfileWrapper className=\"content\">\n      {/* 登录鉴权组件 */}\n      <Authentication flag={isLogin} to={toRedirect} showModal={showModal} />\n      <div className=\"user-info flex\">\n        <div className=\"user-pic\">\n          <img src={userPic} alt=\"\" />\n        </div>\n        <div className=\"user-detail\">\n          <div className=\"nickname-wrap\">\n            <h3 className=\"nickname gap\">{nickname}</h3>\n            <span className=\"icon-small lev\">\n              {vip}\n              <i className=\"icon-small\"></i>\n            </span>\n            <div className=\"gender-icon\">\n              {gender === 'man' ? (\n                <ManOutlined className=\"gender-icon man\" />\n              ) : (\n                <WomanOutlined className=\"gender-icon\" color=\"#e60026\" />\n              )}\n            </div>\n          </div>\n          <div className=\"dynamic-wrap flex\">{renderDynamicList()}</div>\n          <div className=\"recommend\">个人介绍：{signature}</div>\n          <div className=\"address\">所在地区：{city}</div>\n        </div>\n      </div>\n      <div className=\"song-list\">\n        <ThemeRecommendRcm\n          title={`我的歌单(${songlistCount})`}\n          right={renderCreatePlaylist()}\n          showIcon={true}\n        />\n        <div className=\"playlist flex\">\n          {playlist &&\n            playlist.map &&\n            playlist.map((item) => {\n              return <SongCover info={item} key={item.id} />\n            })}\n        </div>\n      </div>\n      <Modal\n        title=\"创建歌单\"\n        okText=\"确认\"\n        cancelText=\"取消\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Input\n          size=\"large\"\n          placeholder=\"请输入歌单\"\n          prefix={<PlayCircleOutlined />}\n          value={playlistName}\n          onInput={({ target }) => setPlaylistName(target.value)}\n        />\n      </Modal>\n    </ProfileWrapper>\n  )\n})\n","import request from './request'\n// 获取用户歌单\nexport const getUserSongList = (userId) => {\n  return request({\n    url: '/user/playlist',\n    params: {\n      uid: userId,\n      timestamp: new Date().getTime()\n    }\n  })\n}\n\n// 创建歌单\nexport const setCreateUserSongList = (name, cookie) => {\n  return request({\n    url: '/playlist/create',\n    params: {\n      name,\n      cookie\n    }\n  })\n}\n\n// 获取用户信息\nexport const getUserInfo = (cookie) => {\n  return request({\n    url: '/user/subcount',\n    params: {\n      cookie\n    }\n  })\n}\n"],"names":["Auth","props","flag","useEffect","message","then","to","showModal","style","display","active","memo","SongCoverWrapper","styled","width","SongCover","info","songList","picUrl","coverImgUrl","playCount","name","nickname","copywriter","creator","songInfoId","id","href","className","src","getSizeImage","alt","getCount","RcmHeaderWrapper","showIcon","url","require","RcmHeaderLeft","RcmHeaderRight","ThemeHeaderRmc","title","keywords","right","keywordsClick","map","item","onClick","e","preventDefault","defaultProps","ProfileWrapper","useState","playlist","setPlaylist","isModalVisible","setIsModalVisible","playlistName","setPlaylistName","dispatch","useDispatch","useSelector","state","isLogin","getIn","userinfo","cookie","userPic","avatarUrl","vip","vipType","gender","dynamic","value","authStatus","follows","followeds","signature","city","getCity","songlistCount","playlistCount","userId","request","params","uid","timestamp","Date","getTime","getUserSongList","res","toRedirect","useCallback","history","push","changeIsVisible","showModalDom","Authentication","ManOutlined","WomanOutlined","color","Modal","okText","cancelText","visible","onOk","setCreateUserSongList","code","window","location","reload","onCancel","size","placeholder","prefix","PlayCircleOutlined","onInput","target"],"sourceRoot":""}