{"version":3,"file":"static/js/921.43d63340.chunk.js","mappings":"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","sources":["components/theme-header-rcm/style.js","components/theme-header-rcm/index.js","hooks/change-music.js","pages/discover/child-pages/toplist/c-cpns/song-item/style.js","pages/discover/child-pages/toplist/c-cpns/song-item/index.js","pages/discover/child-pages/toplist/style.js","pages/discover/child-pages/toplist/c-cpns/top-list-item/style.js","pages/discover/child-pages/toplist/c-cpns/top-list-item/index.js","../node_modules/.pnpm/registry.npmmirror.com+@ant-design+icons-svg@4.2.1/node_modules/@ant-design/icons-svg/es/asn/FieldTimeOutlined.js","../node_modules/.pnpm/registry.npmmirror.com+@ant-design+icons@4.7.0_biqbaboplfbrettd7655fr4n2y/node_modules/@ant-design/icons/es/icons/FieldTimeOutlined.js","pages/discover/child-pages/toplist/c-cpns/toplist-title/style.js","pages/discover/child-pages/toplist/c-cpns/toplist-title/index.js","pages/discover/child-pages/toplist/c-cpns/toplist-main/style.js","pages/discover/child-pages/toplist/c-cpns/toplist-main/index.js","pages/discover/child-pages/toplist/index.js","pages/discover/child-pages/toplist/store/actionCreator.js","service/toplist.js","../node_modules/.pnpm/registry.npmmirror.com+@ant-design+icons-svg@4.2.1/node_modules/@ant-design/icons-svg/es/asn/PlayCircleOutlined.js","../node_modules/.pnpm/registry.npmmirror.com+@ant-design+icons@4.7.0_biqbaboplfbrettd7655fr4n2y/node_modules/@ant-design/icons/es/icons/PlayCircleOutlined.js"],"sourcesContent":["import styled from 'styled-components'\n\nexport const RcmHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 33px;\n  padding: 0 10px 0 0;\n  padding-left: ${props => props.showIcon ? '34px' : '2px'};\n  border-bottom: 2px solid #c10d0c;\n  background: ${props => {\n    const url = 'url(' + require('@/assets/img/sprite_02.png') + ') no-repeat center'\n    return props.showIcon ? url : ''\n  }};\n  background-position: -225px -156px;\n  line-height: 33px;\n`\n\nexport const RcmHeaderLeft = styled.div`\n  display: flex;\n  .hot-title {\n    display: flex;\n    margin-bottom: 5px;\n    a {\n      color: #333333;\n      &:hover {\n        text-decoration: none;\n      }\n    }\n  }\n\n  .keywords {\n    display: flex;\n    margin-left: 20px;\n    color: #ccc;\n    line-height: 35px;\n    .item {\n      .line {\n        margin: 0 10px;\n      }\n    }\n  }\n`\n\nexport const RcmHeaderRight = styled.div`\n  .icon {\n    display: inline-block;\n    width: 12px;\n    height: 12px;\n    margin-left: 4px;\n    vertical-align: middle;\n    background: transparent url('${require('@/assets/img/sprite_02.png')}') no-repeat center;\n    background-position: 0 -240px;\n  }\n`\n","import React, { memo } from 'react'\nimport propTypes from 'prop-types'\nimport { RcmHeaderLeft, RcmHeaderRight, RcmHeaderWrapper } from './style'\n\nconst ThemeHeaderRmc = function ThemeHeaderRmc(props) {\n  const { title, keywords, showIcon, right, keywordsClick } = props\n  return (\n    <RcmHeaderWrapper showIcon={showIcon}>\n      <RcmHeaderLeft>\n        <h2 className=\"hot-title\">\n          <a href=\"/discover/recommend\" className=\"no-link hot-text\">\n            {title}\n          </a>\n        </h2>\n        <ul className=\"keywords\">\n          {keywords.map(item => {\n            return (\n              <li className=\"item\" key={item}>\n                <a href=\"/\" onClick={(e) => { e.preventDefault(); keywordsClick(item) }}>{item}</a>\n                <span className=\"line\">|</span>\n              </li>\n            )\n          })}\n        </ul>\n      </RcmHeaderLeft>\n      <RcmHeaderRight>\n        <span>{right}</span>\n        {showIcon && <i className=\"icon\"></i>}\n      </RcmHeaderRight>\n    </RcmHeaderWrapper>\n  )\n}\n\nThemeHeaderRmc.propTypes = {\n  // title属性必填\n  title: propTypes.string.isRequired,\n  keywords: propTypes.array,\n  showIcon: propTypes.bool,\n  right: propTypes.any,\n  keywordsClick: propTypes.func,\n}\n\nThemeHeaderRmc.defaultProps = {\n  keywords: [],\n  showIcon: true,\n  right: '更多'\n}\n\nexport default memo(ThemeHeaderRmc)\n","import { useDispatch } from \"react-redux\"\nimport { getAddSongDetailAction } from '@/pages/player/store/actionCreator'\nimport { getFindIdIndex } from '@/utils/math-utils'\n\n/**\n * 调用该函数:传递播放列表和message组件,返回一个函数供于合成事件调用\n * @param {Array} playlist redux保存中播放列表\n * @param {Message} message Ant design消息组件:用于弹窗\n */\nexport function useAddPlaylist(playlist, message) {\n  const dispatch = useDispatch()\n  return (e, id) => {\n    // 阻止超链接跳转\n    e.preventDefault && e.preventDefault()\n    // 获取歌曲详情,添加到播放列表\n    dispatch(getAddSongDetailAction(id))\n    // 提示添加成功或失败\n    const index = getFindIdIndex(playlist, id)\n    switch (index) {\n      case -1:\n        message.success({ content: '添加成功' })\n        break\n      default:\n        message.success({ content: '不能添加重复的歌曲' })\n    }\n  }\n}","import styled from 'styled-components'\n\nexport const SongItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30px;\n\n  .song-item {\n    padding: 6px 10px;\n    line-height: 18px;\n    text-align: left;\n  }\n\n  .rank-count {\n    padding-left: 25px;\n    width: 70px;\n    color: #999;\n  }\n\n  .song-info {\n    display: flex;\n    justify-content: space-between;\n    width: ${(props) => (props.isPic ? '258px' : '328px')};\n\n    .font-active {\n      font-size: 15px;\n      cursor: pointer;\n      margin-right: 8px;\n    }\n    .font-active:active {\n      color: #d31111;\n    }\n\n    .btn {\n      width: 17px;\n      height: 17px;\n      margin-left: 8px;\n      cursor: pointer;\n      &.addto {\n        position: relative;\n        top: 2px;\n        background-position: 0 -700px;\n      }\n    }\n\n    .left-info>a {\n      display: inline-block;\n      width: 190px;\n    }\n  }\n\n  .duration {\n    width: 91px;\n  }\n`\n","import React, { memo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport propTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\nimport { useAddPlaylist } from '@/hooks/change-music'\n\nimport { getSizeImage } from '@/utils/format-utils.js'\nimport { getSongDetailAction } from '@/pages/player/store'\n\nimport { SongItemWrapper } from './style'\nimport { PlayCircleOutlined } from '@ant-design/icons'\nimport { message } from 'antd'\n\nfunction SongItem(props) {\n  // props/state\n  const {\n    currentRanking,\n    coverPic,\n    duration,\n    singer,\n    songId,\n    songName,\n    className = '',\n  } = props\n\n  // redux hook\n  const dispatch = useDispatch()\n  const { playlist } = useSelector(state => ({\n    playlist: state.getIn(['player', 'playList'])\n  }), shallowEqual)\n\n  // other function\n  const playMusic = (e, isTo = false) => {\n    // 如果不跳转,那么组织超链接的默认行为\n    if (!isTo) e.preventDefault()\n    dispatch(getSongDetailAction(songId))\n    // 播放音乐\n    document.getElementById('audio').autoplay = true\n  }\n  const addPlaylist = useAddPlaylist(playlist, message)\n\n  return (\n    <SongItemWrapper className={className} isPic={coverPic}>\n      <div className=\"song-item rank-count\">{currentRanking}</div>\n      {coverPic && (\n        <NavLink\n          to=\"/discover/song\"\n          className=\"song-item\"\n          onClick={(e) => playMusic(e, true)}\n        >\n          <img src={getSizeImage(coverPic, 50)} alt=\"\" />\n        </NavLink>\n      )}\n      <div className=\"song-item song-info\">\n        <div className=\"left-info\">\n          <PlayCircleOutlined\n            className=\"font-active\"\n            onClick={(e) => playMusic(e)}\n          />\n          <a href=\"/play\" onClick={(e) => playMusic(e)} className=\"text-nowrap\">\n            {songName}\n          </a>\n        </div>\n        <div className=\"right-operator\">\n          <button\n            href=\"/discover/recommend\"\n            className=\"sprite_icon2 btn addto\"\n            onClick={e => addPlaylist(e, songId)}\n          ></button>\n        </div>\n      </div>\n      <div className=\"song-item duration\">{duration}</div>\n      <NavLink\n        to=\"/discover/song\"\n        className=\"song-item singer\"\n        onClick={(e) => playMusic(e, true)}\n      >\n        {singer}\n      </NavLink>\n    </SongItemWrapper>\n  )\n}\n\nSongItem.propTypes = {\n  currentRanking: propTypes.number.isRequired,\n  coverPic: propTypes.string,\n  duration: propTypes.string.isRequired,\n  singer: propTypes.string.isRequired,\n  songId: propTypes.number.isRequired,\n  className: propTypes.string,\n  songName: propTypes.string.isRequired,\n}\n\nexport default memo(SongItem)\n","import styled from 'styled-components'\n\nexport const TopListWrapper = styled.div`\n  width: 982px;\n  margin: 0 auto;\n  border: 1px solid #d3d3d3;\n  border-width: 0 1px;\n  .content {\n    display: flex;\n  }\n`\n\nexport const TopListLeft = styled.div`\n  width: 240px;\n  background: #f9f9f9;\n  .top-list-container {\n    margin-top: 40px;\n  }\n`\n\nexport const TopListRight = styled.div`\n  width: 740px;\n`\n","import styled from 'styled-components'\n\nexport const TopListItemWrapper = styled.div`\n  margin-top: ${props => props.top + 'px'};\n\n  h3 {\n    font-weight: bold;\n    padding: 0 10px 6px 15px;\n    font-size: 14px;\n    font-family: 宋体;\n    color: #000;\n  }\n  .info {\n    display: flex;\n    padding: 10px 0 10px 20px;\n    height: 62px;\n    background-color: ${props => (props.selected ? '#e6e6e6;' : '')};\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #f4f2f2;\n    }\n\n    &.bg {\n      background-color: #e6e6e6;\n    }\n\n    .info-right {\n      margin-left: 10px;\n\n      .info-title {\n        width: 150px;\n        overflow: hidden;\n        margin-top: 2px;\n        margin-bottom: 8px;\n        color: #000;\n      }\n\n      .info-update {\n        color: #999;\n      }\n    }\n  }\n`\n","import React, { memo, Fragment } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\n\nimport { getSizeImage } from '@/utils/format-utils.js';\nimport { changeCurrentIndexAction, changeCurrentToplistIdAction } from '../../store/actionCreator'\n\nimport { TopListItemWrapper } from './style';\nimport propTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nfunction TopListItem(props) {\n  // props/state\n  const { toplistInfo } = props;\n\n  // redux hook\n  const dispatch = useDispatch()\n  const { currentIndex } = useSelector((state) => ({\n    currentIndex: state.getIn(['toplist', 'currentIndex'])\n  }), shallowEqual)\n\n  // other function\n  const clickItem = (e, index, id) => {\n    e.preventDefault();\n    // dispatch\n    dispatch(changeCurrentToplistIdAction(id))\n    dispatch(changeCurrentIndexAction(index))\n    // 修改URL\n    props.history.push(`/discover/ranking?id=${id}`)\n  };\n\n  return (\n    <TopListItemWrapper>\n      {toplistInfo.map((item, index) => {\n        return (\n          <Fragment key={item.id}>\n            <h3 style={{ marginTop: index === 4 ? '17px' : '' }}>\n              {index === 0 ? '云音乐特色榜' : index === 4 ? '全球媒体榜' : ''}\n            </h3>\n            <NavLink\n              className={\"info \" + (index === currentIndex ? 'bg' : '')}\n              onClick={(e) => clickItem(e, index, item.id)}\n              to={{ pathname: `/discover/songs`, search: `?id=${item.id}` }}\n            >\n              <div className=\"image\">\n                <img src={getSizeImage(item.coverImgUrl, 44)} alt=\"\" />\n              </div>\n              <div className=\"info-right\">\n                <div className=\"info-title\">{item.name}</div>\n                <div className=\"info-update\">{item.updateFrequency}</div>\n              </div>\n            </NavLink>\n          </Fragment>\n        );\n      })}\n    </TopListItemWrapper>\n  );\n}\n\nTopListItem.propTypes = {\n  selected: propTypes.bool,\n};\n\nTopListItem.defaultProps = {\n  selected: true,\n};\n\nexport default memo(TopListItem);\n","// This icon file is generated automatically.\nvar FieldTimeOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M945 412H689c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h256c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM811 548H689c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h122c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM477.3 322.5H434c-6.2 0-11.2 5-11.2 11.2v248c0 3.6 1.7 6.9 4.6 9l148.9 108.6c5 3.6 12 2.6 15.6-2.4l25.7-35.1v-.1c3.6-5 2.5-12-2.5-15.6l-126.7-91.6V333.7c.1-6.2-5-11.2-11.1-11.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M804.8 673.9H747c-5.6 0-10.9 2.9-13.9 7.7a321 321 0 01-44.5 55.7 317.17 317.17 0 01-101.3 68.3c-39.3 16.6-81 25-124 25-43.1 0-84.8-8.4-124-25-37.9-16-72-39-101.3-68.3s-52.3-63.4-68.3-101.3c-16.6-39.2-25-80.9-25-124 0-43.1 8.4-84.7 25-124 16-37.9 39-72 68.3-101.3 29.3-29.3 63.4-52.3 101.3-68.3 39.2-16.6 81-25 124-25 43.1 0 84.8 8.4 124 25 37.9 16 72 39 101.3 68.3a321 321 0 0144.5 55.7c3 4.8 8.3 7.7 13.9 7.7h57.8c6.9 0 11.3-7.2 8.2-13.3-65.2-129.7-197.4-214-345-215.7-216.1-2.7-395.6 174.2-396 390.1C71.6 727.5 246.9 903 463.2 903c149.5 0 283.9-84.6 349.8-215.8a9.18 9.18 0 00-8.2-13.3z\" } }] }, \"name\": \"field-time\", \"theme\": \"outlined\" };\nexport default FieldTimeOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FieldTimeOutlinedSvg from \"@ant-design/icons-svg/es/asn/FieldTimeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FieldTimeOutlined = function FieldTimeOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FieldTimeOutlinedSvg\n  }));\n};\n\nFieldTimeOutlined.displayName = 'FieldTimeOutlined';\nexport default /*#__PURE__*/React.forwardRef(FieldTimeOutlined);","import styled from \"styled-components\";\n\nexport const ToplistTitleWrapper = styled.div`\n  display: flex;\n  padding: 40px;\n  \n  .title-image {\n    position: relative;\n    padding: 3px;\n    border: 1px solid #ccc;\n\n    .msk {\n      width: 150px;\n      height: 150px;\n      background-position: -230px -380px;\n      top: 3px;\n      left: 3px;\n    }\n  }\n\n  .title-info {\n    margin-left: 35px;\n    padding: 16px 0 3px;\n\n    .update-info {\n      margin: 0 0 20px;\n      line-height: 35px;\n\n      .timer {\n        font-size: 15px;\n        margin-right: 5px;\n      }\n    }\n\n    .controls {\n      margin-bottom: 25px;\n      margin-right: -10px;\n      display: flex;\n      .play {\n        position: relative;\n        color: #fff;\n        width: 66px;\n        height: 31px;\n        padding: 0 5px 0 0;\n        margin-right: 35px;\n        line-height: 31px;\n        background-position: right -428px;\n        cursor: pointer;\n\n        .play-icon {\n          width: 20px;\n          height: 18px;\n          margin: 6px 2px 2px 0;\n          background-position: 0 -1622px;\n          overflow: hidden;\n        }\n\n        &:after {\n          content: '';\n          position: absolute;\n          right: -29px;\n          top: 0;\n          bottom: 0;\n          width: 31px;\n          background: url(${require('@/assets/img/sprite_button.png')}) 0 9999px;\n          background-position: 0 -1588px;\n        }\n      }\n\n      .inner {\n        display: flex;\n        width: 100%;\n        height: 31px;\n        padding: 0 7px 0 8px;\n        background-position: 0 -387px;\n        line-height: 31px;\n      }\n\n      .favorite,\n      .share,\n      .download,\n      .comment {\n        background-position: right -1020px;\n        margin-right: 6px;\n        padding: 0 5px 0 0;\n      }\n\n      .favorite > .inner,\n      .share > .inner,\n      .download > .inner,\n      .comment > .inner {\n        padding-right: 2px;\n        padding-left: 28px;\n      }\n\n      .favorite {\n        background-position: right -1020px;\n        .inner {\n          background-position: 0 -977px;\n        }\n      }\n\n      .share {\n        .inner {\n          background-position: 0 -1225px;\n        }\n      }\n\n      .download {\n        .inner {\n          background-position: 0 -2761px;\n        }\n      }\n\n      .comment {\n        .inner {\n          background-position: 0 -1465px;\n        }\n      }\n    }\n  }\n`","import React, { memo } from 'react'\nimport { shallowEqual, useSelector } from 'react-redux'\n\nimport { getSizeImage, formatMonthDay } from '@/utils/format-utils.js'\n\nimport { FieldTimeOutlined } from '@ant-design/icons'\nimport { ToplistTitleWrapper } from './style'\n\nexport default memo(function ToplistTitle() {\n  // redux hook\n  const { titleInfo } = useSelector((state) => ({\n    titleInfo: state.getIn(['toplist', 'currentToplistTitleInfo'])\n  }), shallowEqual)\n\n  // other handle \n  const picUrl = titleInfo && titleInfo.coverImgUrl\n  const name = titleInfo && titleInfo.name\n  const updateTime = titleInfo && titleInfo.trackNumberUpdateTime\n  const commentCount = titleInfo && titleInfo.commentCount\n  const shareCount = titleInfo && titleInfo.shareCount\n  const subscribedCount = titleInfo && titleInfo.subscribedCount\n\n  return (\n    <ToplistTitleWrapper>\n      <div className=\"title-image\">\n        <img src={getSizeImage(picUrl, 150)} alt=\"\"/>\n          <div className=\"image_cover msk\"></div>\n      </div>\n      <div className=\"title-info\">\n        <h2>{name}</h2>\n        <div className=\"update-info\">\n          <FieldTimeOutlined className=\"timer\" />最近更新: {formatMonthDay(updateTime)}\n        </div>\n        <div className=\"controls\">\n          <div className=\"sprite_button play\">\n            <i className=\"sprite_button inner\">\n              <em className=\"sprite_button play-icon\"></em>\n              播放\n            </i>\n          </div>\n          <div className=\"sprite_button favorite\">\n            <i className=\"sprite_button inner\">\n              <em className=\"sprite_button favorite-icon\"></em>\n              ({subscribedCount})\n            </i>\n          </div>\n          <div className=\"sprite_button share\">\n            <i className=\"sprite_button inner\">\n              <em className=\"sprite_button favorite-icon\"></em>\n              ({shareCount})\n            </i>\n          </div>\n          <div className=\"sprite_button download\">\n            <i className=\"sprite_button inner\">\n              <em className=\"sprite_button favorite-icon\"></em>\n              下载\n            </i>\n          </div>\n          <div className=\"sprite_button comment\">\n            <i className=\"sprite_button inner\">\n              <em className=\"sprite_button favorite-icon\"></em>\n              ({commentCount})\n            </i>\n          </div>\n        </div>\n      </div>\n    </ToplistTitleWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const ToplistMainWrapper = styled.div`\n  padding: 10px 40px;\n\n  .toplist-main {\n    border: 1px solid #d9d9d9;\n\n    .main-header {\n      display: flex;\n      .header-item {\n        width: 74px;\n        height: 34px;\n        line-height: 18px;\n        padding: 8px 10px;\n        background-position: 0 0;\n        background-repeat: repeat-x;\n        background-color: #f2f2f2;\n        color: #666;\n        \n        &:first-child {\n          border-right: 1px solid #dadada;\n        }\n        &.header-title {\n          width: 327px;\n          border-right: 1px solid #dadada;\n        }\n        &.header-singer {\n          width: 173px;\n        }\n        &.header-time {\n          width: 91px;\n          border-right: 1px solid #dadada;\n        }\n      }\n    }\n\n    .main-list {\n      .song_item:nth-child(odd) {\n        background: #f7f7f7 !important;\n      }\n      .song_item:nth-child(-n + 3) {\n        height: 70px !important;\n      }\n    }\n  }\n`\n","import React, { memo, useEffect } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport { formatMinuteSecond } from '@/utils/format-utils.js'\n\nimport { ToplistMainWrapper } from './style'\nimport ThemeHeaderRcm from '@/components/theme-header-rcm'\nimport SongItem from '../song-item'\nimport { getToplistItemAction } from '../../store/actionCreator'\n\nexport default memo(function ToplistMain() {\n  // props/states\n\n  // redux hooks\n  const dispatch = useDispatch()\n  const { playCount, currentToplistId, currentToplist } = useSelector(\n    (state) => ({\n      playCount: state.getIn([\n        'toplist',\n        'currentToplistTitleInfo',\n        'playCount',\n      ]),\n      currentToplistId: state.getIn(['toplist', 'currentToplistId']),\n      currentToplist: state.getIn(['toplist', 'currentToplist'])\n    }),\n    shallowEqual\n  )\n\n  // other hook\n  useEffect(() => {\n    dispatch(getToplistItemAction(currentToplistId))\n  }, [dispatch, currentToplistId])\n\n  // other handle\n  const rightSlot = (\n    <span>\n      播放：<em style={{ color: '#c20c0c' }}>{playCount}</em>次\n    </span>\n  )\n\n  return (\n    <ToplistMainWrapper>\n      <ThemeHeaderRcm title=\"歌曲列表\" showIcon={false} right={rightSlot} />\n      <div className=\"toplist-main\">\n        <div className=\"main-header\">\n          <div className=\"sprite_table header-item\"></div>\n          <div className=\"sprite_table header-item header-title\">标题</div>\n          <div className=\"sprite_table header-item header-time\">时长</div>\n          <div className=\"sprite_table header-item header-singer\">歌手</div>\n        </div>\n        <div className=\"main-list\">\n          {\n            currentToplist && currentToplist.slice(0, 100).map((item, index) => {\n              return <SongItem \n              key={item.id}\n              currentRanking={index + 1} \n              className=\"song_item\"\n              coverPic={index < 3 ? item.al.picUrl : ''}\n              duration={formatMinuteSecond(item.dt)}\n              songName={item.name}\n              singer={item.ar[0].name}\n              songId={item.id}\n              />\n            })\n          }\n        </div>\n      </div>\n    </ToplistMainWrapper>\n  )\n})\n","import React, { memo, useEffect } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport qs from 'query-string'\n\nimport { TopListLeft, TopListRight, TopListWrapper } from './style'\nimport TopListItem from './c-cpns/top-list-item'\nimport ToplistTitle from './c-cpns/toplist-title'\nimport ToplistMain from './c-cpns/toplist-main'\nimport {\n  getToplistTitleInfoAction,\n  getToplistInfoAction,\n} from './store/actionCreator'\n\nexport default memo(function Toplist(props) {\n  // redux/hook\n  const dispatch = useDispatch()\n  const { toplistInfo, currentToplistId } = useSelector(\n    (state) => ({\n      toplistInfo: state.getIn(['toplist', 'toplistInfo']),\n      currentToplistId: state.getIn(['toplist', 'currentToplistId']),\n    }),\n    shallowEqual\n  )\n\n  // other hook\n  useEffect(() => {\n    // 榜单item\n    dispatch(getToplistInfoAction())\n  }, [dispatch])\n\n  // 排行榜头部信息\n  useEffect(() => {\n    // 派发榜单标题信息Action\n    let { id } = qs.parse(props.location.search)\n    if (!id) {\n      id = currentToplistId\n    }\n    dispatch(getToplistTitleInfoAction(id))\n  }, [currentToplistId, dispatch, props])\n\n  return (\n    <TopListWrapper className=\"wrap-bg2\">\n      <div className=\"content w980\">\n        <TopListLeft>\n          <div className=\"top-list-container\">\n            <TopListItem toplistInfo={toplistInfo} history={props.history} />\n          </div>\n        </TopListLeft>\n        <TopListRight>\n          <ToplistTitle />\n          <ToplistMain />\n        </TopListRight>\n      </div>\n    </TopListWrapper>\n  )\n})\n","import * as actionTypes from './actionTypes'\nimport { getToplistInfo, getToplistDetail } from '@/service/toplist'\n\n// 改变榜单数据Action\nconst changeToplistAction = (toplistInfo) => ({\n  type: actionTypes.CHANGE_TOPLIST_COUNT,\n  toplistInfo,\n})\n\n// 改变当前索引Action\nexport const changeCurrentIndexAction = (index) => ({\n  type: actionTypes.CHANGE_CURRENT_INDEX,\n  index,\n})\n\n// 改变当前歌单的ID_Action\nexport const changeCurrentToplistIdAction = (id) => ({\n  type: actionTypes.CHANGE_CURRENT_TOPLIST_ID,\n  id,\n})\n\n// 改变榜单标题详情Action\nconst changeToplistTitleInfo = (titleInfo) => ({\n  type: actionTypes.CHANGE_CURRENT_TOPLIST_TITLE_INFO,\n  titleInfo,\n})\n\n// 改变不同榜单列表Action\nconst changeCurrentToplist = (toplist) => ({\n  type: actionTypes.CHANGE_CURRENT_TOPLIST,\n  toplist,\n})\n\n// 榜单network\nexport const getToplistInfoAction = () => {\n  return (dispatch) => {\n    getToplistInfo().then((res) => {\n      dispatch(changeToplistAction(res.list))\n    })\n  }\n}\n\n// 榜单标题信息 network\nexport const getToplistTitleInfoAction = (id) => {\n  return (dispatch) => {\n    getToplistDetail(id).then((res) => {\n      // 取出榜单标题详情信息\n      const {\n        coverImgUrl,\n        name,\n        trackNumberUpdateTime,\n        playCount,\n        subscribedCount,\n        commentCount,\n        shareCount,\n      } = res && res.playlist\n      const toplistTitleInfo = {\n        coverImgUrl,\n        name,\n        trackNumberUpdateTime,\n        playCount,\n        subscribedCount,\n        commentCount,\n        shareCount,\n      }\n      dispatch(changeToplistTitleInfo(toplistTitleInfo))\n    })\n  }\n}\n\n// 榜单列表详情信息 network\nexport const getToplistItemAction = (id) => {\n  return (dispatch) => {\n    getToplistDetail(id).then((res) => {\n        // 榜单列表详情信息\n      const currentToplist = res && res.playlist && res.playlist.tracks\n      dispatch(changeCurrentToplist(currentToplist))\n    })\n  }\n}\n","import request from './request'\n\nexport function getToplistInfo() {\n  return request({\n    url: '/toplist'\n  })\n}\n\nexport function getToplistDetail(id) {\n  return request({\n    url: '/playlist/detail',\n    params: {\n      id\n    }\n  })\n}","// This icon file is generated automatically.\nvar PlayCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M719.4 499.1l-296.1-215A15.9 15.9 0 00398 297v430c0 13.1 14.8 20.5 25.3 12.9l296.1-215a15.9 15.9 0 000-25.8zm-257.6 134V390.9L628.5 512 461.8 633.1z\" } }] }, \"name\": \"play-circle\", \"theme\": \"outlined\" };\nexport default PlayCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlayCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlayCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlayCircleOutlined = function PlayCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlayCircleOutlinedSvg\n  }));\n};\n\nPlayCircleOutlined.displayName = 'PlayCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlayCircleOutlined);"],"names":["RcmHeaderWrapper","styled","props","showIcon","url","require","RcmHeaderLeft","RcmHeaderRight","ThemeHeaderRmc","title","keywords","right","keywordsClick","className","href","map","item","onClick","e","preventDefault","defaultProps","memo","useAddPlaylist","playlist","message","dispatch","useDispatch","id","getAddSongDetailAction","getFindIdIndex","success","content","SongItemWrapper","isPic","SongItem","currentRanking","coverPic","duration","singer","songId","songName","useSelector","state","getIn","shallowEqual","playMusic","isTo","getSongDetailAction","document","getElementById","autoplay","addPlaylist","to","src","getSizeImage","alt","PlayCircleOutlined","TopListWrapper","TopListLeft","TopListRight","TopListItemWrapper","top","selected","TopListItem","toplistInfo","currentIndex","index","Fragment","style","marginTop","changeCurrentToplistIdAction","changeCurrentIndexAction","history","push","clickItem","pathname","search","coverImgUrl","name","updateFrequency","FieldTimeOutlined","ref","React","AntdIcon","_objectSpread","icon","FieldTimeOutlinedSvg","displayName","ToplistTitleWrapper","titleInfo","picUrl","updateTime","trackNumberUpdateTime","commentCount","shareCount","subscribedCount","formatMonthDay","ToplistMainWrapper","playCount","currentToplistId","currentToplist","useEffect","getToplistItemAction","rightSlot","color","slice","al","formatMinuteSecond","dt","ar","getToplistInfoAction","qs","location","getToplistTitleInfoAction","type","actionTypes","getToplistInfo","then","res","list","getToplistDetail","toplist","tracks","request","params","PlayCircleOutlinedSvg"],"sourceRoot":""}