{"version":3,"file":"static/js/502.d15b4001.chunk.js","mappings":"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","sources":["components/pagination/style.js","components/pagination/index.js","components/song-cover/style.js","components/song-cover/index.js","utils/handle-data.js","pages/discover/child-pages/songs/store/actionCreators.js","pages/discover/child-pages/songs/c-cpns/songs-category/style.js","pages/discover/child-pages/songs/c-cpns/songs-category/index.js","pages/discover/child-pages/songs/c-cpns/songs-header/style.js","pages/discover/child-pages/songs/c-cpns/songs-header/index.js","pages/discover/child-pages/songs/c-cpns/songs-list/style.js","pages/discover/child-pages/songs/c-cpns/songs-list/index.js","pages/discover/child-pages/songs/style.js","pages/discover/child-pages/songs/index.js","service/songs.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PaginationWrapper = styled.div`\n  .pagination {\n    margin: 30px 0;\n    text-align: center;\n\n    .control {\n      width: 69px;\n      height: 24px;\n      line-height: 22px;\n      text-align: center;\n      border: 1px solid #ccc;\n      border-radius: 2px;\n      margin: 0 5px;\n      color: #333;\n\n      &:disabled {\n        color: #999;\n      }\n    }\n\n    .ant-pagination-item {\n      border: 1px solid #ccc !important;\n      margin: 0 5px;\n      border-radius: 3px;\n\n      a {\n        font-size: 12px;\n      }\n\n      &.ant-pagination-item-active {\n        background-color: #c20c0c;\n        border-color: #A2161B;\n        a {\n          color: #fff;\n        }\n      }\n    }\n  }\n`","import React, { memo } from 'react';\n\nimport { Pagination } from 'antd';\nimport { PaginationWrapper } from './style';\n\nexport default memo(function HYPagination (props) {\n  const { currentPage, total, onPageChange } = props;\n\n  // render function\n  function itemRender (current, type, originalElement) {\n    if (type === 'prev') {\n      return <button className=\"control prev\"> &lt; 上一页</button>;\n    }\n    if (type === 'next') {\n      return <button className=\"control next\">下一页 &gt;</button>;\n    }\n    return originalElement;\n  }\n\n  return (\n    <PaginationWrapper>\n      <Pagination className=\"pagination\"\n        size=\"small\"\n        current={currentPage}\n        defaultCurrent={1}\n        total={total}\n        pageSize={35}\n        showSizeChanger={false}\n        itemRender={itemRender}\n        onChange={onPageChange} />\n    </PaginationWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const SongCoverWrapper = styled.a`\n  width: ${props => props.width + 'px'};\n  margin: 20px 0 20px 0;\n  .cover-wrapper {\n    width: 140px;\n    height: 140px;\n    position: relative;\n\n    img {\n      width: 100%;\n    }\n\n    .cover-mask {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      background-position: 0 0;\n\n      .bottom-bar {\n        position: absolute;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 10px;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        height: 27px;\n        background-position: 0 -537px;\n        color: #ccc;\n\n        .erji {\n          margin-right: 5px;\n          display: inline-block;\n          width: 14px;\n          height: 11px;\n          background-position: 0 -24px;\n        }\n\n        .play {\n          display: inline-block;\n          width: 16px;\n          height: 17px;\n          background-position: 0 0;\n        }\n      }\n    }\n  }\n\n  .cover-title {\n    font-size: 14px;\n    color: #000;\n    margin-top: 5px;\n  }\n\n  .cover-source {\n    color: #666;\n  }\n`\n","import React, { memo } from 'react'\nimport { getCount, getSizeImage } from '@/utils/format-utils'\nimport { SongCoverWrapper } from './style'\n\n// 歌曲封面组件\nfunction SongCover(props) {\n  const { info, songList, width = 140 } = props\n  // pic\n  const picUrl = (info && (info.picUrl || info.coverImgUrl)) || (songList && songList.coverImgUrl) \n  // playCount 播放次数 \n  const playCount = (info && info.playCount) || (songList && songList.playCount) || 0\n  // name\n  const name = (info && info.name) || (songList && songList.name) \n  // nickname\n  const nickname = (info && info.copywriter) || (songList && songList.creator.nickname) \n  // id\n  const songInfoId = (info && info.id) || (songList && songList.id)\n  \n  return (\n    <SongCoverWrapper width={width} href={`#/songlist?songlistId=${songInfoId}`}>\n      <div className=\"cover-wrapper\">\n        <img src={getSizeImage(picUrl, 140)} alt=\"\" />\n        <div className=\"cover-mask sprite_cover\">\n          <div className=\"bottom-bar sprite_cover\">\n            <span>\n              <i className=\"sprite_icon erji\"></i>\n              {getCount(playCount)}\n            </span>\n            <i className=\"sprite_icon play\"></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"cover-title text-nowrap\">by-{name}</div>\n      <div className=\"cover-source text-nowrap\">\n        by {(info && info.copywriter) || nickname}\n      </div>\n    </SongCoverWrapper>\n  )\n}\n\nexport default memo(SongCover)\n","export function handleSongsCategory(data) {\n  // 1.获取所有的类别\n  const category = data.categories;\n\n  // 2.创建类别数据结构\n  const categoryData = Object.entries(category).map(([key, value]) => {\n    return {\n      name: value,\n      subs: []\n    }\n  })\n\n  // 3.将subs添加到对应的类别中\n  for (let item of data.sub) {\n    categoryData[item.category].subs.push(item);\n  }\n\n  return categoryData;\n}\n\n// 获取歌手字母类别\nexport function generateSingerAlpha() {\n  var alphabets = [\"-1\"];\n  var start = 'A'.charCodeAt(0);\n  var last = 'Z'.charCodeAt(0);\n  for (var i = start; i <= last; ++i) {\n    alphabets.push(String.fromCharCode(i));\n  }\n\n  alphabets.push(\"0\");\n\n  return alphabets;\n}\n\nexport const singerAlphas = generateSingerAlpha();\n","import * as actionTypes from './constants';\nimport { PER_PAGE_NUMBER } from './constants';\n\nimport {\n  getSongCategory,\n  getSongCategoryList\n} from \"@/service/songs\";\nimport { \n  handleSongsCategory\n} from \"@/utils/handle-data\";\n\nconst changeCategoryAction = (res) => ({\n  type: actionTypes.CHANGE_CATEGORY,\n  category: res\n})\n\nconst changeSongListAction = (res) => ({\n  type: actionTypes.CHANGE_CATEGORY_SONGS,\n  categorySongs: res\n})\n\nexport const changeCurrentCategoryAction = (name) => ({\n  type: actionTypes.CHANGE_CURRENT_CATEGORY,\n  currentCategory: name\n})\n\nexport const getCategory = () => {\n  return dispatch => {\n    getSongCategory().then(res => {\n      const categoryData = handleSongsCategory(res);\n      dispatch(changeCategoryAction(categoryData))\n    })\n  }\n}\n\nexport const getSongList = (page) => {\n  return (dispatch, getState) => {\n    // 1.获取currentCategory\n    const name = getState().getIn([\"songList\", \"currentCategory\"]);\n\n    // 2.获取数据\n    getSongCategoryList(name, page * PER_PAGE_NUMBER).then(res => {\n      dispatch(changeSongListAction(res));\n    })\n  }\n}\n","import styled from \"styled-components\";\n\nexport const CategoryWrapper = styled.div`\n  position: absolute;\n  z-index: 99;\n  top: 55px;\n  left: -25px;\n  width: 700px;\n  border: 1px solid #ccc;\n  background-color: #fefefe;\n  box-shadow: 0 0 10px 2px #d3d3d3;\n  border-radius: 5px;\n  padding-top: 10px;\n  \n  .arrow {\n    position: absolute;\n    top: -11px;\n    left: 110px;\n    width: 24px;\n    height: 11px;\n    background-position: -48px 0;\n  }\n\n  .all {\n    padding: 10px 25px;\n    border-bottom: 1px solid #e2e2e2;\n    a {\n      display: inline-block;\n      text-align: center;\n      width: 75px;\n      height: 26px;\n      line-height: 26px;\n      border: 1px solid #d3d3d3;\n      border-radius: 3px;\n      background-color: #fafafa;\n    }\n  }\n\n  .category {\n    padding-left: 25px;\n    dl {\n      display: flex;\n      align-items: flex-start;\n    }\n\n    dt {\n      display: inline-flex;\n      align-items: center;\n      padding: 15px 0 10px;\n      width: 70px;\n      text-align: center;\n\n      i {\n        display: inline-block;\n        width: 24px;\n        height: 24px;\n        background-position: -20px -735px;\n        margin-right: 8px;\n      }\n    }\n\n    dl.item1 {\n      i {\n        background-position: 0 -60px;\n      }\n    }\n\n    dl.item2 {\n      i {\n        background-position: 0 -88px;\n      }\n    }\n\n    dl.item3 {\n      i {\n        background-position: 0 -117px;\n      }\n    }\n\n    dl.item4 {\n      i {\n        background-position: 0 -141px;\n      }\n\n      dd {\n        padding-bottom: 25px;\n      }\n    }\n\n    dd {\n      padding-top: 18px;\n      padding-left: 15px;\n      flex: 1;\n      display: flex;\n      flex-wrap: wrap;\n      border-left: 1px solid #e2e2e2;\n\n      .item {\n        margin-bottom: 8px;\n        cursor: pointer;\n      }\n\n      a {\n        color: #333;\n      }\n\n      .divider {\n        margin: 0 12px;\n        color: #e2e2e2;\n      }\n    }\n  }\n`","import React, { memo } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\n\nimport {\n  changeCurrentCategoryAction,\n  getSongList\n} from \"../../store/actionCreators\";\n\nimport {\n  CategoryWrapper\n} from \"./style\";\n\nexport default memo(function HYSongsCategory() {\n  // redux\n  const { category } = useSelector(state => ({\n    category: state.getIn([\"songList\", \"category\"])\n  }), shallowEqual);\n  const dispatch = useDispatch();\n\n  function selectCategory(name) {\n    dispatch(changeCurrentCategoryAction(name));\n    dispatch(getSongList(0));\n  }\n\n  return (\n    <CategoryWrapper>\n      <div className=\"arrow sprite_icon\"></div>\n      <div className=\"all\">\n        <span className=\"link\" onClick={e => selectCategory(\"全部\")}>全部风格</span>\n      </div>\n      <div className=\"category\">\n        {\n          category.map((item, index) => {\n            return (\n              <dl key={item.name} className={\"item\" + index}>\n                <dt>\n                  <i className=\"icon sprite_icon2\"></i>\n                  <span>{item.name}</span>\n                </dt>\n                <dd>\n                  {\n                    item.subs.map(sItem => {\n                      return (\n                        <div className=\"item\" key={sItem.name}>\n                          <span className=\"link\" onClick={e => selectCategory(sItem.name)}>{sItem.name}</span>\n                          <span className=\"divider\">|</span>\n                        </div>\n                      )\n                    })\n                  }\n                </dd>\n              </dl>\n            )\n          })\n        }\n      </div>\n    </CategoryWrapper>\n  )\n})\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 2px solid #c20c0c;\n  padding-bottom: 6px;\n`\n\nexport const HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  .title {\n    font-size: 24px;\n    font-family: \"Microsoft Yahei\", Arial, Helvetica, sans-serif;\n  }\n\n  .select {\n    position: relative;\n    top: 2px;\n    width: 91px;\n    height: 31px;\n    line-height: 31px;\n    background-color: #fafafa;\n    border: 1px solid #d3d3d3;\n    border-radius: 3px;\n    color: #0c73c2;\n    margin-left: 10px;\n    cursor: pointer;\n    &:hover {\n      background-color: #fff;\n    } \n\n    i {\n      position: relative;\n      left: 5px;\n      bottom: 2px;\n      display: inline-block;\n      width: 8px;\n      height: 5px;\n      background-position: -70px -543px;\n    }\n  }\n\n  .show {\n    /* display: block !important; */\n  }\n\n  .category {\n    display: block;\n    .cover {\n      position: fixed;\n      left: 0;\n      right: 0;\n      top: 105px;\n      bottom: 0;\n      background-color: rgba(0,0,0,.05);\n    }\n  }\n`\n\nexport const HeaderRight = styled.div`\n  .hot {\n    width: 46px;\n    height: 29px;\n    background-color: #c20c0c;\n    color: #fff;\n    border-radius: 3px;\n    border: 1px solid #aaa;\n  }\n`","import React, { useState, memo } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nimport HYSongsCategory from '../songs-category'\nimport {\n  HeaderWrapper,\n  HeaderLeft,\n  HeaderRight\n} from \"./style\";\n\nexport default memo(function HYSongsHeader() {\n  // hooks\n  const [showCategory, setShowCategory] = useState(false);\n\n  // redux\n  const { currentCategory } = useSelector(state => ({\n    currentCategory: state.getIn([\"songList\", \"currentCategory\"])\n  }), shallowEqual);\n\n  return (\n    <HeaderWrapper>\n      <HeaderLeft>\n        <span className=\"title\">{currentCategory}</span>\n        <button className=\"select\" onClick={e => setShowCategory(!showCategory)}>\n          <span>选择分类</span>\n          <i className=\"sprite_icon2\"></i>\n        </button>\n        {showCategory ? <HYSongsCategory /> : null}\n      </HeaderLeft>\n      <HeaderRight>\n        <button className=\"hot\">热门</button>\n      </HeaderRight>\n    </HeaderWrapper>\n  )\n})\n","import styled from 'styled-components';\n\nexport const SongListWrapper = styled.div`\n  .songs-list {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-right: -30px;\n  }\n`","import React, { useState, memo } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\n\nimport { PER_PAGE_NUMBER } from '../../store/constants';\nimport { getSongList } from \"../../store/actionCreators\";\n\n// import HYThemeCover from '@/components/theme-cover';\nimport SongCover from '@/components/song-cover'\nimport HYPagination from '@/components/pagination';\nimport {\n  SongListWrapper\n} from \"./style\";\nimport { Skeleton } from 'antd';\n\nexport default memo(function HYSongsList() {\n  // hooks\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // redux\n  const { categorySongs } = useSelector(state => ({\n    categorySongs: state.getIn([\"songList\", \"categorySongs\"])\n  }), shallowEqual);\n  const songList = categorySongs.playlists || [];\n  const total = categorySongs.total || 0;\n  const dispatch = useDispatch();\n\n  function onPageChange(page, pageSize) {\n    window.scroll(0, 0);\n    setCurrentPage(page);\n    dispatch(getSongList(page));\n  }\n  return (\n    <SongListWrapper>\n      { !songList.length ? <Skeleton active /> : <div className=\"songs-list\">\n        {\n          songList.map((item, index) => {\n            return (\n              // <HYThemeCover info={item} key={item.id} right=\"30px\" />\n              <SongCover info={item} key={item}/>\n            )\n          })\n        }\n      </div>}\n      <HYPagination currentPage={currentPage} \n                    total={total} \n                    pageSize={PER_PAGE_NUMBER}\n                    onPageChange={onPageChange}/>\n    </SongListWrapper>\n  )\n})\n","import styled from 'styled-components';\n\nexport const SongsWrapper = styled.div`\n  max-width: 980px;\n  margin: 0 auto;\n  padding: 40px;\n  border: 1px solid #d3d3d3;\n  border-width: 0 1px;\n  background-color: #fff;\n`","import React, { useEffect, memo } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\n\nimport {\n  getCategory,\n  getSongList,\n  changeCurrentCategoryAction,\n} from './store/actionCreators'\nimport { getQueryObject } from '@/utils/format-utils'\nimport HYSongsHeader from './c-cpns/songs-header'\nimport HYSongsList from './c-cpns/songs-list'\nimport { SongsWrapper } from './style'\n\nexport default memo(function HYSongs() {\n  // props/state\n  const { albumName } = getQueryObject()\n\n  // redux\n  const dispatch = useDispatch()\n  const cat = useLocation().cat\n\n  useEffect(() => {\n    dispatch(changeCurrentCategoryAction(albumName || cat))\n  }, [dispatch, cat, albumName])\n\n  // hooks\n  useEffect(() => {\n    dispatch(getCategory())\n    dispatch(getSongList(0))\n  }, [dispatch])\n\n  return (\n    <SongsWrapper className=\"wrap-v2\">\n      <HYSongsHeader />\n      <HYSongsList />\n    </SongsWrapper>\n  )\n})\n","import request from './request'\n\n// 获取歌单列表\nexport function getSongList(limit, offset = 0) {\n  return request({\n    url: '/top/playlist',\n    params: {\n      limit,\n      offset\n    }\n  })\n}\n\nexport function getSongCategory() {\n  return request({\n    url: \"/playlist/catlist\"\n  })\n}\n\nexport function getSongCategoryList(cat = \"全部\", offset = 0, limit = 35) {\n  return request({\n    url: \"/top/playlist\",\n    params: {\n      cat,\n      limit,\n      offset\n    }\n  })\n}\n\n// 点赞\n/* cid : 评论 id\nt : 是否点赞 ,1 为点赞 ,0 为取消点赞 */\nexport function sendLikeComment(id, cid, t, cookie) {\n  return request({\n    url: \"/comment/like\",\n    params: {\n      id,\n      cid,\n      t,\n      type: 0,\n      cookie\n    }\n  })\n}\n\n/* 收藏歌单, 传递歌单id */\nexport function sendCollectSonglist(id, cookie) {\n  return request({\n    url: \"/playlist/subscribe\",\n    params: {\n      t: 1,\n      id,\n      cookie\n    }\n  })\n}\n"],"names":["PaginationWrapper","styled","memo","props","currentPage","total","onPageChange","className","size","current","defaultCurrent","pageSize","showSizeChanger","itemRender","type","originalElement","onChange","SongCoverWrapper","width","SongCover","info","songList","picUrl","coverImgUrl","playCount","name","nickname","copywriter","creator","songInfoId","id","href","src","getSizeImage","alt","getCount","alphabets","start","charCodeAt","last","i","push","String","fromCharCode","generateSingerAlpha","changeCurrentCategoryAction","actionTypes","currentCategory","getCategory","dispatch","getSongCategory","then","res","categoryData","data","category","categories","Object","entries","map","subs","sub","item","handleSongsCategory","changeCategoryAction","getSongList","page","getState","getIn","getSongCategoryList","PER_PAGE_NUMBER","categorySongs","changeSongListAction","CategoryWrapper","useSelector","state","shallowEqual","useDispatch","selectCategory","onClick","e","index","sItem","HeaderWrapper","HeaderLeft","HeaderRight","useState","showCategory","setShowCategory","SongListWrapper","setCurrentPage","playlists","length","active","window","scroll","SongsWrapper","albumName","getQueryObject","cat","useLocation","useEffect","request","url","offset","limit","params","sendLikeComment","cid","t","cookie","sendCollectSonglist"],"sourceRoot":""}