{"version":3,"file":"static/js/79.9daa41ba.chunk.js","mappings":"+MAEaA,EAFeC,EAAQ,OAA5BC,QAE+BC,IAAG,yoB,WCG1C,SAASC,EAAWC,GAElB,IAAQC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OAEZC,EAAUF,IAAYG,EAAAA,EAAAA,IAAaH,EAAU,MAAS,oEAC5D,OACE,UAACN,EAAgB,YACf,iBAAKU,UAAU,YAAW,WACxB,gBAAKC,IAAKH,EAAQI,IAAI,MACtB,iBAAMF,UAAU,oBAElB,eAAGA,UAAU,cAAa,WACxB,0BAAOH,KACP,cAAGG,UAAU,kCAIrB,CAOA,I,EAAA,GAAeG,EAAAA,EAAAA,MAAKT,GC3BPU,E,SAAkBC,QAAAA,IAAU,mF,sBCOzC,GAAeF,EAAAA,EAAAA,OAAK,SAAkBR,GAEpC,MAAuBW,EAAAA,MAASX,EAAMY,SAASC,QAAvCC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAGRC,GAAWC,EAAAA,EAAAA,MACTC,GAAeC,EAAAA,EAAAA,KACrB,SAACC,GAAK,MAAM,CACVF,WAAYE,EAAMC,MAAM,CAAC,SAAU,eACpC,GACDC,EAAAA,IAJMJ,WAWR,OAJAK,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,GAA0BT,EAAM,GAAID,GAC/C,GAAG,CAACE,EAAUD,EAAMD,KAGlB,SAACL,EAAe,UACbS,GACCA,EAAWO,KAAI,SAACC,GACd,OACE,SAAC,EAAU,CAETzB,SAAUyB,EAAKvB,OACfD,OAAQwB,EAAKC,MAFRD,EAAKE,GAKhB,KAGR,G,yGCpCMC,EAAuB,SAACC,GAAK,MAAM,CACvChB,KAAMiB,EAAAA,EACND,MAAAA,EACD,EASYE,EAA0B,SAACC,EAAUC,GAAqB,IAAdpB,EAAI,uDAAG,EAC9D,OAAO,SAACE,IACNmB,EAAAA,EAAAA,GAAkBF,EAAUC,EAAOpB,GAAMsB,MAAK,SAACC,GAC7C,IAAMP,EAAQO,GAAOA,EAAIC,OAAOR,MAChCd,EAASa,EAAqBC,GAChC,GACF,CACF,EAGaN,EAA4B,SAACT,EAAMmB,EAAOpB,GACrD,OAAO,SAACE,IACNmB,EAAAA,EAAAA,GAAkBpB,EAAM,GAAID,GAAMsB,MAAK,SAACC,GACtC,IAAMnB,EAAamB,EAAIC,QAAUD,EAAIC,OAAOC,QAC5CC,QAAQC,IAAIvB,GACZF,EArByB,SAACE,GAAU,MAAM,CAC9CJ,KAAMiB,EAAAA,EACNb,WAAYA,EACb,CAkBcwB,CAAuBxB,GAClC,GACF,CACF,C","sources":["pages/search/child-pages/singer/c-cpns/singer-item/style.js","pages/search/child-pages/singer/c-cpns/singer-item/index.js","pages/search/child-pages/singer/style.js","pages/search/child-pages/singer/index.js","pages/search/store/actionCreator.js"],"sourcesContent":["const { default: styled } = require('styled-components')\n\nexport const AlbumItemWrapper = styled.div`\n  width: 130px;\n  height: 154px;\n  overflow: hidden;\n  padding: 0 0 30px 0;\n  line-height: 1.4;\n  margin-right: 62px;\n  margin-bottom: 30px;\n\n  &:nth-child(5n) {\n    margin-right: 0;\n  }\n\n  .cover-pic {\n    position: relative;\n    width: 130px;\n    height: 130px;\n\n    img {\n      width: 100%;\n      height: 100%;\n    }\n\n    .image_cover {\n      background-position: 0 -680px;\n    }\n  }\n\n  .singer-info {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 8px;\n\n    .singer_icon {\n      width: 17px;\n      height: 18px;\n      background-position: 0 -740px;\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport propTypes from 'prop-types'\nimport { getSizeImage } from '@/utils/format-utils'\nimport { AlbumItemWrapper } from './style'\n\nfunction SingerItem(props) {\n  // props/state\n  const { coverPic, singer } = props\n\n  const picUrl = (coverPic && getSizeImage(coverPic, 130)) || 'https://gitee.com/xmkm/cloudPic/raw/master/img/20210505140847.png'\n  return (\n    <AlbumItemWrapper>\n      <div className=\"cover-pic\">\n        <img src={picUrl} alt=\"\" />\n        <span className=\"image_cover\"></span>\n      </div>\n      <p className=\"singer-info\">\n        <span>{singer}</span>\n        <i className=\"sprite_icon2 singer_icon\"></i>\n      </p>\n    </AlbumItemWrapper>\n  )\n}\n\nSingerItem.propTypes = {\n  coverPic: propTypes.string.isRequired,\n  singer: propTypes.string.isRequired,\n}\n\nexport default memo(SingerItem)\n","import styled from 'styled-components'\n\nexport const JMSingerWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 20px;\n`\n","import React, { memo, useEffect } from 'react'\n\nimport qs from 'query-string'\n\nimport SingerItem from './c-cpns/singer-item'\nimport { JMSingerWrapper } from './style'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { getSearchSingerListAction } from '../../store/actionCreator'\n\nexport default memo(function JMSinger(props) {\n  // props/state\n  const { type, song } = qs.parse(props.location.search)\n\n  // redux hook\n  const dispatch = useDispatch()\n  const { singerList } = useSelector(\n    (state) => ({\n      singerList: state.getIn(['search', 'singerList']),\n    }),\n    shallowEqual\n  )\n\n  useEffect(() => {\n    dispatch(getSearchSingerListAction(song, 20, type))\n  }, [dispatch, song, type])\n\n  return (\n    <JMSingerWrapper>\n      {singerList &&\n        singerList.map((item) => {\n          return (\n            <SingerItem\n              key={item.id}\n              coverPic={item.picUrl}\n              singer={item.name}\n            />\n          )\n        })}\n    </JMSingerWrapper>\n  )\n})\n","import { getSearchSongData } from '@/service/theme-header.js'\nimport * as actionTypes from './actionType'\n\n// 改变歌曲列表Action\nconst changeSongListAction = (songs) => ({\n  type: actionTypes.CHANGE_SEARCH_SONG_LIST,\n  songs\n})\n\n// 改变歌手列表\nconst changeSingerListAction = (singerList) => ({\n  type: actionTypes.CHANGE_SINGER_LIST,\n  singerList: singerList\n})\n\n// 搜索歌曲列表network\nexport const getSearchSongListAction = (songName, limit, type = 1) => {\n  return (dispatch) => {\n    getSearchSongData(songName, limit, type).then((res) => {\n      const songs = res && res.result.songs\n      dispatch(changeSongListAction(songs))\n    })\n  } \n}\n\n// 搜索歌手列表network\nexport const getSearchSingerListAction = (song, limit, type) => {\n  return (dispatch) => {\n    getSearchSongData(song, 20, type).then((res) => {\n      const singerList = res.result && res.result.artists\n      console.log(singerList)\n      dispatch(changeSingerListAction(singerList))\n    })\n  }\n}"],"names":["AlbumItemWrapper","require","default","div","SingerItem","props","coverPic","singer","picUrl","getSizeImage","className","src","alt","memo","JMSingerWrapper","styled","qs","location","search","type","song","dispatch","useDispatch","singerList","useSelector","state","getIn","shallowEqual","useEffect","getSearchSingerListAction","map","item","name","id","changeSongListAction","songs","actionTypes","getSearchSongListAction","songName","limit","getSearchSongData","then","res","result","artists","console","log","changeSingerListAction"],"sourceRoot":""}