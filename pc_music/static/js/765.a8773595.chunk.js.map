{"version":3,"file":"static/js/765.a8773595.chunk.js","mappings":"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","sources":["components/song-cover/style.js","components/song-cover/index.js","components/theme-header-rcm/style.js","components/theme-header-rcm/index.js","hooks/change-music.js","pages/discover/child-pages/recommend/style.js","pages/discover/child-pages/recommend/store/actionCreator.js","service/recommend.js","pages/discover/child-pages/recommend/c-cpns/top-banners/style.js","pages/discover/child-pages/recommend/c-cpns/top-banners/index.js","pages/discover/child-pages/recommend/c-cpns/hot-recommend/style.js","pages/discover/child-pages/recommend/c-cpns/hot-recommend/index.js","components/album-cover/style.js","components/album-cover/index.js","pages/discover/child-pages/recommend/c-cpns/new-album/style.js","pages/discover/child-pages/recommend/c-cpns/new-album/index.js","components/top-ranking/style.js","components/top-ranking/index.js","pages/discover/child-pages/recommend/c-cpns/recommend-ranking/style.js","pages/discover/child-pages/recommend/c-cpns/recommend-ranking/index.js","pages/discover/child-pages/recommend/c-cpns/artist-hot-composition/artist-header-line.js","pages/discover/child-pages/recommend/c-cpns/artist-hot-composition/hot-cover-info.js","pages/discover/child-pages/recommend/c-cpns/hot-artist/style.js","pages/discover/child-pages/recommend/c-cpns/hot-artist/index.js","pages/discover/child-pages/recommend/c-cpns/user-login/style.js","pages/discover/child-pages/recommend/c-cpns/user-login/index.js","pages/discover/child-pages/recommend/c-cpns/artist-hot-composition/singer-cover.js","pages/discover/child-pages/recommend/c-cpns/settle-singer/style.js","pages/discover/child-pages/recommend/c-cpns/settle-singer/index.js","pages/discover/child-pages/recommend/index.js","pages/discover/child-pages/toplist/store/actionCreator.js","service/toplist.js"],"sourcesContent":["import styled from 'styled-components'\n\nexport const SongCoverWrapper = styled.a`\n  width: ${props => props.width + 'px'};\n  margin: 20px 0 20px 0;\n  .cover-wrapper {\n    width: 140px;\n    height: 140px;\n    position: relative;\n\n    img {\n      width: 100%;\n    }\n\n    .cover-mask {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      background-position: 0 0;\n\n      .bottom-bar {\n        position: absolute;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 10px;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        height: 27px;\n        background-position: 0 -537px;\n        color: #ccc;\n\n        .erji {\n          margin-right: 5px;\n          display: inline-block;\n          width: 14px;\n          height: 11px;\n          background-position: 0 -24px;\n        }\n\n        .play {\n          display: inline-block;\n          width: 16px;\n          height: 17px;\n          background-position: 0 0;\n        }\n      }\n    }\n  }\n\n  .cover-title {\n    font-size: 14px;\n    color: #000;\n    margin-top: 5px;\n  }\n\n  .cover-source {\n    color: #666;\n  }\n`\n","import React, { memo } from 'react'\nimport { getCount, getSizeImage } from '@/utils/format-utils'\nimport { SongCoverWrapper } from './style'\n\n// 歌曲封面组件\nfunction SongCover(props) {\n  const { info, songList, width = 140 } = props\n  // pic\n  const picUrl = (info && (info.picUrl || info.coverImgUrl)) || (songList && songList.coverImgUrl) \n  // playCount 播放次数 \n  const playCount = (info && info.playCount) || (songList && songList.playCount) || 0\n  // name\n  const name = (info && info.name) || (songList && songList.name) \n  // nickname\n  const nickname = (info && info.copywriter) || (songList && songList.creator.nickname) \n  // id\n  const songInfoId = (info && info.id) || (songList && songList.id)\n  \n  return (\n    <SongCoverWrapper width={width} href={`#/songlist?songlistId=${songInfoId}`}>\n      <div className=\"cover-wrapper\">\n        <img src={getSizeImage(picUrl, 140)} alt=\"\" />\n        <div className=\"cover-mask sprite_cover\">\n          <div className=\"bottom-bar sprite_cover\">\n            <span>\n              <i className=\"sprite_icon erji\"></i>\n              {getCount(playCount)}\n            </span>\n            <i className=\"sprite_icon play\"></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"cover-title text-nowrap\">by-{name}</div>\n      <div className=\"cover-source text-nowrap\">\n        by {(info && info.copywriter) || nickname}\n      </div>\n    </SongCoverWrapper>\n  )\n}\n\nexport default memo(SongCover)\n","import styled from 'styled-components'\n\nexport const RcmHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 33px;\n  padding: 0 10px 0 0;\n  padding-left: ${props => props.showIcon ? '34px' : '2px'};\n  border-bottom: 2px solid #c10d0c;\n  background: ${props => {\n    const url = 'url(' + require('@/assets/img/sprite_02.png') + ') no-repeat center'\n    return props.showIcon ? url : ''\n  }};\n  background-position: -225px -156px;\n  line-height: 33px;\n`\n\nexport const RcmHeaderLeft = styled.div`\n  display: flex;\n  .hot-title {\n    display: flex;\n    margin-bottom: 5px;\n    a {\n      color: #333333;\n      &:hover {\n        text-decoration: none;\n      }\n    }\n  }\n\n  .keywords {\n    display: flex;\n    margin-left: 20px;\n    color: #ccc;\n    line-height: 35px;\n    .item {\n      .line {\n        margin: 0 10px;\n      }\n    }\n  }\n`\n\nexport const RcmHeaderRight = styled.div`\n  .icon {\n    display: inline-block;\n    width: 12px;\n    height: 12px;\n    margin-left: 4px;\n    vertical-align: middle;\n    background: transparent url('${require('@/assets/img/sprite_02.png')}') no-repeat center;\n    background-position: 0 -240px;\n  }\n`\n","import React, { memo } from 'react'\nimport propTypes from 'prop-types'\nimport { RcmHeaderLeft, RcmHeaderRight, RcmHeaderWrapper } from './style'\n\nconst ThemeHeaderRmc = function ThemeHeaderRmc(props) {\n  const { title, keywords, showIcon, right, keywordsClick } = props\n  return (\n    <RcmHeaderWrapper showIcon={showIcon}>\n      <RcmHeaderLeft>\n        <h2 className=\"hot-title\">\n          <a href=\"/discover/recommend\" className=\"no-link hot-text\">\n            {title}\n          </a>\n        </h2>\n        <ul className=\"keywords\">\n          {keywords.map(item => {\n            return (\n              <li className=\"item\" key={item}>\n                <a href=\"/\" onClick={(e) => { e.preventDefault(); keywordsClick(item) }}>{item}</a>\n                <span className=\"line\">|</span>\n              </li>\n            )\n          })}\n        </ul>\n      </RcmHeaderLeft>\n      <RcmHeaderRight>\n        <span>{right}</span>\n        {showIcon && <i className=\"icon\"></i>}\n      </RcmHeaderRight>\n    </RcmHeaderWrapper>\n  )\n}\n\nThemeHeaderRmc.propTypes = {\n  // title属性必填\n  title: propTypes.string.isRequired,\n  keywords: propTypes.array,\n  showIcon: propTypes.bool,\n  right: propTypes.any,\n  keywordsClick: propTypes.func,\n}\n\nThemeHeaderRmc.defaultProps = {\n  keywords: [],\n  showIcon: true,\n  right: '更多'\n}\n\nexport default memo(ThemeHeaderRmc)\n","import { useDispatch } from \"react-redux\"\nimport { getAddSongDetailAction } from '@/pages/player/store/actionCreator'\nimport { getFindIdIndex } from '@/utils/math-utils'\n\n/**\n * 调用该函数:传递播放列表和message组件,返回一个函数供于合成事件调用\n * @param {Array} playlist redux保存中播放列表\n * @param {Message} message Ant design消息组件:用于弹窗\n */\nexport function useAddPlaylist(playlist, message) {\n  const dispatch = useDispatch()\n  return (e, id) => {\n    // 阻止超链接跳转\n    e.preventDefault && e.preventDefault()\n    // 获取歌曲详情,添加到播放列表\n    dispatch(getAddSongDetailAction(id))\n    // 提示添加成功或失败\n    const index = getFindIdIndex(playlist, id)\n    switch (index) {\n      case -1:\n        message.success({ content: '添加成功' })\n        break\n      default:\n        message.success({ content: '不能添加重复的歌曲' })\n    }\n  }\n}","import styled from \"styled-components\";\n\nexport const RecommendWrapper = styled.div`\n`\n\nexport const Content = styled.div`\n  background-color: #fff;\n  display: flex;\n`\n\nexport const RecommendLeft = styled.div`\n  padding: 20px;\n  width: 729px;\n  border: 1px solid #d3d3d3;\n  border-width: 0 1px;\n  border-right: none;\n`\n\nexport const RecommendRight = styled.div`\n  width: 250px;\n  border: 1px solid #d3d3d3;\n  border-width: 0 1px;\n`\n","import * as actionTypes from './actionTypes'\nimport {\n  getTopBanners,\n  getHotRecommends,\n  getNewAlbums,\n  // getSettleSinger,\n} from '@/service/recommend.js'\nimport { getToplistDetail } from '@/service/toplist'\n\n// 轮播图Action\nexport const changeTopBannerAction = (res) => ({\n  type: actionTypes.CHANGE_TOP_BANNER,\n  topBanners: res.banners,\n})\n\n// 热门推荐Action\nexport const changeHotRecommendAction = (res) => ({\n  type: actionTypes.CHANGE_HOT_RECOMMEND,\n  hotRecommends: res.result,\n})\n\n// 新碟上架Action\nexport const changeNewAlbumAction = (res) => ({\n  type: actionTypes.CHANGE_NEW_ALBUMS,\n  newAlbums: res.albums,\n  // newAlbums: res.monthData, // 新接口数据\n})\n\n// 飙升榜单Action\nexport const changeUpRanking = (res) => ({\n  type: actionTypes.CHANGE_UP_RANKING,\n  upRanking: res.playlist,\n})\n// 新歌榜单Action\nexport const changeNewRanking = (res) => ({\n  type: actionTypes.CHANGE_NEW_RANKING,\n  newRanking: res.playlist,\n})\n// 原创榜单Action\nexport const changeOriginRanking = (res) => ({\n  type: actionTypes.CHANGE_ORIGIN_RANKING,\n  originRanking: res.playlist,\n})\n\n// 入驻歌手Action\nexport const changeSettleSinger = (res) => ({\n  type: actionTypes.CHANGE_SETTLE_SINGER,\n  settleSinger: res.artists,\n})\n\n// --------------------------------------------------------------\n// 发送网络请求将结果传递给派发的Action中 (react-redux可以让该函数返回一个函数而不是返回一个对象: redux-thunk使用)\n// 轮播图network request\nexport const getTopBannersAction = () => {\n  return (dispatch) => {\n    // 发送网络请求\n    getTopBanners().then((res) => {\n      dispatch(changeTopBannerAction(res))\n    })\n  }\n}\n\n// 热门推荐network request\nexport const getHostBannersAction = (limit) => {\n  return (dispatch) => {\n    getHotRecommends(limit).then((res) => {\n      dispatch(changeHotRecommendAction(res))\n    })\n  }\n}\n\n// 新碟上架network request\nexport const getNewAlbumsAction = () => {\n  return (dispatch) => {\n    getNewAlbums().then((res) => {\n      dispatch(changeNewAlbumAction(res))\n    })\n  }\n}\n\n// 榜单详情 network\nexport const getTopListAction = (idx) => {\n  return (dispatch) => {\n    getToplistDetail(idx).then((res) => {\n      switch (idx) {\n        case 19723756:\n          dispatch(changeUpRanking(res))\n          break\n        case 3779629:\n          dispatch(changeNewRanking(res))\n          break\n        case 2884035:\n          dispatch(changeOriginRanking(res))\n          break\n        default:\n      }\n    })\n  }\n}\n\n// 入驻歌手network request\nexport const getSettleSingerAction = (limit) => {\n  return (dispatch) => {\n    // getSettleSinger(limit).then(res => {\n    //   dispatch(changeSettleSinger(res))\n    //   console.log(res)\n    // })\n    const res = {\n      artists: [\n        {\n          albumSize: 50,\n          alias: ['JJ Lin'],\n          briefDesc: '',\n          followed: false,\n          id: 3684,\n          img1v1Id: 109951165911947840,\n          img1v1Id_str: '109951165911947840',\n          img1v1Url:\n            'http://p1.music.126.net/0L5drAV43FLJk6J9dRhfew==/109951165911947840.jpg',\n          musicSize: 637,\n          name: '林俊杰',\n          picId: 109951165911950320,\n          picId_str: '109951165911950321',\n          picUrl:\n            'http://p1.music.126.net/dwbXimgQn1YnJzwSlPDk-A==/109951165911950321.jpg',\n          topicPerson: 0,\n          trans: '',\n          detail: 'https://baike.baidu.com/item/%E6%9E%97%E4%BF%8A%E6%9D%B0/131821?fr=aladdin'\n        },\n        {\n          accountId: 97137413,\n          albumSize: 17,\n          alias: ['Joker Xue'],\n          briefDesc: '',\n          followed: false,\n          id: 5781,\n          img1v1Id: 109951165034950660,\n          img1v1Id_str: '109951165034950656',\n          img1v1Url:\n            'http://p1.music.126.net/1tSJODTpcbZvNTCdsn4RYA==/109951165034950656.jpg',\n          musicSize: 295,\n          name: '薛之谦',\n          picId: 109951165034938860,\n          picId_str: '109951165034938865',\n          picUrl:\n            'http://p1.music.126.net/LCWqYYKoCEZKuAC3S3lIeg==/109951165034938865.jpg',\n          topicPerson: 0,\n          trans: '',\n          detail: 'https://baike.baidu.com/item/%E8%96%9B%E4%B9%8B%E8%B0%A6/144417'\n        },\n        {\n          accountId: 31265745,\n          albumSize: 39,\n          alias: ['Vae'],\n          briefDesc: '',\n          followed: false,\n          id: 5771,\n          img1v1Id: 109951163536269820,\n          img1v1Id_str: '109951163536269820',\n          img1v1Url:\n            'http://p1.music.126.net/ATZ8-mOxophKXrLC0iXMZw==/109951163536269820.jpg',\n          musicSize: 253,\n          name: '许嵩',\n          picId: 109951163536274580,\n          picId_str: '109951163536274581',\n          picUrl:\n            'http://p1.music.126.net/_D9P0JKRDYm3jEay9EfhRw==/109951163536274581.jpg',\n          topicPerson: 0,\n          trans: '',\n          detail: 'https://baike.baidu.com/item/%E8%AE%B8%E5%B5%A9/5425'\n        },\n        {\n          albumSize: 107,\n          alias: ['Eason Chan'],\n          briefDesc: '',\n          followed: false,\n          id: 2116,\n          img1v1Id: 109951165666524000,\n          img1v1Id_str: '109951165666523995',\n          img1v1Url:\n            'http://p1.music.126.net/Cxj3lUbVql1OqWaPf0cLrQ==/109951165666523995.jpg',\n          musicSize: 1813,\n          name: '陈奕迅',\n          picId: 109951165666529170,\n          picId_str: '109951165666529174',\n          picUrl:\n            'http://p1.music.126.net/_6sjlvieZvq_tcj-NYbSVQ==/109951165666529174.jpg',\n          topicPerson: 0,\n          trans: '',\n          detail: 'https://baike.baidu.com/item/%E9%99%88%E5%A5%95%E8%BF%85/128029'\n        },\n        {\n          accountId: 481214790,\n          albumSize: 23,\n          alias: [],\n          briefDesc: '',\n          followed: false,\n          id: 31165848,\n          img1v1Id: 109951163780408940,\n          img1v1Id_str: '109951163780408942',\n          img1v1Url:\n            'http://p1.music.126.net/-vAAAt4wZ8bAJCkilZVbcQ==/109951163780408942.jpg',\n          musicSize: 98,\n          name: '刘大壮',\n          picId: 109951163780702430,\n          picId_str: '109951163780702427',\n          picUrl:\n            'http://p1.music.126.net/H70ceB4g0VAgWeLYrZEiWQ==/109951163780702427.jpg',\n          topicPerson: 0,\n          trans: '',\n          detail: 'https://baike.baidu.com/item/%E5%88%98%E5%A4%A7%E5%A3%AE/55396978'\n        },\n      ],\n      more: true,\n      code: 200,\n    }\n    dispatch(changeSettleSinger(res))\n  }\n}\n","import request from './request'\n\nexport function getTopBanners() {\n  return request({\n    url: \"/banner\"\n  })\n}\n\n// 热门推荐\nexport function getHotRecommends(limit) {\n  return request({\n    url: \"/personalized\",\n    params: {\n      limit\n    }\n  })\n}\n\n// 首页下的新碟上架\nexport function getNewAlbums() {\n  return request({\n    url: '/album/newest'\n  })\n}\n\n// 入驻歌手\nexport function getSettleSinger(limit) {\n  return request({\n    url: '/artist/list',\n    params: {\n      limit\n    }\n  })\n}","const { default: styled } = require('styled-components')\n\nexport const BannerWrapper = styled.div`\n  background: url('${props => props.bgImage}') center center/6000px;\n  width: 100%;\n  height: 270px;\n\n  .banner {\n    position: relative;\n    display: flex;\n    height: 100%;\n    justify-content: space-between;\n  }\n`\n\nexport const BannerLeft = styled.div`\n  width: 730px;\n\n  img {\n    width: 100%;\n  }\n`\n\nexport const BannerRight = styled.a.attrs({\n  // href: 'https://music.163.com/#/download',\n  href: 'https://d1.music.126.net/dmusic/cloudmusicsetup2.8.0.198822.exe',\n  target: '_blank',\n})`\n  width: 250px;\n  background: url(${require('@/assets/img/download.png')});\n`\n\nexport const BannerControl = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  .btn {\n    position: absolute;\n    width: 37px;\n    height: 63px;\n    background-image: url(${require(\"@/assets/img/banner_sprite.png\")});\n    background-color: transparent;\n    cursor: pointer;\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n    &:nth-child(1) {\n      left: -68px;\n      background-position: 0 -360px;\n    }\n    &:nth-child(2) {\n      right: -68px;\n      background-position: 0 -508px;\n    }\n  }\n`\n","// 1. 第三方开库\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react'\n\n// 2. 功能性东西\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { getTopBannersAction } from '../../store/actionCreator'\n\n// 3. 导入的组件\nimport { Carousel } from 'antd'\nimport { BannerControl, BannerLeft, BannerRight, BannerWrapper } from './style'\n\nexport default memo(function TopBanners() {\n  // 组件内state\n  const [currentIndex, setCurrentIndex] = useState(0)\n\n  // redux Hook 组件和redux关联: 获取数据和进行操作\n  const dispatch = useDispatch()\n  const { topBanners } = useSelector(\n    state => ({\n      // topBanners: state.get('recommend').get('topBanners')\n      // 获取redux-reducer转换成Immutable对象的深层state\n      topBanners: state.getIn(['recommend', 'topBanners']),\n    }),\n    shallowEqual\n  )\n\n  // 其他Hook\n  const bannerRef = useRef()\n  useEffect(() => {\n    // 在组件渲染之后发送网络请求\n    dispatch(getTopBannersAction())\n  }, [dispatch])\n\n  const bannerChange = useCallback((from, to) => {\n    setCurrentIndex(to)\n  }, [])\n\n  // 其他的逻辑代码 memoize\n  const bgImage =\n    topBanners &&\n    topBanners[currentIndex] &&\n    topBanners[currentIndex].imageUrl + '?imageView&blur=40x20'\n\n  return (\n    <BannerWrapper bgImage={bgImage}>\n      <div className=\"banner w980\">\n        <BannerLeft>\n          <Carousel\n            effect=\"fade\"\n            autoplay={true}\n            ref={bannerRef}\n            beforeChange={bannerChange}\n          >\n            {topBanners && topBanners.map(item => {\n              return (\n                <div key={item.imageUrl}>\n                  <img src={item.imageUrl} alt={item.typeTitle} />\n                </div>\n              )\n            })}\n          </Carousel>\n        </BannerLeft>\n        <BannerRight />\n        <BannerControl>\n          <button\n            className=\"btn\"\n            onClick={() => bannerRef.current.prev()}\n          ></button>\n          <button\n            className=\"btn\"\n            onClick={() => bannerRef.current.next()}\n          ></button>\n        </BannerControl>\n      </div>\n    </BannerWrapper>\n  )\n})\n","import styled from \"styled-components\";\n\nexport const HotRecommendWrapper = styled.div`\n  margin-top: 6px;\n  .recommend-list {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n`","import React, { memo, useEffect } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport { HOT_RECOMMEND_LIMIT } from '@/common/constants'\n\nimport { HotRecommendWrapper } from './style'\nimport ThemeHeaderRmc from '@components/theme-header-rcm'\nimport { getHostBannersAction } from '../../store/actionCreator'\nimport SongCover from '@components/song-cover'\n\nexport default memo(function HotRecommend(props) {\n  // state\n  const { history } = props\n\n  // redux\n  const dispatch = useDispatch()\n  const { hotRecommends } = useSelector(\n    (state) => ({\n      hotRecommends: state.getIn(['recommend', 'hotRecommends']),\n    }),\n    shallowEqual\n  )\n\n  // other hooks\n  useEffect(() => {\n    dispatch(getHostBannersAction(HOT_RECOMMEND_LIMIT))\n  }, [dispatch])\n\n  // other function\n  const handleKeyWordClick = (item) => {\n    history.push(`/discover/songs?albumName=${item}`)\n  }\n\n  return (\n    <HotRecommendWrapper>\n      <ThemeHeaderRmc\n        title=\"热门推荐\"\n        keywords={['华语', '流行', '摇滚', '民谣', '电子']}\n        keywordsClick={(item) => handleKeyWordClick(item)}\n      />\n      <div className=\"recommend-list\">\n        {hotRecommends &&\n          hotRecommends.map((item) => {\n            return (\n              <SongCover key={item.id} info={item} className=\"recommend-list\">\n                {item.name}\n              </SongCover>\n            )\n          })}\n      </div>\n    </HotRecommendWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const AlbumCoverWrapper = styled.div`\n  width: ${props => props.width + 'px'};\n  font-size: 12px;\n\n  .album-image {\n    position: relative;\n    height: ${props => props.size + 'px'};\n    margin-top: 15px;\n    \n    .cover {\n      text-indent: -9999px;\n      background-position: 0 ${props => props.bgp};\n    }\n  }\n\n  .album-name {\n    width: ${props => props.size};\n    color: #000;\n  }\n\n  .artist {\n    color: #666;\n  }\n`\n","import React, { memo } from 'react'\n\nimport { getSizeImage } from '@/utils/format-utils.js'\n\nimport { AlbumCoverWrapper } from './style'\n\nexport default memo(function AlbumCover (props) {\n  // 传递该组件: width height  做默认值\n  // 对图片使用工具函数限制大小\n  const { info, size = 130, width = 153, bgp = \"-845px\" } = props\n\n  return (\n    <AlbumCoverWrapper width={width} bgp={bgp} size={size}>\n      <div className=\"album-image\">\n        <img src={getSizeImage(info.picUrl, size)} alt={info.name} />\n        <a href=\"/discover/recommend\" className=\"no-link image_cover cover\">{info.name}</a>\n      </div>\n      <div className=\"album-name text-nowrap\">{info.name}</div>\n      <div className=\"artist text-nowrap\">{info.artist.name}</div>\n    </AlbumCoverWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const NewAlbumWrapper = styled.div`\n  margin-top: 38px;\n  margin-bottom: 10px;\n  .content {\n    position: relative;\n    display: flex;\n    /* 设置主轴排序方式 */\n    justify-content: center;\n    /* 设置侧轴排序方式 */\n    align-items: center;\n    height: 186px;\n    margin: 20px 0 37px;\n    border: 1px solid #d3d3d3;\n    background-color: #f5f5f5;\n\n    .inner {\n      width: 640px;\n      height: 150px;\n\n      .page {\n        display: flex !important;\n        justify-content: space-between;\n\n        /* .c-item {\n          width: 118px;\n          height: 151px;\n          background-color: #ccc;\n          margin-right: 10px;\n        } */\n\n      }\n    }\n\n    .arrow {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 24px;\n      height: 24px;\n      background-position-y: -76px;\n      cursor: pointer;\n    }\n\n    .arrow-left {\n      left: 5px;\n      background-position-x: -261px;\n    }\n\n    .arrow-right {\n      right: 5px;\n      background-position-x: -294px;\n    }\n  }\n`\n","import React, { memo, useEffect, useRef } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport { getNewAlbumsAction } from '../../store/actionCreator'\n\nimport ThemeHeaderRcm from '@components/theme-header-rcm'\nimport AlbumCover from '@components/album-cover'\nimport { NewAlbumWrapper } from './style'\nimport { Carousel } from 'antd'\n\nexport default memo(function NewAlbum() {\n  // redux hook\n  const dispatch = useDispatch()\n  const { newAlbums } = useSelector(\n    state => ({\n      newAlbums: state.getIn(['recommend', 'newAlbums']),\n    }),\n    shallowEqual\n  )\n\n  //  other hook\n  const albumRef = useRef()\n  // (新碟上架)\n  useEffect(() => {\n    dispatch(getNewAlbumsAction())\n  }, [dispatch])\n\n  /* 轮播图布局思路:\n      两个页面轮播: 2page\n      在page中添加一个个item\n  */\n  return (\n    <NewAlbumWrapper>\n      <ThemeHeaderRcm title=\"新碟上架\" />\n      <div className=\"content\">\n        <div className=\"inner\">\n          <Carousel dots={false} ref={albumRef}>\n            {[0, 1].map(item => {\n              return (\n                <div key={item} className=\"page\">\n                  {/* item * 5, (item+1) * 5   第一次遍历0  5  第二次遍历 5  10  */}\n                  {newAlbums && newAlbums.slice(item * 5, (item + 1) * 5).map(cItem => {\n                    return (\n                      <AlbumCover\n                        key={cItem.id}\n                        info={cItem}\n                        size={100}\n                        width={118}\n                        bgp=\"-570px\"\n                      >\n                        {cItem.name}\n                      </AlbumCover>\n                    )\n                  })}\n                </div>\n              )\n            })}\n          </Carousel>\n        </div>\n        <div\n          className=\"sprite_02 arrow arrow-left\"\n          onClick={e => albumRef.current.prev()}\n        ></div>\n        <div\n          className=\"sprite_02 arrow arrow-right\"\n          onClick={e => albumRef.current.next()}\n        ></div>\n      </div>\n    </NewAlbumWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const TopRankingWrapper = styled.div`\n  width: 230px;\n\n  .ranking-header {\n    display: flex;\n    height: 120px;\n    padding: 20px 0 0 19px;\n\n    .image {\n      position: relative;\n      height: 80px;\n    }\n\n    .tit {\n      width: 116px;\n      margin: 6px 0 0 10px;\n\n      div > h3 {\n        font-weight: bold !important;\n      }\n\n      .btn {\n        display: flex;\n        margin-top: 8px;\n        .play,\n        .favourite {\n          width: 22px;\n          height: 22px;\n        }\n\n        .play {\n          background-position: -267px -205px;\n          margin-right: 8px;\n\n          &:hover {\n            background-position: -267px -235px;\n          }\n        }\n\n        .favourite {\n          background-position: -300px -205px;\n\n          &:hover {\n            background-position: -300px -235px;\n          }\n        }\n      }\n    }\n  }\n\n  .ranking-list {\n    padding-left: 10px;\n    .list-item {\n      display: flex;\n      height: 32px;\n      line-height: 32px;\n\n      .number {\n        width: 35px;\n        text-align: center;\n      }\n\n      .song-name {\n        width: 185px;\n        font-size: 12px;\n      }\n\n      &:hover .song-name {\n        width: 96px;\n      }\n\n      &:hover .oper {\n        visibility: visible;\n        width: 93px;\n      }\n\n      .oper {\n        display: flex;\n        align-items: center;\n        visibility: hidden;\n        width: 0;\n        text-indent: -9999px;\n\n        .btn {\n          width: 17px;\n          height: 17px;\n          margin-left: 8px;\n          cursor: pointer;\n        }\n\n        .play {\n          background-position: -267px -268px;\n        }\n\n        .addto {\n          position: relative;\n          top: 2px;\n          background-position: 0 -700px;\n        }\n\n        .favourite {\n          background-position: -297px -268px;\n        }\n      }\n    }\n  }\n\n  .ranking-footer {\n    height: 33px;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    .show-all {\n      margin-right: 15px;\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport { getSizeImage } from '@/utils/format-utils.js'\n\nimport { message } from 'antd'\nimport { TopRankingWrapper } from './style'\nimport {\n  getSongDetailAction,\n  changeFirstLoad,\n} from '@/pages/player/store/actionCreator'\nimport { useAddPlaylist } from '../../hooks/change-music'\nimport { changeCurrentIndexAction } from '../../pages/discover/child-pages/toplist/store/actionCreator'\n\nexport default memo(function TopRanking(props) {\n  // ranking-list排行列表效果需求:\n  // 鼠标放到一行item身上hover效果 播放按钮和添加播放列表和收藏的icons\n  // props/state\n  const { info, index } = props\n  const { tracks = [] } = info\n  // let localPlayList = [] // 本地存储(暂时不做)\n\n  // redux hook\n  const dispatch = useDispatch()\n  const { playList } = useSelector(\n    state => ({\n      playList: state.getIn(['player', 'playList']),\n    }),\n    shallowEqual\n  )\n\n  // other handle\n  // 播放音乐\n  const playMusic = (e, item) => {\n    // 阻止超链接跳转\n    e.preventDefault()\n    // 派发action 歌曲详情\n    dispatch(getSongDetailAction(item.id))\n    // 不是首次加载,播放音乐\n    dispatch(changeFirstLoad(false))\n    // region 设置本地存储(暂不做)\n    // localPlayList.push(item.id)\n    // localStorage.setItem('localPlayList', JSON.stringify(localPlayList))\n    // endregion\n  }\n\n  // 添加到播放列表(使用自定义hook)\n  const addPlaylist = useAddPlaylist(playList, message)\n\n  // function\n  const toLink = (e) => {\n    e.preventDefault()\n    dispatch(changeCurrentIndexAction(index))\n    props.to.push(`/discover/ranking?id=${info.id}`)\n  }\n\n  return (\n    <TopRankingWrapper>\n      <div className=\"ranking-header\">\n        <div className=\"image\">\n          <img src={getSizeImage(info.coverImgUrl, 80)} alt=\"\" />\n          <div className=\"image_cover \">\n            {info.name}\n          </div>\n        </div>\n        <div className=\"tit\">\n          <div>\n            <h3>{info.name}</h3>\n          </div>\n          <div className=\"btn\">\n            <a href=\"/discover/recommend\" className=\"no-link sprite_02 text-indent play\">\n              播放\n            </a>\n            <a href=\"/discover/recommend\" className=\"no-link sprite_02 text-indent favourite\">\n              收藏\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"ranking-list\">\n        {tracks &&\n          tracks.length > 0 &&\n          tracks.slice(0, 10).map((item, index) => {\n            return (\n              <div key={item.id} className=\"list-item\">\n                <div className=\"number\">{index + 1}</div>\n                <a href=\"/play\" className=\"song-name text-nowrap\" onClick={e => playMusic(e, item)}>\n                  {item.name}\n                </a>\n                <div className=\"oper\">\n                  <a\n                    href=\"/discover/recommend\"\n                    className=\"sprite_02 btn play\"\n                    onClick={e => playMusic(e, item)}\n                  >\n                    {item.name}\n                  </a>\n                  <a\n                    href=\"/discover/recommend\"\n                    className=\"sprite_icon2 btn addto\"\n                    onClick={e => addPlaylist(e, item.id)}\n                  >\n                    {item.name}\n                  </a>\n                  <a href=\"/play\" className=\"no-link sprite_02 btn favourite\">\n                    {item.name}\n                  </a>\n                </div>\n              </div>\n            )\n          })}\n      </div>\n      <div className=\"ranking-footer\">\n        <a href=\"/all\" className=\"show-all\" onClick={(e) => toLink(e)}>\n          查看全部&gt;\n        </a>\n      </div>\n    </TopRankingWrapper>\n  )\n})\n","import styled from \"styled-components\";\n\nexport const RankingWrapper = styled.div`\n  margin-bottom: 15px;\n  .ranking-info {\n    display: flex;\n    margin-top: 17px;\n    background: url(${require('@/assets/img/recommend-top-bg.png')});\n  }\n`","import React, { memo, useEffect } from 'react'\n\nimport ThemeHeaderRcm from '@components/theme-header-rcm'\nimport TopList from '@components/top-ranking'\nimport { RankingWrapper } from './style'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { getTopListAction } from '../../store/actionCreator'\n\nexport default memo(function RecommendRanking(props) {\n  // state/props\n  // redux hook\n  const { upRanking = [], originRanking = [], newRanking = [] } = useSelector(state => ({\n    upRanking: state.getIn(['recommend', 'upRanking']),\n    originRanking: state.getIn(['recommend', 'originRanking']),\n    newRanking: state.getIn(['recommend', 'newRanking'])\n  }), shallowEqual)\n  const dispatch = useDispatch()\n\n  // other hook\n  useEffect(() => { \n    dispatch(getTopListAction(19723756))\n    dispatch(getTopListAction(3779629))\n    dispatch(getTopListAction(2884035))\n  }, [dispatch])\n\n  return (\n    <RankingWrapper>\n      <ThemeHeaderRcm title=\"榜单\" />\n      <div className=\"ranking-info\">\n        <TopList info={originRanking} index={2} {...props} />\n        <TopList info={upRanking} index={0} {...props}/>\n        <TopList info={newRanking} index={1} {...props}/>\n      </div>\n    </RankingWrapper>\n  )\n})\n","import React, { memo } from 'react'\nimport styled from 'styled-components'\n\nconst HeaderLineWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 24px;\n  margin: 0 20px;\n  border-bottom: 1px solid #ccc;\n\n  .hot-artist {\n    font-weight: bold;\n    color: #333;\n  }\n  .show-all {\n    color: #666;\n  }\n`\n\nexport default memo(function ArtistHeaderLine(props) {\n  const { titleSlot, rightSlot } = props\n  return (\n    <HeaderLineWrapper>\n      <div className=\"hot-artist\">{titleSlot}</div>\n      <a href=\"/discover/recommend\" className=\"no-link show-all\">{rightSlot}</a>\n    </HeaderLineWrapper>\n  )\n})\n","import React, { memo } from 'react'\nimport { getSizeImage } from '@/utils/format-utils.js'\nimport styled from 'styled-components'\n\nconst HotCoverInfoCover = styled.div`\n  display: flex;\n  height: 50px;\n\n  .artist-image {\n    margin-right: 7px;\n  }\n\n  .artist-info {\n    .artist-name {\n      display: block;\n      position: relative;\n      color: #000;\n\n      &::after {\n        position: absolute;\n        top: 2px;\n        content: '';\n        width: 11px;\n        height: 13px;\n        background: url(${require('@/assets/img/sprite_icon2.png')});\n        background-position: 0 1px;\n      }\n    }\n\n    .artist-detail {\n      display: block;\n      width: 160px;\n      color: #666;\n    }\n  }\n`\n\nexport default memo(function HotCoverInfo(props) {\n  const { info } = props\n  return (\n    <HotCoverInfoCover>\n      <div className=\"artist-image\">\n        <img src={getSizeImage(info.picUrl, 40)} alt=\"\" />\n      </div>\n      <div className=\"artist-info\">\n        <a href={info.url} className=\"artist-name\">{info.name}</a>\n        <a href={info.url} className=\"artist-detail text-nowrap\">{info.position}</a>\n      </div>\n    </HotCoverInfoCover>\n  )\n})\n","import styled from \"styled-components\";\n\nexport const HotArtistWrapper = styled.div`\n  margin-top: 30px;\n\n  .artist-container {\n    margin: 20px 0 0 20px;\n  }\n`","import React, { memo } from 'react'\n\nimport { hotRadios } from '@/common/local-data.js'\n\nimport ArtistHeaderLine from '../artist-hot-composition/artist-header-line'\nimport HotCoverInfo from '../artist-hot-composition/hot-cover-info'\nimport { HotArtistWrapper } from './style'\n\nexport default memo(function HotArtist() {\n  return (\n    <HotArtistWrapper>\n      <ArtistHeaderLine titleSlot=\"热门主播\" />\n      <div className=\"artist-container\">\n        {hotRadios.map(item => {\n          return <HotCoverInfo key={item.picUrl} info={item} />\n        })}\n      </div>\n    </HotArtistWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const UserLoginWrapper = styled.div`\n  height: 126px;\n\n  .profile-info {\n    background-position: 0 0;\n    height: 100%;\n    padding: 0 17px;\n\n    .login-detail {\n      margin: 0 auto;\n      padding: 16px 0;\n      line-height: 22px;\n    }\n\n    .user-login {\n      display: block;\n      margin: 0 auto;\n      width: 100px;\n      height: 31px;\n      line-height: 31px;\n      text-align: center;\n      color: #fff;\n      text-shadow: 0 1px 0 #8a060b;\n      background-position: 0 -195px;\n      cursor: pointer;\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport { UserLoginWrapper } from './style'\nimport { changeIsVisible } from '@/components/theme-login/store'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport default memo(function UserLogin() {\n  // redux\n  const dispatch = useDispatch()\n  const { isLogin } = useSelector((state) => ({\n    isLogin: state.getIn(['loginState', 'isLogin']),\n  }))\n  // handle function\n  const handleLogin = () => {\n    if (!isLogin) dispatch(changeIsVisible(true))\n  }\n  return (\n    <UserLoginWrapper style={{ display: isLogin ? 'none' : 'block' }}>\n      <div className=\"profile-info sprite_02\">\n        <p className=\"login-detail\">\n          登录网易云音乐，可以享受无限收藏的乐趣，并且无限同步到手机\n        </p>\n        <button className=\"user-login sprite_02\" onClick={() => handleLogin()}>\n          用户登录\n        </button>\n      </div>\n    </UserLoginWrapper>\n  )\n})\n","import React, { memo } from 'react'\nimport { getSizeImage } from '@/utils/format-utils.js'\nimport styled from 'styled-components'\n\nconst SingerCoverWrapper = styled.a`\n  display: flex;\n  margin-top: 14px;\n  width: 210px;\n  height: 62px;\n  background: #fafafa;\n\n  &:hover {\n    text-decoration: none;\n  }\n\n  .singer-title {\n    width: 100%;\n    height: 100%;\n    padding: 4px 9px;\n    border: 1px solid #e9e9e9;\n    border-left: none;\n\n    .singer-name {\n      font-weight: bold;\n      font-size: 14px;\n      color: #333;\n      margin-bottom: 8px;\n    }\n  }\n`\n\nexport default memo(function SingerCover(props) {\n  const { info } = props\n  return (\n    <SingerCoverWrapper href={info.detail} target=\"_blank\">\n      <div className=\"image\">\n        <img src={getSizeImage(info.picUrl, 62)} alt=\"\" />\n      </div>\n      <div className=\"singer-title\">\n        <div className=\"text-nowrap singer-name\">{info.name}</div>\n        <div className=\"text-nowrap singer-detail\">流行歌手</div>\n      </div>\n    </SingerCoverWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const SettleSingerWrapper = styled.div`\n  margin-top: 10px;\n\n  .singer-container {\n    margin: 6px 0 14px 20px;\n  }\n`\n","import React, { memo, useEffect } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport { SETTLE_SINGER_COUNT } from '@/common/constants.js'\n\nimport { getSettleSingerAction } from '../../store/actionCreator'\nimport { ArtistHeaderLine, SingerCover } from '../artist-hot-composition'\nimport { SettleSingerWrapper } from './style'\n\nexport default memo(function SettleSinger() {\n  // redux hook\n  const { settleSinger } = useSelector(\n    state => ({\n      settleSinger: state.getIn(['recommend', 'settleSinger']),\n    }),\n    shallowEqual\n  )\n  const dispatch = useDispatch()\n\n  // other hook\n  useEffect(() => {\n    dispatch(getSettleSingerAction(SETTLE_SINGER_COUNT))\n  }, [dispatch])\n\n  return (\n    <SettleSingerWrapper>\n      <ArtistHeaderLine titleSlot=\"入驻歌手\" rightSlot=\"查看全部 >\" />\n      <div className=\"singer-container\">\n        {settleSinger && settleSinger.map(item => {\n          return <SingerCover key={item.id} info={item} />\n        })}\n      </div>\n    </SettleSingerWrapper>\n  )\n})\n","import React, { memo } from 'react'\n\nimport {\n  RecommendWrapper,\n  Content,\n  RecommendLeft,\n  RecommendRight,\n} from './style'\nimport TopBanners from './c-cpns/top-banners'\nimport HotRecommend from './c-cpns/hot-recommend'\nimport NewAlbum from './c-cpns/new-album'\nimport RecommendRanking from './c-cpns/recommend-ranking'\nimport HotArtist from './c-cpns/hot-artist'\nimport UserLogin from './c-cpns/user-login'\nimport SettleSinger from './c-cpns/settle-singer'\n\nfunction JMRecommend(props) {\n  return (\n    <RecommendWrapper>\n      {/* 轮播图 */}\n      <TopBanners />\n      {/* 主体内容 */}\n        <Content className=\"w980\">\n          {/* 主体推荐页左侧 */}\n          <RecommendLeft>\n            {/* 热门推荐 */}\n            <HotRecommend history={props.history} />\n            {/* 新碟上架 */}\n            <NewAlbum />\n            {/* 榜单 */}\n            <RecommendRanking to={props.history} />\n          </RecommendLeft>\n          {/* 主体推荐页右侧 */}\n          <RecommendRight>\n            {/* 登录 */}\n            <UserLogin />\n            {/* 入驻歌手 */}\n            <SettleSinger />\n            {/* 热门主播 */}\n            <HotArtist />\n          </RecommendRight>\n        </Content>\n    </RecommendWrapper>\n  )\n}\nexport default memo(JMRecommend)\n\n// region 不再使用connect函数\n// redux-immutable 解决了redux中的state不可变性的问题,因为要保证state不可变性,在每次更新state之前都会将之前state进行一次拷贝,如果数据量大的话会非常小号性能\n// 使用useSelector的缺点: 因为在useSelector的缺点在组件决定当前是否渲染之前会进行一次引用对比,每次函数调用之后都会进行一次重新渲染\n// 解决useSelector的缺点: 使用shallowEqual进行优化,在组件决定是否被渲染之前,会进行一次浅层对比如果该组件依赖的state并没有被更改,就不会进行渲染\n// endregion\n// import React, { memo, useEffect } from 'react'\n// import { connect } from 'react-redux'\n// import { getTopBannersAction } from './store/actionCreator'\n\n// function JMRecommend(props) {\n//   const { getBanners, topBanners } = props\n//   // 使用react-redux的connect函数,将依赖的state和dispatch传递给connect\n//   useEffect(() => {\n//     getBanners()\n//   }, [getBanners])\n\n//   return (\n//     <div>\n//       <h2>JMRecommend</h2>\n//       <h3>{topBanners.length}</h3>\n//     </div>\n//   )\n// }\n\n// // 定义依赖的state\n// const mapStateToProps = state => ({\n//   topBanners: state.recommend.topBanners,\n// })\n\n// // 定义依赖的dispatch\n// const mapDispatchToProps = dispatch => ({\n//   getBanners() {\n//     dispatch(getTopBannersAction())\n//   },\n// })\n\n// export default connect(mapStateToProps, mapDispatchToProps)(memo(JMRecommend))\n","import * as actionTypes from './actionTypes'\nimport { getToplistInfo, getToplistDetail } from '@/service/toplist'\n\n// 改变榜单数据Action\nconst changeToplistAction = (toplistInfo) => ({\n  type: actionTypes.CHANGE_TOPLIST_COUNT,\n  toplistInfo,\n})\n\n// 改变当前索引Action\nexport const changeCurrentIndexAction = (index) => ({\n  type: actionTypes.CHANGE_CURRENT_INDEX,\n  index,\n})\n\n// 改变当前歌单的ID_Action\nexport const changeCurrentToplistIdAction = (id) => ({\n  type: actionTypes.CHANGE_CURRENT_TOPLIST_ID,\n  id,\n})\n\n// 改变榜单标题详情Action\nconst changeToplistTitleInfo = (titleInfo) => ({\n  type: actionTypes.CHANGE_CURRENT_TOPLIST_TITLE_INFO,\n  titleInfo,\n})\n\n// 改变不同榜单列表Action\nconst changeCurrentToplist = (toplist) => ({\n  type: actionTypes.CHANGE_CURRENT_TOPLIST,\n  toplist,\n})\n\n// 榜单network\nexport const getToplistInfoAction = () => {\n  return (dispatch) => {\n    getToplistInfo().then((res) => {\n      dispatch(changeToplistAction(res.list))\n    })\n  }\n}\n\n// 榜单标题信息 network\nexport const getToplistTitleInfoAction = (id) => {\n  return (dispatch) => {\n    getToplistDetail(id).then((res) => {\n      // 取出榜单标题详情信息\n      const {\n        coverImgUrl,\n        name,\n        trackNumberUpdateTime,\n        playCount,\n        subscribedCount,\n        commentCount,\n        shareCount,\n      } = res && res.playlist\n      const toplistTitleInfo = {\n        coverImgUrl,\n        name,\n        trackNumberUpdateTime,\n        playCount,\n        subscribedCount,\n        commentCount,\n        shareCount,\n      }\n      dispatch(changeToplistTitleInfo(toplistTitleInfo))\n    })\n  }\n}\n\n// 榜单列表详情信息 network\nexport const getToplistItemAction = (id) => {\n  return (dispatch) => {\n    getToplistDetail(id).then((res) => {\n        // 榜单列表详情信息\n      const currentToplist = res && res.playlist && res.playlist.tracks\n      dispatch(changeCurrentToplist(currentToplist))\n    })\n  }\n}\n","import request from './request'\n\nexport function getToplistInfo() {\n  return request({\n    url: '/toplist'\n  })\n}\n\nexport function getToplistDetail(id) {\n  return request({\n    url: '/playlist/detail',\n    params: {\n      id\n    }\n  })\n}"],"names":["SongCoverWrapper","styled","props","width","SongCover","info","songList","picUrl","coverImgUrl","playCount","name","nickname","copywriter","creator","songInfoId","id","href","className","src","getSizeImage","alt","getCount","memo","RcmHeaderWrapper","showIcon","url","require","RcmHeaderLeft","RcmHeaderRight","ThemeHeaderRmc","title","keywords","right","keywordsClick","map","item","onClick","e","preventDefault","defaultProps","useAddPlaylist","playlist","message","dispatch","useDispatch","getAddSongDetailAction","getFindIdIndex","success","content","RecommendWrapper","Content","RecommendLeft","RecommendRight","getTopBannersAction","request","then","res","type","actionTypes","topBanners","banners","changeTopBannerAction","getHostBannersAction","limit","params","getHotRecommends","hotRecommends","result","changeHotRecommendAction","getNewAlbumsAction","newAlbums","albums","changeNewAlbumAction","getTopListAction","idx","getToplistDetail","upRanking","changeUpRanking","newRanking","changeNewRanking","originRanking","changeOriginRanking","getSettleSingerAction","settleSinger","artists","changeSettleSinger","albumSize","alias","briefDesc","followed","img1v1Id","img1v1Id_str","img1v1Url","musicSize","picId","picId_str","topicPerson","trans","detail","accountId","more","code","default","BannerWrapper","div","bgImage","BannerLeft","BannerRight","a","attrs","target","BannerControl","useState","currentIndex","setCurrentIndex","useSelector","state","getIn","shallowEqual","bannerRef","useRef","useEffect","bannerChange","useCallback","from","to","imageUrl","effect","autoplay","ref","beforeChange","typeTitle","current","prev","next","HotRecommendWrapper","history","HOT_RECOMMEND_LIMIT","push","handleKeyWordClick","AlbumCoverWrapper","size","bgp","artist","NewAlbumWrapper","albumRef","dots","slice","cItem","TopRankingWrapper","index","tracks","playList","playMusic","getSongDetailAction","changeFirstLoad","addPlaylist","length","changeCurrentIndexAction","toLink","RankingWrapper","HeaderLineWrapper","titleSlot","rightSlot","HotCoverInfoCover","position","HotArtistWrapper","hotRadios","UserLoginWrapper","isLogin","style","display","changeIsVisible","SingerCoverWrapper","SettleSingerWrapper","SETTLE_SINGER_COUNT","JMRecommend","changeCurrentToplistIdAction","getToplistInfoAction","getToplistInfo","toplistInfo","list","getToplistTitleInfoAction","titleInfo","trackNumberUpdateTime","subscribedCount","commentCount","shareCount","getToplistItemAction","toplist","currentToplist"],"sourceRoot":""}