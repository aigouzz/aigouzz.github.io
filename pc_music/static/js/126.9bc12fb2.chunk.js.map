{"version":3,"file":"static/js/126.9bc12fb2.chunk.js","mappings":"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","sources":["components/pagination/style.js","components/pagination/index.js","hooks/change-music.js","hooks/change-state.js","pages/player/style.js","pages/player/child-pages/song-info/style.js","pages/player/child-pages/song-info/index.js","pages/player/child-pages/song-item/style.js","pages/player/child-pages/song-item/index.js","components/theme-header/style.js","components/theme-header/index.js","pages/player/child-pages/song-comment/style.js","components/theme-comment/index.js","pages/player/child-pages/song-comment/index.js","pages/player/index.js","service/songs.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PaginationWrapper = styled.div`\n  .pagination {\n    margin: 30px 0;\n    text-align: center;\n\n    .control {\n      width: 69px;\n      height: 24px;\n      line-height: 22px;\n      text-align: center;\n      border: 1px solid #ccc;\n      border-radius: 2px;\n      margin: 0 5px;\n      color: #333;\n\n      &:disabled {\n        color: #999;\n      }\n    }\n\n    .ant-pagination-item {\n      border: 1px solid #ccc !important;\n      margin: 0 5px;\n      border-radius: 3px;\n\n      a {\n        font-size: 12px;\n      }\n\n      &.ant-pagination-item-active {\n        background-color: #c20c0c;\n        border-color: #A2161B;\n        a {\n          color: #fff;\n        }\n      }\n    }\n  }\n`","import React, { memo } from 'react';\n\nimport { Pagination } from 'antd';\nimport { PaginationWrapper } from './style';\n\nexport default memo(function HYPagination (props) {\n  const { currentPage, total, onPageChange } = props;\n\n  // render function\n  function itemRender (current, type, originalElement) {\n    if (type === 'prev') {\n      return <button className=\"control prev\"> &lt; 上一页</button>;\n    }\n    if (type === 'next') {\n      return <button className=\"control next\">下一页 &gt;</button>;\n    }\n    return originalElement;\n  }\n\n  return (\n    <PaginationWrapper>\n      <Pagination className=\"pagination\"\n        size=\"small\"\n        current={currentPage}\n        defaultCurrent={1}\n        total={total}\n        pageSize={35}\n        showSizeChanger={false}\n        itemRender={itemRender}\n        onChange={onPageChange} />\n    </PaginationWrapper>\n  )\n})\n","import { useDispatch } from \"react-redux\"\nimport { getAddSongDetailAction } from '@/pages/player/store/actionCreator'\nimport { getFindIdIndex } from '@/utils/math-utils'\n\n/**\n * 调用该函数:传递播放列表和message组件,返回一个函数供于合成事件调用\n * @param {Array} playlist redux保存中播放列表\n * @param {Message} message Ant design消息组件:用于弹窗\n */\nexport function useAddPlaylist(playlist, message) {\n  const dispatch = useDispatch()\n  return (e, id) => {\n    // 阻止超链接跳转\n    e.preventDefault && e.preventDefault()\n    // 获取歌曲详情,添加到播放列表\n    dispatch(getAddSongDetailAction(id))\n    // 提示添加成功或失败\n    const index = getFindIdIndex(playlist, id)\n    switch (index) {\n      case -1:\n        message.success({ content: '添加成功' })\n        break\n      default:\n        message.success({ content: '不能添加重复的歌曲' })\n    }\n  }\n}","import { changeFocusStateAction } from '@/components/app-header/store/actionCreator'\nimport { useDispatch } from 'react-redux'\n\n/**\n * 调用该函数,返回一个函数,改变搜索下拉框的状态(默认为false)\n * 改变搜索下拉框的状态\n */\nexport function useChangeDropBoxState(state = false) {\n  const dispatch = useDispatch()\n  return () => {\n    dispatch(changeFocusStateAction(state))\n  }\n}\n\n/**\n * 调用该hook注册全局键盘事件: ctrl+k唤醒搜索框  esc关闭下拉框\n */\nexport async function useGlobalKeyboardEvent() {\n  const showDropBoxState = useChangeDropBoxState(true)\n  const closeDropBoxState = useChangeDropBoxState(false)\n  document.addEventListener('keydown', (e) => {\n    if (e.ctrlKey && e.key === 'k') {\n      // 阻止默认事件\n      e.preventDefault()\n      showDropBoxState()\n    }\n    if (e.key === 'Escape') {\n      closeDropBoxState()\n    }\n  })\n}\n\n/**\n * 唤醒登录框\n */\n// export async function useAwakenModal() {\n//   const dispatch = useDispatch()\n//   dispatch(changeIsVisible(true))\n// }\n","import styled from \"styled-components\";\n\nexport const SongDetailWrapper = styled.div`\n  .content  {\n    display: flex;\n    width: 982px;\n    background: url(${require('@/assets/img/wrap-bg.png')}) repeat-y center 0;\n    /* height: 1000px; */\n  }\n`\n\nexport const SongLeft = styled.div`\n  width: 720px;\n  padding: 47px 30px 40px 39px;\n`\n\nexport const SongRight = styled.div`\n  width: 270px;\n  padding: 20px 0px 30px;\n`","import styled from 'styled-components';\n\nexport const SongInfoWrapper = styled.div`\n  display: flex;\n\n  .album {\n    position: relative;\n    width: 206px;\n\n    img {\n      margin: 34px;\n    }\n\n    .image_cover {\n      top: -4px;\n      left: -4px;\n      background-position: -140px -580px;\n      height: 215px;\n    }\n  }\n\n  .song-detail-wrapper {\n    width: 414px;\n    margin-left: 20px;\n\n    .song-title,\n    .singer,\n    .controls,\n    .settle-album {\n      display: flex;\n      align-items: center;\n    }\n\n    .singer > span,\n    .settle-album > span {\n      color: #999;\n    }\n\n    .singer > a,\n    .settle-album > a {\n      color: #0c73c2;\n      cursor: pointer;\n    }\n\n    .song-title {\n      height: 32px;\n      line-height: 32px;\n\n      .single-song {\n        width: 54px;\n        height: 24px;\n        background-position: 0 -463px;\n      }\n\n      .song-name {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        font-size: 24px;\n        margin: 0 15px 0 11px;\n      }\n\n      .mv {\n        width: 21px;\n        height: 18px;\n        background-position: 0 -18px;\n      }\n    }\n\n    .singer,\n    .settle-album {\n      margin: 10px 0;\n    }\n\n    .controls {\n      margin-bottom: 25px;\n      margin-right: -10px;\n      .play {\n        position: relative;\n        color: #fff;\n        width: 66px;\n        height: 31px;\n        padding: 0 5px 0 0;\n        margin-right: 35px;\n        line-height: 31px;\n        background-position: right -428px;\n        cursor: pointer;\n\n        .play-icon {\n          width: 20px;\n          height: 18px;\n          margin: 6px 2px 2px 0;\n          background-position: 0 -1622px;\n          overflow: hidden;\n        }\n\n        &:after {\n          content: '';\n          position: absolute;\n          right: -29px;\n          top: 0;\n          bottom: 0;\n          width: 31px;\n          background: url(${require('@/assets/img/sprite_button.png')}) 0 9999px;\n          background-position: 0 -1588px;\n        }\n      }\n\n      .inner {\n        display: flex;\n        width: 100%;\n        height: 31px;\n        padding: 0 7px 0 8px;\n        background-position: 0 -387px;\n        line-height: 31px;\n      }\n\n      .favorite,\n      .share,\n      .download,\n      .comment {\n        background-position: right -1020px;\n        margin-right: 6px;\n        padding: 0 5px 0 0;\n      }\n\n      .favorite > .inner,\n      .share > .inner,\n      .download > .inner,\n      .comment > .inner {\n        padding-right: 2px;\n        padding-left: 28px;\n      }\n\n      .favorite {\n        background-position: right -1020px;\n        .inner {\n          background-position: 0 -977px;\n        }\n      }\n\n      .share {\n        .inner {\n          background-position: 0 -1225px;\n        }\n      }\n\n      .download {\n        .inner {\n          background-position: 0 -2761px;\n        }\n      }\n\n      .comment {\n        .inner {\n          background-position: 0 -1465px;\n        }\n      }\n    }\n\n    .lyric-item {\n      color: #333;\n      text-align: center;\n      margin: 9px 0;\n\n      &:last-child,&:first-child {\n        margin-bottom: 0;\n        margin-top: 0;\n      }\n    }\n  }\n`;\n","import React, { memo } from 'react'\nimport { shallowEqual, useSelector } from 'react-redux'\nimport { getSizeImage, getPlayUrl } from '@/utils/format-utils.js'\nimport { Collapse } from 'antd'\nimport { SongInfoWrapper } from './style'\n\nexport default memo(function SongInfo(props) {\n  // redux hook\n  const { currentSong, lyricList, totalComment } = useSelector(\n    (state) => ({\n      currentSong: state.getIn(['player', 'currentSong']),\n      lyricList: state.getIn(['player', 'lyricList']),\n      totalComment: state.getIn(['player', 'currentCommentTotal']),\n    }),\n    shallowEqual\n  )\n  // other handle\n  const { Panel } = Collapse\n  const pirUrl = currentSong.al && currentSong.al.picUrl\n  const songName = currentSong.name ? currentSong.name : ''\n  const singer = currentSong.ar && currentSong.ar[0].name\n  const album = currentSong.al && currentSong.al.name\n\n  // funciton\n  const playMusic = () => {\n    // console.log(document.querySelector('#audio'))\n    document.querySelector('#audio').play()\n  }\n\n  return (\n    <SongInfoWrapper>\n      <div className=\"album\">\n        <img src={getSizeImage(pirUrl, 130)} alt=\"\" />\n        <div className=\"image_cover cover\"></div>\n      </div>\n      <div className=\"song-detail-wrapper\">\n        <div className=\"song-title\">\n          <i className=\"sprite_icon2 single-song\"></i>\n          <h2 className=\"song-name\">{songName}</h2>\n          <em className=\"sprite_icon2 mv\"></em>\n        </div>\n        <div className=\"singer\">\n          <span>歌手：</span>\n          <a href=\"/discover/recommend\">{singer}</a>\n        </div>\n        <div className=\"settle-album\">\n          <span>所属专辑：</span>\n          <a href=\"/discover/recommend\" className=\"no-link\">\n            {album}\n          </a>\n        </div>\n        <div className=\"controls\">\n          <div\n            className=\"sprite_button play pointer\"\n            onClick={() => playMusic()}\n          >\n            <i className=\"sprite_button inner\">\n              <em className=\"sprite_button play-icon\"></em>\n              播放\n            </i>\n          </div>\n          {/* <div className=\"sprite_button favorite\">\n            <i className=\"sprite_button inner\">\n              <em className=\"sprite_button favorite-icon\"></em>\n              收藏\n            </i>\n          </div> */}\n          {/* <div className=\"sprite_button share\">\n            <i className=\"sprite_button inner\">\n              <em className=\"sprite_button favorite-icon\"></em>\n              分享\n            </i>\n          </div> */}\n          <div\n            className=\"sprite_button download pointer\"\n            onClick={() => window.open(getPlayUrl(currentSong.id))}\n          >\n            <i className=\"sprite_button inner\">\n              <em className=\"sprite_button favorite-icon\"></em>\n              下载\n            </i>\n          </div>\n          <div className=\"sprite_button comment\">\n            <i className=\"sprite_button inner\">\n              <em className=\"sprite_button favorite-icon\"></em>({totalComment})\n            </i>\n          </div>\n        </div>\n        <Collapse>\n          <Panel header={`歌词展示`}>\n            {lyricList &&\n              lyricList.map((item) => {\n                return (\n                  <div key={item.totalTime} className=\"lyric-item\">\n                    {item.content}\n                  </div>\n                )\n              })}\n          </Panel>\n        </Collapse>\n      </div>\n    </SongInfoWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const SongItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30px;\n\n  .song-item {\n    padding: 6px 10px;\n    line-height: 18px;\n    text-align: left;\n  }\n\n  .rank-count {\n    padding-left: 25px;\n    width: 70px;\n    color: #999;\n  }\n\n  .song-info {\n    display: flex;\n    justify-content: space-between;\n    width: 230px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    .font-active {\n      font-size: 15px;\n      cursor: pointer;\n      margin-right: 8px;\n    }\n    .font-active:active {\n      color: #d31111;\n    }\n\n    .btn {\n      width: 17px;\n      height: 17px;\n      margin-left: 8px;\n      cursor: pointer;\n      &.addto {\n        position: relative;\n        top: 2px;\n        background-position: 0 -700px;\n      }\n    }\n\n    .left-info {\n      display: flex;\n      overflow: hidden;\n    }\n    .left-info>a {\n      display: inline-block;\n      width: 130px;\n    }\n  }\n\n  .duration {\n    width: 91px;\n  }\n\n  .singer-song {\n\n  }\n`\n","import React, { memo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport propTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\nimport { useAddPlaylist } from '@/hooks/change-music'\n\nimport { getSizeImage } from '@/utils/format-utils.js'\nimport { getSongDetailAction } from '@/pages/player/store'\n\nimport { SongItemWrapper } from './style'\nimport { PlayCircleOutlined } from '@ant-design/icons'\nimport { message } from 'antd'\n\nfunction SongItem(props) {\n  // props/state\n  const {\n    currentRanking,\n    coverPic,\n    // duration,\n    singer,\n    songId,\n    songName,\n    className = '',\n  } = props\n\n  // redux hook\n  const dispatch = useDispatch()\n  const { playlist } = useSelector(\n    (state) => ({\n      playlist: state.getIn(['player', 'playList']),\n    }),\n    shallowEqual\n  )\n\n  // other function\n  const playMusic = (e, isTo = false) => {\n    // 如果不跳转,那么组织超链接的默认行为\n    if (!isTo) e.preventDefault()\n    dispatch(getSongDetailAction(songId))\n    // 播放音乐\n    document.getElementById('audio').autoplay = true\n  }\n  const addPlaylist = useAddPlaylist(playlist, message)\n\n  return (\n    <SongItemWrapper className={className} isPic={coverPic} style={{ margin: '20px 0' }}>\n      <div className=\"song-item rank-count\">{currentRanking}</div>\n      {coverPic && (\n        <NavLink\n          to=\"/discover/song\"\n          className=\"song-item\"\n          onClick={(e) => playMusic(e, true)}\n        >\n          <img src={getSizeImage(coverPic, 50)} alt=\"\" />\n        </NavLink>\n      )}\n      <div className=\"song-item song-info\">\n        <div className=\"left-info\">\n          <PlayCircleOutlined\n            className=\"font-active\"\n            onClick={(e) => playMusic(e)}\n          />\n          <div className=\"singer-song\">\n            <a\n              href=\"/play\"\n              onClick={(e) => playMusic(e)}\n              className=\"text-nowrap\"\n            >\n              {songName}\n            </a>\n            <br/>\n            <NavLink\n              to=\"/discover/song\"\n              className=\"song-item singer\"\n              onClick={(e) => playMusic(e, true)}\n            >\n              {singer}\n            </NavLink>\n          </div>\n        </div>\n        <div className=\"right-operator\">\n          <button\n            href=\"/discover/recommend\"\n            className=\"sprite_icon2 btn addto\"\n            onClick={(e) => addPlaylist(e, songId)}\n          ></button>\n        </div>\n      </div>\n      {/* <div className=\"song-item duration\">{duration}</div> */}\n    </SongItemWrapper>\n  )\n}\n\nSongItem.propTypes = {\n  currentRanking: propTypes.number.isRequired,\n  coverPic: propTypes.string,\n  // duration: propTypes.string.isRequired,\n  singer: propTypes.string.isRequired,\n  songId: propTypes.number.isRequired,\n  className: propTypes.string,\n  songName: propTypes.string.isRequired,\n}\n\nexport default memo(SongItem)\n","import styled from 'styled-components'\n\nexport const RcmHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 33px;\n  padding: 0 10px 0 6px;\n  border-bottom: 2px solid #c10d0c;\n  background-position: -225px -156px;\n  line-height: 33px;\n`\n\nexport const RcmHeaderLeft = styled.div`\n  display: flex;\n  .hot-title {\n    display: flex;\n    margin-bottom: 5px;\n    margin-right: 18px;\n    a {\n      color: #333333;\n      &:hover {\n        text-decoration: none;\n      }\n    }\n  }\n  span {\n    line-height: 40px;\n  }\n`\n","import React, { memo } from 'react'\nimport propTypes from 'prop-types'\nimport { RcmHeaderLeft, RcmHeaderWrapper } from './style'\nimport { shallowEqual, useSelector } from 'react-redux'\n\nconst ThemeHeaderRmc = function ThemeHeaderRmc(props) {\n  const { title } = props\n\n  // redux\n  const { commentTotal } = useSelector(\n    state => ({\n      commentTotal: state.getIn(['player', 'currentCommentTotal'])\n    }),\n    shallowEqual\n  )\n\n  return (\n    <RcmHeaderWrapper>\n      <RcmHeaderLeft>\n        <h2 className=\"hot-title\">\n          <a href=\"/discover/recommend\" className=\"no-link hot-text\">\n            {title}\n          </a>\n        </h2>\n        {commentTotal && <span>共{commentTotal}条评论</span>}\n      </RcmHeaderLeft>\n    </RcmHeaderWrapper>\n  )\n}\n\nThemeHeaderRmc.propTypes = {\n  // title属性必填\n  title: propTypes.string.isRequired,\n}\n\nThemeHeaderRmc.defaultProps = {\n  keywords: []\n}\n\nexport default memo(ThemeHeaderRmc)\n","import styled from 'styled-components'\n\nexport const SongCommentWrapper = styled.div`\n  margin-top: 40px;\n  .header-comment {\n    color: #333;\n    font-weight: bold;\n    font-size: 16px;\n    border-bottom: 1px solid #cfcfcf;\n  }\n  .ant-comment-actions {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: -10px;\n  }\n  .comment-like {\n    &:hover {\n      border-bottom: solid 1px #ccc;\n    }\n  }\n`\n\nexport const WonderfulWrapper = styled.div`\n  margin-top: 20px;\n`\n// 最新评论\nexport const SoNewWrapper = styled.div``\n","import { Comment, Avatar, Form, Button, Input, message } from 'antd'\nimport React from 'react'\n\nconst { TextArea } = Input\n\nconst Editor = ({ onChange, onSubmit, submitting, value, onFocus }) => (\n  <>\n    <Form.Item>\n      <TextArea rows={4} onChange={onChange} value={value} onFocus={(e) => onFocus(e)} />\n    </Form.Item>\n    <Form.Item>\n      <Button\n        htmlType=\"submit\"\n        loading={submitting}\n        onClick={onSubmit}\n        type=\"primary\"\n      >\n        评论\n      </Button>\n    </Form.Item>\n  </>\n)\n\nexport default class ThemeComment extends React.Component {\n  constructor(props) {\n    super()\n    this.state = {\n      comments: [],\n      submitting: false,\n      value: '',\n      avatar: props.photo\n        ? props.photo\n        : 'https://gitee.com/xmkm/cloudPic/raw/master/img/default_avatar.jpg',\n    }\n  }\n\n  handleSubmit = () => {\n    if (!this.state.value) {\n      message.warning('请输入评论内容')\n      return\n    }\n\n    // this.setState(\n    //   {\n    //     submitting: true,\n    //   },\n    //   () => {\n    //     // 调登录接口\n    //     sendSongComment(this.props.id, this.state.value, this.props.cookie).then((res) => {\n    //       console.log('res :>>>', res)\n    //     })\n    //   }\n    // )\n    this.props.callbackOk(this.state.value)\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    })\n  }\n\n  handleFocus = (e) => {\n    !this.props.isLogin && e.target.blur()\n    this.props.onFocus(this.state.value)\n  } \n\n  render() {\n    const { submitting, value, avatar } = this.state\n    return (\n      <>\n        <Comment\n          avatar={<Avatar src={avatar} alt=\"Han Solo\" />}\n          content={\n            <Editor\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              submitting={submitting}\n              value={value}\n              onFocus={(e) => this.handleFocus(e)}\n            />\n          }\n        />\n      </>\n    )\n  }\n}\n","import React, {\n  memo,\n  useEffect,\n  useState,\n  createElement,\n  useCallback,\n} from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { Comment, Tooltip, Avatar, message } from 'antd'\nimport { LikeFilled, LikeOutlined } from '@ant-design/icons'\n// import { Pagination } from 'antd'\nimport HYPagination from '@/components/pagination/index'\nimport ThemeHeader from '@/components/theme-header'\nimport { SoNewWrapper, SongCommentWrapper, WonderfulWrapper } from './style'\nimport { changeCurrentCommentTotal, getHotCommentAction } from '../../store/actionCreator'\nimport { changeIsVisible } from '@/components/theme-login/store/index'\nimport { sendSongComment, getSongComment } from '@/service/player'\nimport { getCount } from '../../../../utils/format-utils'\nimport ThemeComment from '../../../../components/theme-comment'\nimport { sendLikeComment } from '../../../../service/songs'\n\nfunction SongComment() {\n  // props/state\n  const [songComment, setSongComment] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [total, setTotal] = useState(0)\n  const [flag, setFlag] = useState(false)\n  const [liked, setLiked] = useState([]) // 歌曲的点赞状态\n  // const [total, setTotal] = useState(0)\n\n  // redux hook\n  const dispatch = useDispatch()\n  const {\n    hotComments,\n    currentSongId,\n    isLogin,\n    cookie,\n    avatarUrl,\n  } = useSelector(\n    (state) => ({\n      hotComments: state.getIn(['player', 'hotComments']),\n      currentSongId: state.getIn(['player', 'currentSong', 'id']),\n      isLogin: state.getIn(['loginState', 'isLogin']),\n      cookie: state.getIn(['loginState', 'cookie']),\n      avatarUrl: state.getIn(['loginState', 'profile', 'avatarUrl']),\n    }),\n    shallowEqual\n  )\n\n  // other hooks\n  useEffect(() => {\n    dispatch(getHotCommentAction(currentSongId))\n    getSongComment(currentSongId).then((res) => {\n      setSongComment(res.comments)\n      // console.log(res)\n      setTotal(res.total)\n      dispatch(changeCurrentCommentTotal(res.total))\n      // likedArr.push(res)\n      // setTotal(res.total)\n    })\n  }, [dispatch, currentSongId])\n\n  // other handle\n  function formatDate(time = +new Date()) {\n    var date = new Date(time + 8 * 3600 * 1000) // 增加8小时\n    return date.toJSON().substr(0, 19).replace('T', ' ')\n  }\n  // 点赞评论\n  const likeComment = (index, data) => {\n    // if (liked[index].count >= 1) return\n    // 登录鉴权\n    if (!isLogin) { // 没登陆\n      dispatch(changeIsVisible(true))\n    }\n    if (!flag) {\n      liked[index].liked = true\n      liked[index].count += 1\n      setLiked(liked)\n      /* 调点赞接口 */\n      // console.log(data)\n      sendLikeComment(currentSongId, data.commentId, 1, cookie).then((res) => {\n        console.log('res :>>>', res)\n        // if(res.message !== 'exist') message.success('以点赞过啦')\n        // else message.success('点赞成功')\n        if (res.code === 200) message.success('点赞成功')\n        else message.success('请稍后再试')\n      })\n    } else {\n      liked[index].liked = false\n      liked[index].count -= 1\n      setLiked(liked)\n      setFlag(true)\n      /* 调取消点赞接口 */\n      // console.log('disliked')\n      /* 调取消点赞赞接口 */\n      sendLikeComment(data.commentId, 0, cookie).then((res) => {\n        if (res.code === 200) message.success('取消点赞成功')\n        else message.success('取消点赞成功')\n      })\n    }\n    setFlag(!flag)\n  }\n\n  // 分页\n  const changePage = useCallback(\n    (currentPage) => {\n      setCurrentPage(currentPage)\n      // offset=(当前页数-1)*limit\n      const targePageCount = (currentPage - 1) * 20\n      getSongComment(currentSongId, 20, targePageCount).then((res) => {\n        setSongComment(res.comments)\n        setTotal(res.total)\n      })\n    },\n    [currentSongId]\n  )\n\n  // template html action\n  // 点赞HTML\n  const getLikeTemplateAction = (item, index) => {\n    liked.push({\n      liked: item.liked,\n      count: item.likedCount,\n    })\n    // console.log('item, index :>>>', item, index)\n    return [\n      <Tooltip key=\"comment-basic-like\" title=\"Like\" className=\"comment-like\">\n        <span onClick={() => likeComment(index, item)}>\n          {createElement(\n            liked[index].liked === true ? LikeFilled : LikeOutlined\n          )}\n          <span className=\"comment-action\">{getCount(liked[index].count)}</span>\n        </span>\n      </Tooltip>,\n    ]\n  }\n  // 评论歌曲校验(获取焦点)\n  const commentSongcheckout = () => {\n    // 没登录\n    if (!isLogin) dispatch(changeIsVisible(true))\n  }\n\n  // 评论成功\n  const commentCallbackOk = (value) => {\n    sendSongComment(currentSongId, value, cookie).then((res) => {\n      if (res.code === 200) {\n        message.success('评论成功').then(() => {\n          getSongComment(currentSongId).then((res) => {\n            setSongComment(res.comments)\n            setTotal(res.total)\n          })\n        })\n      }\n    })\n  }\n\n  return (\n    <SongCommentWrapper>\n      <ThemeHeader title=\"评论\" />\n      {/* 评论内容 */}\n      <ThemeComment\n        onFocus={() => commentSongcheckout()}\n        callbackOk={(value) => commentCallbackOk(value)}\n        isLogin={isLogin}\n        photo={avatarUrl}\n      />\n      {/* 精彩评论 */}\n      <WonderfulWrapper>\n        <div className=\"header-comment\">精彩评论</div>\n        {hotComments &&\n          hotComments.map((item, index) => {\n            return (\n              <Comment\n                // actions={getLikeTemplateAction(item, index)}\n                key={item.commentId}\n                author={item.user.nickname}\n                avatar={<Avatar src={item.user.avatarUrl} alt=\"Han Solo\" />}\n                content={<p>{item.content}</p>}\n                datetime={\n                  <Tooltip title={formatDate(item.time)}>\n                    {formatDate(item.time).slice(\n                      0,\n                      formatDate(item.time).indexOf(' ')\n                    )}\n                  </Tooltip>\n                }\n              />\n            )\n          })}\n      </WonderfulWrapper>\n      {/* 最新评论 */}\n      <SoNewWrapper>\n        <div className=\"header-comment\">最新评论</div>\n        {songComment &&\n          songComment.map((item, index) => {\n            return (\n              <Comment\n                actions={getLikeTemplateAction(item, index)}\n                key={item.commentId}\n                author={item.user.nickname}\n                avatar={<Avatar src={item.user.avatarUrl} alt=\"Han Solo\" />}\n                content={<p>{item.content}</p>}\n                datetime={\n                  <Tooltip title={formatDate(item.time)}>\n                    {formatDate(item.time).slice(0, formatDate(item.time))}\n                  </Tooltip>\n                }\n              />\n            )\n          })}\n      </SoNewWrapper>\n      {/* 分页 */}\n      <HYPagination\n        currentPage={currentPage}\n        pageSize={20}\n        total={total}\n        onPageChange={(currentPage) => changePage(currentPage)}\n      />\n    </SongCommentWrapper>\n  )\n}\n\nexport default memo(SongComment)\n","import React, { memo, useEffect, useState } from 'react'\nimport { SongDetailWrapper, SongLeft, SongRight } from './style'\nimport SongInfo from './child-pages/song-info'\nimport SongItem from './child-pages/song-item'\nimport SongComment from './child-pages/song-comment'\nimport { useGlobalKeyboardEvent } from '../../hooks/change-state'\nimport { getSimilaritySong } from '@/service/player'\nimport { shallowEqual, useSelector } from 'react-redux'\nimport { formatMinuteSecond } from '../../utils/format-utils'\n\n// 歌曲详情页面\nexport default memo(function JMSongDetail(props) {\n  // props/state  先写死: 167876    到时候换这个: props.location.state.id\n  // 之后根路id发送请求,数据保存在redux当中\n  const [songlist, setSonglist] = useState([])\n\n  // redux\n  const { currentSongId } = useSelector(\n    (state) => ({\n      currentSongId: state.getIn(['player', 'currentSong', 'id']),\n    }),\n    shallowEqual\n  )\n\n  // other hook\n  useEffect(() => {\n    getSimilaritySong(currentSongId).then((res) => {\n      setSonglist(res.songs)\n    })\n  }, [currentSongId])\n\n  // custom hook\n  useGlobalKeyboardEvent() // 全局注册 ctrl+k 唤醒下拉框\n  return (\n    <SongDetailWrapper>\n      <div className=\"content w980\">\n        <SongLeft>\n          <SongInfo />\n          <SongComment />\n        </SongLeft>\n        <SongRight>\n          {/* <h2>SongInclude 包含音乐</h2>\n          <h2>SongRelevant 相关音乐</h2>\n          <h2>客户端下载</h2> */}\n          {songlist &&\n            songlist.map((item, index) => {\n              return (\n                <SongItem\n                  key={item.id}\n                  currentRanking={index + 1}\n                  className=\"song_item\"\n                  // coverPic={index < 3?item.al.picUrl:''}\n                  duration={formatMinuteSecond(item.dt)}\n                  songName={item.name}\n                  singer={item.artists[0].name}\n                  songId={item.id}\n                />\n              )\n            })}\n        </SongRight>\n      </div>\n    </SongDetailWrapper>\n  )\n})\n","import request from './request'\n\n// 获取歌单列表\nexport function getSongList(limit, offset = 0) {\n  return request({\n    url: '/top/playlist',\n    params: {\n      limit,\n      offset\n    }\n  })\n}\n\nexport function getSongCategory() {\n  return request({\n    url: \"/playlist/catlist\"\n  })\n}\n\nexport function getSongCategoryList(cat = \"全部\", offset = 0, limit = 35) {\n  return request({\n    url: \"/top/playlist\",\n    params: {\n      cat,\n      limit,\n      offset\n    }\n  })\n}\n\n// 点赞\n/* cid : 评论 id\nt : 是否点赞 ,1 为点赞 ,0 为取消点赞 */\nexport function sendLikeComment(id, cid, t, cookie) {\n  return request({\n    url: \"/comment/like\",\n    params: {\n      id,\n      cid,\n      t,\n      type: 0,\n      cookie\n    }\n  })\n}\n\n/* 收藏歌单, 传递歌单id */\nexport function sendCollectSonglist(id, cookie) {\n  return request({\n    url: \"/playlist/subscribe\",\n    params: {\n      t: 1,\n      id,\n      cookie\n    }\n  })\n}\n"],"names":["PaginationWrapper","styled","memo","props","currentPage","total","onPageChange","className","size","current","defaultCurrent","pageSize","showSizeChanger","itemRender","type","originalElement","onChange","useAddPlaylist","playlist","message","dispatch","useDispatch","e","id","preventDefault","getAddSongDetailAction","getFindIdIndex","success","content","useChangeDropBoxState","state","changeFocusStateAction","useGlobalKeyboardEvent","showDropBoxState","closeDropBoxState","document","addEventListener","ctrlKey","key","SongDetailWrapper","require","SongLeft","SongRight","SongInfoWrapper","useSelector","currentSong","getIn","lyricList","totalComment","shallowEqual","Panel","Collapse","pirUrl","al","picUrl","songName","name","singer","ar","album","src","getSizeImage","alt","href","onClick","querySelector","play","window","open","getPlayUrl","header","map","item","totalTime","SongItemWrapper","SongItem","currentRanking","coverPic","songId","playMusic","isTo","getSongDetailAction","getElementById","autoplay","addPlaylist","isPic","style","margin","to","PlayCircleOutlined","RcmHeaderWrapper","RcmHeaderLeft","ThemeHeaderRmc","title","commentTotal","defaultProps","keywords","SongCommentWrapper","WonderfulWrapper","SoNewWrapper","TextArea","Input","Editor","onSubmit","submitting","value","onFocus","rows","htmlType","loading","ThemeComment","handleSubmit","callbackOk","handleChange","setState","target","handleFocus","isLogin","blur","comments","avatar","photo","this","React","SongComment","useState","songComment","setSongComment","setCurrentPage","setTotal","flag","setFlag","liked","setLiked","hotComments","currentSongId","cookie","avatarUrl","formatDate","time","Date","date","toJSON","substr","replace","useEffect","getHotCommentAction","getSongComment","then","res","changeCurrentCommentTotal","changePage","useCallback","targePageCount","getLikeTemplateAction","index","push","count","likedCount","data","changeIsVisible","sendLikeComment","commentId","code","console","log","likeComment","createElement","LikeFilled","LikeOutlined","getCount","sendSongComment","commentCallbackOk","author","user","nickname","datetime","slice","indexOf","actions","songlist","setSonglist","getSimilaritySong","songs","duration","formatMinuteSecond","dt","artists","getSongCategory","request","url","getSongCategoryList","cat","offset","limit","params","cid","t","sendCollectSonglist"],"sourceRoot":""}