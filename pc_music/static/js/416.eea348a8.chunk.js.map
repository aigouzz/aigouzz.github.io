{"version":3,"file":"static/js/416.eea348a8.chunk.js","mappings":"yNAOO,SAASA,IAAsC,IAAhBC,EAAK,wDACnCC,GAAWC,EAAAA,EAAAA,MACjB,OAAO,WACLD,GAASE,EAAAA,EAAAA,GAAuBH,GAClC,CACF,CAKO,SAAeI,IAAsB,+BAqB5C,aARC,OAQD,0BArBO,2FACCC,EAAmBN,GAAsB,GACzCO,EAAoBP,GAAsB,GAChDQ,SAASC,iBAAiB,WAAW,SAACC,GAChCA,EAAEC,SAAqB,MAAVD,EAAEE,MAEjBF,EAAEG,iBACFP,KAEY,WAAVI,EAAEE,KACJL,GAEJ,IAAE,4CACH,sB,uJC5BYO,E,SAAgBC,QAAAA,IAAU,6gD,gCCWvC,GAAeC,EAAAA,EAAAA,OAAK,SAAkBC,GAEpC,IAAQC,EAAUD,EAAVC,MACR,GAA4CC,EAAAA,EAAAA,UAAS,MAAK,eAAnDC,EAAc,KAAEC,EAAiB,KACxC,GAAsCF,EAAAA,EAAAA,UAAS,MAAK,eAA7CG,EAAW,KAAEC,EAAc,KAG1BC,EAAWC,EAAAA,EAAAA,OACXC,EAASC,EAAAA,MAASV,EAAMW,SAASC,QAAjCH,KAuBR,OAnBAI,EAAAA,EAAAA,YAAU,WACRT,EAAkBK,EAEpB,GAAG,KAGHI,EAAAA,EAAAA,YAAU,YAEPC,aAAaC,eAAe,gBAC3BD,aAAaE,QAAQ,cAAe,GACtC,IAAMX,EAAcY,KAAKC,MAAMJ,aAAaK,QAAQ,gBACpDb,EAAeD,EACjB,GAAG,KAGHQ,EAAAA,EAAAA,YAAU,WACRC,aAAaE,QAAQ,cAAeC,KAAKG,UAAUf,GACrD,GAAG,CAACA,KAGF,SAACR,EAAa,CAACwB,SAAStC,EAAAA,EAAAA,KAAwB,UAC9C,iBAAKuC,UAAU,eAAc,WAC3B,gBAAKA,UAAU,iBAAgB,UAC7B,SAACf,EAAM,CACLgB,MAAOpB,EACPqB,MAAO,CAAEC,MAAO,KAChBC,SAAU,SAACjC,GAAC,OAAKW,EAAkBX,EAAEkC,OAAOJ,MAAM,OAGtD,iBAAKD,UAAU,iBAAgB,WAC7B,iBAAKA,UAAU,cAAa,0BACtBb,EAAI,mBACR,iBAAMa,UAAU,eAAc,kBAAY,mBAE5C,gBAAKA,UAAU,wBAAuB,SACnCM,EAAAA,GAAAA,KAAqB,SAACC,EAAMC,GAC3B,OACE,UAAC,KAAO,CAENC,GAAI,CAAEC,SAAUH,EAAKI,KAAI,gBAAYxB,IACrCa,UAAS,2BACPjB,IAAgByB,EAAQ,SAAW,IAErCT,QAAS,kBAAMf,EAAewB,EAAM,EAAC,UAEpCzB,IAAgByB,GAAQ,qBAAUC,GAAIF,EAAKI,KAAI,gBAAY9B,KAAqB,MACjF,wBAAK0B,EAAKK,UARLL,EAAKI,KAWhB,OAEDE,EAAAA,EAAAA,GAAalC,EAAMmC,eAK9B,G","sources":["hooks/change-state.js","pages/search/style.js","pages/search/index.js"],"sourcesContent":["import { changeFocusStateAction } from '@/components/app-header/store/actionCreator'\nimport { useDispatch } from 'react-redux'\n\n/**\n * 调用该函数,返回一个函数,改变搜索下拉框的状态(默认为false)\n * 改变搜索下拉框的状态\n */\nexport function useChangeDropBoxState(state = false) {\n  const dispatch = useDispatch()\n  return () => {\n    dispatch(changeFocusStateAction(state))\n  }\n}\n\n/**\n * 调用该hook注册全局键盘事件: ctrl+k唤醒搜索框  esc关闭下拉框\n */\nexport async function useGlobalKeyboardEvent() {\n  const showDropBoxState = useChangeDropBoxState(true)\n  const closeDropBoxState = useChangeDropBoxState(false)\n  document.addEventListener('keydown', (e) => {\n    if (e.ctrlKey && e.key === 'k') {\n      // 阻止默认事件\n      e.preventDefault()\n      showDropBoxState()\n    }\n    if (e.key === 'Escape') {\n      closeDropBoxState()\n    }\n  })\n}\n\n/**\n * 唤醒登录框\n */\n// export async function useAwakenModal() {\n//   const dispatch = useDispatch()\n//   dispatch(changeIsVisible(true))\n// }\n","import styled from 'styled-components'\n\nexport const SearchWrapper = styled.div`\n  .content {\n    padding: 40px;\n    height: 1000px;\n    background-color: #fff;\n    border: 1px solid #d3d3d3;\n    border-width: 0 1px;\n    margin: 0 auto;\n\n    .search-wrapper {\n      display: flex;\n      justify-content: center;\n\n      .ant-input-search {\n        border-radius: 8px;\n        height: 42px;\n        border-color: #c9c9c9;\n        box-shadow: inset 0 0 0 0 #cdcde6,inset 0 0 1px 1px #fff,0 1px 2px 1px rgba(30,35,90,0.4);\n      }\n    }\n    .search-content {\n\n      .search-info {\n        margin: 28px 0 17px;\n        color: #999;\n\n        .music-amount {\n          color: #c20c0c;\n        }\n      }\n\n      .search-category {\n        display: flex;\n        height: 39px;\n        border: 1px solid #ccc;\n        border-width: 0 1px;\n        background-position: 0 0;\n        background-repeat: repeat-x;\n\n        .route-item {\n          width: 112px;\n          height: 37px;\n          text-align: center;\n          font-size: 14px;\n\n          &.active {\n            background-position: left -90px;\n            border-right: solid 1px #ccc;\n          }\n\n          &:hover {\n            background-position: left -90px;\n            border-right: solid 1px #ccc;\n            text-decoration: none;\n          }\n\n          em {\n            display: block;\n            width: 108px;\n            padding: 2px 2px 0 0;\n            line-height: 37px;\n            cursor: pointer;\n            text-align: center;\n          }\n        }\n      }\n    }\n  }\n`\n","/* eslint-disable */\n\nimport React, { memo, useState, useEffect } from 'react'\n\nimport qs from 'query-string'\nimport { useChangeDropBoxState } from '@/hooks/change-state'\nimport { searchCategories } from '@/common/local-data'\n\nimport { Input } from 'antd'\nimport { SearchWrapper } from './style'\nimport { NavLink, redirect } from 'react-router-dom'\nimport { renderRoutes } from 'react-router-config'\n\nexport default memo(function JMSearch(props) {\n  // props/state\n  const { route } = props\n  const [searchSongName, setSearchSongName] = useState(null)// 搜索歌曲名字\n  const [activeIndex, setActiveIndex] = useState(null)// 控制导航item的active\n\n  // other handle\n  const { Search } = Input\n  const { song } = qs.parse(props.location.search)\n\n  // other hooks\n  // (组件渲染更新歌曲名字)\n  useEffect(() => {\n    setSearchSongName(song)\n    // eslint-disable-next-line\n  }, [])\n\n  // (本次存储索引: NavLink选中状态的索引)\n  useEffect(() => {\n    // 判断本地存储是否包含key: activeIndex\n    !localStorage.hasOwnProperty('activeIndex') &&\n      localStorage.setItem('activeIndex', 0)\n    const activeIndex = JSON.parse(localStorage.getItem('activeIndex'))\n    setActiveIndex(activeIndex)\n  }, [])\n\n  // 更新activeIndex索引时保存本地存储\n  useEffect(() => {\n    localStorage.setItem('activeIndex', JSON.stringify(activeIndex))\n  }, [activeIndex])\n\n  return (\n    <SearchWrapper onClick={useChangeDropBoxState()}>\n      <div className=\"w980 content\">\n        <div className=\"search-wrapper\">\n          <Search\n            value={searchSongName}\n            style={{ width: 490 }}\n            onChange={(e) => setSearchSongName(e.target.value)}\n          />\n        </div>\n        <div className=\"search-content\">\n          <div className=\"search-info\">\n            搜索\"{song}\", 找到\n            <span className=\"music-amount\"> 20 </span>单曲\n          </div>\n          <div className=\"m-tab search-category\">\n            {searchCategories.map((item, index) => {\n              return (\n                <NavLink\n                  key={item.link}\n                  to={{ pathname: item.link + `&song=${song}` }}\n                  className={`route-item m-tab ${\n                    activeIndex === index ? 'active' : ''\n                  }`}\n                  onClick={() => setActiveIndex(index)}\n                >\n                  {activeIndex === index ? <redirect to={item.link + `&song=${searchSongName}`} />:null}\n                  <em>{item.title}</em>\n                </NavLink>\n              )\n            })}\n          </div>\n          {renderRoutes(route.routes)}\n        </div>\n      </div>\n    </SearchWrapper>\n  )\n})\n"],"names":["useChangeDropBoxState","state","dispatch","useDispatch","changeFocusStateAction","useGlobalKeyboardEvent","showDropBoxState","closeDropBoxState","document","addEventListener","e","ctrlKey","key","preventDefault","SearchWrapper","styled","memo","props","route","useState","searchSongName","setSearchSongName","activeIndex","setActiveIndex","Search","Input","song","qs","location","search","useEffect","localStorage","hasOwnProperty","setItem","JSON","parse","getItem","stringify","onClick","className","value","style","width","onChange","target","searchCategories","item","index","to","pathname","link","title","renderRoutes","routes"],"sourceRoot":""}