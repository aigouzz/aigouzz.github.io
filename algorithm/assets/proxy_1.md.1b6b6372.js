import{_ as a,c as n,b as l,w as p,a as o,r as e,o as t,d as c}from"./app.bff3aa87.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u9898\u76EE","slug":"\u9898\u76EE","link":"#\u9898\u76EE","children":[]},{"level":2,"title":"\u9898\u76EE\u5927\u610F","slug":"\u9898\u76EE\u5927\u610F","link":"#\u9898\u76EE\u5927\u610F","children":[]},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF","link":"#\u89E3\u9898\u601D\u8DEF","children":[]},{"level":2,"title":"\u4EE3\u7801","slug":"\u4EE3\u7801","link":"#\u4EE3\u7801","children":[]}],"relativePath":"proxy/1.md"}'),r={name:"proxy/1.md"},y=o(`<h2 id="\u9898\u76EE" tabindex="-1">\u9898\u76EE <a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a></h2><p>Given an array of integers, return indices of the two numbers such that they add up to a specific target.</p><p>You may assume that each input would have exactly one solution, and you may not use the same element twice.</p><ul><li>Example:</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Given nums = [2, 7, 11, 15], target = 9,</p><p>Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1]</p></div><h2 id="\u9898\u76EE\u5927\u610F" tabindex="-1">\u9898\u76EE\u5927\u610F <a class="header-anchor" href="#\u9898\u76EE\u5927\u610F" aria-hidden="true">#</a></h2><p>\u5728\u6570\u7EC4\u4E2D\u627E\u5230 2 \u4E2A\u6570\u4E4B\u548C\u7B49\u4E8E\u7ED9\u5B9A\u503C\u7684\u6570\u5B57\uFF0C\u7ED3\u679C\u8FD4\u56DE 2 \u4E2A\u6570\u5B57\u5728\u6570\u7EC4\u4E2D\u7684\u4E0B\u6807\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u8FD9\u9053\u9898\u6700\u4F18\u7684\u505A\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6\u662F O(n)\u3002</p><p>\u987A\u5E8F\u626B\u63CF\u6570\u7EC4\uFF0C\u5BF9\u6BCF\u4E00\u4E2A\u5143\u7D20\uFF0C\u5728 map \u4E2D\u627E\u80FD\u7EC4\u5408\u7ED9\u5B9A\u503C\u7684\u53E6\u4E00\u534A\u6570\u5B57\uFF0C\u5982\u679C\u627E\u5230\u4E86\uFF0C\u76F4\u63A5\u8FD4\u56DE 2 \u4E2A\u6570\u5B57\u7684\u4E0B\u6807\u5373\u53EF\u3002\u5982\u679C\u627E\u4E0D\u5230\uFF0C\u5C31\u628A\u8FD9\u4E2A\u6570\u5B57\u5B58\u5165 map \u4E2D\uFF0C\u7B49\u5F85\u626B\u5230\u201C\u53E6\u4E00\u534A\u201D\u6570\u5B57\u7684\u65F6\u5019\uFF0C\u518D\u53D6\u51FA\u6765\u8FD4\u56DE\u7ED3\u679C\u3002</p><h2 id="\u4EE3\u7801" tabindex="-1">\u4EE3\u7801 <a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> leetcode</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">func </span><span style="color:#82AAFF;">twoSum</span><span style="color:#A6ACCD;">(nums []int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> target int) []int </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#FFCB6B;">m</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">make</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">map</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">int</span><span style="color:#F07178;">]</span><span style="color:#A6ACCD;">int</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">for</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">len</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">nums</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#FFCB6B;">another</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">target</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">nums</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ok</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">m</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">another</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ok</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> []</span><span style="color:#A6ACCD;">int</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">m[</span><span style="color:#A6ACCD;">another</span><span style="color:#F07178;">], i}</span></span>
<span class="line"><span style="color:#F07178;">		}</span></span>
<span class="line"><span style="color:#F07178;">		m[</span><span style="color:#A6ACCD;">nums</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]] = i</span></span>
<span class="line"><span style="color:#F07178;">	}</span></span>
<span class="line"><span style="color:#F07178;">	return nil</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"></span></code></pre></div>`,12);function F(i,D,C,A,d,u){const s=e("font");return t(),n("div",null,[l(s,{style:{"font-size":"36px"}},{default:p(()=>[c("two sum\u7B97\u6CD5")]),_:1}),y])}const _=a(r,[["render",F]]);export{m as __pageData,_ as default};
